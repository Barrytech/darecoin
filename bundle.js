/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var Main = __webpack_require__(/*! ./output/Main */ 1);

	Main.main();


/***/ }),
/* 1 */
/*!******************************!*\
  !*** ./output/Main/index.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Coroutine = __webpack_require__(/*! ../Control.Coroutine */ 31);
	var Control_Monad_Aff = __webpack_require__(/*! ../Control.Monad.Aff */ 122);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ../Control.Monad.Free.Trans */ 107);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_HTML = __webpack_require__(/*! ../DOM.HTML */ 156);
	var DOM_HTML_Types = __webpack_require__(/*! ../DOM.HTML.Types */ 158);
	var DOM_HTML_Window = __webpack_require__(/*! ../DOM.HTML.Window */ 177);
	var DOM_Node_ParentNode = __webpack_require__(/*! ../DOM.Node.ParentNode */ 182);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var React = __webpack_require__(/*! ../React */ 184);
	var React_DOM = __webpack_require__(/*! ../React.DOM */ 351);
	var React_DOM_Props = __webpack_require__(/*! ../React.DOM.Props */ 352);
	var ReactDOM = __webpack_require__(/*! ../ReactDOM */ 354);
	var Thermite = __webpack_require__(/*! ../Thermite */ 358);
	var Increment = (function () {
	    function Increment() {

	    };
	    Increment.value = new Increment();
	    return Increment;
	})();
	var Decrement = (function () {
	    function Decrement() {

	    };
	    Decrement.value = new Decrement();
	    return Decrement;
	})();
	var performAction = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v instanceof Increment) {
	                return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (state) {
	                    var $15 = {};
	                    for (var $16 in state) {
	                        if ({}.hasOwnProperty.call(state, $16)) {
	                            $15[$16] = state[$16];
	                        };
	                    };
	                    $15.counter = state.counter + 10 | 0;
	                    return $15;
	                }));
	            };
	            if (v instanceof Decrement) {
	                return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (state) {
	                    var $18 = {};
	                    for (var $19 in state) {
	                        if ({}.hasOwnProperty.call(state, $19)) {
	                            $18[$19] = state[$19];
	                        };
	                    };
	                    $18.counter = state.counter - 1 | 0;
	                    return $18;
	                }));
	            };
	            throw new Error("Failed pattern match at Main line 42, column 1 - line 42, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var initialState = {
	    counter: 0
	};
	var displayState = function (n) {
	    return "The state is: " + Data_Show.show(Data_Show.showInt)(n);
	};
	var render = function (dispatch) {
	    return function (v) {
	        return function (state) {
	            return function (v1) {
	                return [ React_DOM["p'"]([ React_DOM.text("Hello NewLab!\x0a"), React_DOM.text(displayState(state.counter)) ]), React_DOM["p'"]([ React_DOM.button([ React_DOM_Props.onClick(function (v2) {
	                    return dispatch(Increment.value);
	                }) ])([ React_DOM.text("Increment") ]), React_DOM.button([ React_DOM_Props.onClick(function (v2) {
	                    return dispatch(Decrement.value);
	                }) ])([ React_DOM.text("Decrement") ]) ]) ];
	            };
	        };
	    };
	};
	var spec = Thermite.simpleSpec(performAction)(render);
	var main = (function (dictPartial) {
	    var component = Thermite.createClass(spec)(initialState);
	    return function __do() {
	        var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
	        var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.fromJust(dictPartial))(DOM_Node_ParentNode.querySelector("#container")(DOM_HTML_Types.htmlDocumentToParentNode(v)))();
	        return ReactDOM.render(React.createFactory(component)({}))(v1)();
	    };
	})();
	module.exports = {
	    displayState: displayState,
	    Increment: Increment,
	    Decrement: Decrement,
	    initialState: initialState,
	    render: render,
	    performAction: performAction,
	    spec: spec,
	    main: main
	};


/***/ }),
/* 2 */
/*!**************************************!*\
  !*** ./output/Control.Bind/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 3);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Bind = function (Apply0, bind) {
	    this.Apply0 = Apply0;
	    this.bind = bind;
	};
	var Discard = function (discard) {
	    this.discard = discard;
	};
	var discard = function (dict) {
	    return dict.discard;
	};
	var bindFn = new Bind(function () {
	    return Control_Apply.applyFn;
	}, function (m) {
	    return function (f) {
	        return function (x) {
	            return f(m(x))(x);
	        };
	    };
	});
	var bindArray = new Bind(function () {
	    return Control_Apply.applyArray;
	}, $foreign.arrayBind);
	var bind = function (dict) {
	    return dict.bind;
	};
	var bindFlipped = function (dictBind) {
	    return Data_Function.flip(bind(dictBind));
	};
	var composeKleisliFlipped = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bindFlipped(dictBind)(f)(g(a));
	            };
	        };
	    };
	};
	var composeKleisli = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bind(dictBind)(f(a))(g);
	            };
	        };
	    };
	};
	var discardUnit = new Discard(function (dictBind) {
	    return bind(dictBind);
	});
	var ifM = function (dictBind) {
	    return function (cond) {
	        return function (t) {
	            return function (f) {
	                return bind(dictBind)(cond)(function (cond$prime) {
	                    if (cond$prime) {
	                        return t;
	                    };
	                    return f;
	                });
	            };
	        };
	    };
	};
	var join = function (dictBind) {
	    return function (m) {
	        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Bind: Bind,
	    bind: bind,
	    bindFlipped: bindFlipped,
	    Discard: Discard,
	    discard: discard,
	    join: join,
	    composeKleisli: composeKleisli,
	    composeKleisliFlipped: composeKleisliFlipped,
	    ifM: ifM,
	    bindFn: bindFn,
	    bindArray: bindArray,
	    discardUnit: discardUnit
	};


/***/ }),
/* 3 */
/*!****************************************!*\
  !*** ./output/Control.Bind/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.arrayBind = function (arr) {
	  return function (f) {
	    var result = [];
	    for (var i = 0, l = arr.length; i < l; i++) {
	      Array.prototype.push.apply(result, f(arr[i]));
	    }
	    return result;
	  };
	};


/***/ }),
/* 4 */
/*!*********************************************!*\
  !*** ./output/Control.Applicative/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Applicative = function (Apply0, pure) {
	    this.Apply0 = Apply0;
	    this.pure = pure;
	};
	var pure = function (dict) {
	    return dict.pure;
	};
	var unless = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (!v) {
	                return v1;
	            };
	            if (v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var when = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v) {
	                return v1;
	            };
	            if (!v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var liftA1 = function (dictApplicative) {
	    return function (f) {
	        return function (a) {
	            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
	        };
	    };
	};
	var applicativeFn = new Applicative(function () {
	    return Control_Apply.applyFn;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	var applicativeArray = new Applicative(function () {
	    return Control_Apply.applyArray;
	}, function (x) {
	    return [ x ];
	});
	module.exports = {
	    Applicative: Applicative,
	    pure: pure,
	    liftA1: liftA1,
	    unless: unless,
	    when: when,
	    applicativeFn: applicativeFn,
	    applicativeArray: applicativeArray
	};


/***/ }),
/* 5 */
/*!***************************************!*\
  !*** ./output/Control.Apply/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 6);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Apply = function (Functor0, apply) {
	    this.Functor0 = Functor0;
	    this.apply = apply;
	};
	var applyFn = new Apply(function () {
	    return Data_Functor.functorFn;
	}, function (f) {
	    return function (g) {
	        return function (x) {
	            return f(x)(g(x));
	        };
	    };
	});
	var applyArray = new Apply(function () {
	    return Data_Functor.functorArray;
	}, $foreign.arrayApply);
	var apply = function (dict) {
	    return dict.apply;
	};
	var applyFirst = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
	        };
	    };
	};
	var applySecond = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
	        };
	    };
	};
	var lift2 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
	            };
	        };
	    };
	};
	var lift3 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
	                };
	            };
	        };
	    };
	};
	var lift4 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
	                    };
	                };
	            };
	        };
	    };
	};
	var lift5 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return function (e) {
	                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Apply: Apply,
	    apply: apply,
	    applyFirst: applyFirst,
	    applySecond: applySecond,
	    lift2: lift2,
	    lift3: lift3,
	    lift4: lift4,
	    lift5: lift5,
	    applyFn: applyFn,
	    applyArray: applyArray
	};


/***/ }),
/* 6 */
/*!*****************************************!*\
  !*** ./output/Control.Apply/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.arrayApply = function (fs) {
	  return function (xs) {
	    var l = fs.length;
	    var k = xs.length;
	    var result = new Array(l*k);
	    var n = 0;
	    for (var i = 0; i < l; i++) {
	      var f = fs[i];
	      for (var j = 0; j < k; j++) {
	        result[n++] = f(xs[j]);
	      }
	    }
	    return result;
	  };
	};


/***/ }),
/* 7 */
/*!******************************************!*\
  !*** ./output/Control.Category/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Category = function (Semigroupoid0, id) {
	    this.Semigroupoid0 = Semigroupoid0;
	    this.id = id;
	};
	var id = function (dict) {
	    return dict.id;
	};
	var categoryFn = new Category(function () {
	    return Control_Semigroupoid.semigroupoidFn;
	}, function (x) {
	    return x;
	});
	module.exports = {
	    Category: Category,
	    id: id,
	    categoryFn: categoryFn
	};


/***/ }),
/* 8 */
/*!**********************************************!*\
  !*** ./output/Control.Semigroupoid/index.js ***!
  \**********************************************/
/***/ (function(module, exports) {

	// Generated by purs version 0.11.7
	"use strict";
	var Semigroupoid = function (compose) {
	    this.compose = compose;
	};
	var semigroupoidFn = new Semigroupoid(function (f) {
	    return function (g) {
	        return function (x) {
	            return f(g(x));
	        };
	    };
	});
	var compose = function (dict) {
	    return dict.compose;
	};
	var composeFlipped = function (dictSemigroupoid) {
	    return function (f) {
	        return function (g) {
	            return compose(dictSemigroupoid)(g)(f);
	        };
	    };
	};
	module.exports = {
	    compose: compose,
	    Semigroupoid: Semigroupoid,
	    composeFlipped: composeFlipped,
	    semigroupoidFn: semigroupoidFn
	};


/***/ }),
/* 9 */
/*!***************************************!*\
  !*** ./output/Data.Function/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var on = function (f) {
	    return function (g) {
	        return function (x) {
	            return function (y) {
	                return f(g(x))(g(y));
	            };
	        };
	    };
	};
	var flip = function (f) {
	    return function (b) {
	        return function (a) {
	            return f(a)(b);
	        };
	    };
	};
	var $$const = function (a) {
	    return function (v) {
	        return a;
	    };
	};
	var applyN = function (f) {
	    var go = function ($copy_n) {
	        return function ($copy_acc) {
	            var $tco_var_n = $copy_n;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(n, acc) {
	                if (n <= 0) {
	                    $tco_done = true;
	                    return acc;
	                };
	                if (Data_Boolean.otherwise) {
	                    $tco_var_n = n - 1 | 0;
	                    $copy_acc = f(acc);
	                    return;
	                };
	                throw new Error("Failed pattern match at Data.Function line 94, column 3 - line 96, column 37: " + [ n.constructor.name, acc.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_n, $copy_acc);
	            };
	            return $tco_result;
	        };
	    };
	    return go;
	};
	var applyFlipped = function (x) {
	    return function (f) {
	        return f(x);
	    };
	};
	var apply = function (f) {
	    return function (x) {
	        return f(x);
	    };
	};
	module.exports = {
	    flip: flip,
	    "const": $$const,
	    apply: apply,
	    applyFlipped: applyFlipped,
	    applyN: applyN,
	    on: on
	};


/***/ }),
/* 10 */
/*!**************************************!*\
  !*** ./output/Data.Boolean/index.js ***!
  \**************************************/
/***/ (function(module, exports) {

	// Generated by purs version 0.11.7
	"use strict";
	var otherwise = true;
	module.exports = {
	    otherwise: otherwise
	};


/***/ }),
/* 11 */
/*!**********************************!*\
  !*** ./output/Data.Ord/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 12);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Ord_Unsafe = __webpack_require__(/*! ../Data.Ord.Unsafe */ 20);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	var Ord = function (Eq0, compare) {
	    this.Eq0 = Eq0;
	    this.compare = compare;
	};
	var Ord1 = function (Eq10, compare1) {
	    this.Eq10 = Eq10;
	    this.compare1 = compare1;
	};
	var ordVoid = new Ord(function () {
	    return Data_Eq.eqVoid;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordUnit = new Ord(function () {
	    return Data_Eq.eqUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordString = new Ord(function () {
	    return Data_Eq.eqString;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordOrdering = new Ord(function () {
	    return Data_Ordering.eqOrdering;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        throw new Error("Failed pattern match at Data.Ord line 67, column 1 - line 67, column 37: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var ordNumber = new Ord(function () {
	    return Data_Eq.eqNumber;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordInt = new Ord(function () {
	    return Data_Eq.eqInt;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordChar = new Ord(function () {
	    return Data_Eq.eqChar;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordBoolean = new Ord(function () {
	    return Data_Eq.eqBoolean;
	}, Data_Ord_Unsafe.unsafeCompare);
	var compare1 = function (dict) {
	    return dict.compare1;
	};
	var compare = function (dict) {
	    return dict.compare;
	};
	var comparing = function (dictOrd) {
	    return function (f) {
	        return function (x) {
	            return function (y) {
	                return compare(dictOrd)(f(x))(f(y));
	            };
	        };
	    };
	};
	var greaterThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var v = compare(dictOrd)(a1)(a2);
	            if (v instanceof Data_Ordering.GT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var greaterThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var v = compare(dictOrd)(a1)(a2);
	            if (v instanceof Data_Ordering.LT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var signum = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
	            if ($33) {
	                return Data_Semiring.one(dictRing.Semiring0());
	            };
	            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
	        };
	    };
	};
	var lessThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var v = compare(dictOrd)(a1)(a2);
	            if (v instanceof Data_Ordering.LT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var lessThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var v = compare(dictOrd)(a1)(a2);
	            if (v instanceof Data_Ordering.GT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var max = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var v = compare(dictOrd)(x)(y);
	            if (v instanceof Data_Ordering.LT) {
	                return y;
	            };
	            if (v instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if (v instanceof Data_Ordering.GT) {
	                return x;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ v.constructor.name ]);
	        };
	    };
	};
	var min = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var v = compare(dictOrd)(x)(y);
	            if (v instanceof Data_Ordering.LT) {
	                return x;
	            };
	            if (v instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if (v instanceof Data_Ordering.GT) {
	                return y;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ v.constructor.name ]);
	        };
	    };
	};
	var ordArray = function (dictOrd) {
	    return new Ord(function () {
	        return Data_Eq.eqArray(dictOrd.Eq0());
	    }, (function () {
	        var toDelta = function (x) {
	            return function (y) {
	                var v = compare(dictOrd)(x)(y);
	                if (v instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if (v instanceof Data_Ordering.LT) {
	                    return 1;
	                };
	                if (v instanceof Data_Ordering.GT) {
	                    return -1 | 0;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ v.constructor.name ]);
	            };
	        };
	        return function (xs) {
	            return function (ys) {
	                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
	            };
	        };
	    })());
	};
	var ord1Array = new Ord1(function () {
	    return Data_Eq.eq1Array;
	}, function (dictOrd) {
	    return compare(ordArray(dictOrd));
	});
	var clamp = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
	            };
	        };
	    };
	};
	var between = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                if (lessThan(dictOrd)(x)(low)) {
	                    return false;
	                };
	                if (greaterThan(dictOrd)(x)(hi)) {
	                    return false;
	                };
	                return true;
	            };
	        };
	    };
	};
	var abs = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
	            if ($42) {
	                return x;
	            };
	            return Data_Ring.negate(dictRing)(x);
	        };
	    };
	};
	module.exports = {
	    Ord: Ord,
	    compare: compare,
	    Ord1: Ord1,
	    compare1: compare1,
	    lessThan: lessThan,
	    lessThanOrEq: lessThanOrEq,
	    greaterThan: greaterThan,
	    greaterThanOrEq: greaterThanOrEq,
	    comparing: comparing,
	    min: min,
	    max: max,
	    clamp: clamp,
	    between: between,
	    abs: abs,
	    signum: signum,
	    ordBoolean: ordBoolean,
	    ordInt: ordInt,
	    ordNumber: ordNumber,
	    ordString: ordString,
	    ordChar: ordChar,
	    ordUnit: ordUnit,
	    ordVoid: ordVoid,
	    ordArray: ordArray,
	    ordOrdering: ordOrdering,
	    ord1Array: ord1Array
	};


/***/ }),
/* 12 */
/*!************************************!*\
  !*** ./output/Data.Ord/foreign.js ***!
  \************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.ordArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var x = xs[i];
	        var y = ys[i];
	        var o = f(x)(y);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};


/***/ }),
/* 13 */
/*!*********************************!*\
  !*** ./output/Data.Eq/index.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 14);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	var Eq = function (eq) {
	    this.eq = eq;
	};
	var Eq1 = function (eq1) {
	    this.eq1 = eq1;
	};
	var eqVoid = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqUnit = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqString = new Eq($foreign.refEq);
	var eqNumber = new Eq($foreign.refEq);
	var eqInt = new Eq($foreign.refEq);
	var eqChar = new Eq($foreign.refEq);
	var eqBoolean = new Eq($foreign.refEq);
	var eq1 = function (dict) {
	    return dict.eq1;
	};
	var eq = function (dict) {
	    return dict.eq;
	};
	var eqArray = function (dictEq) {
	    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
	};
	var eq1Array = new Eq1(function (dictEq) {
	    return eq(eqArray(dictEq));
	});
	var notEq = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
	        };
	    };
	};
	var notEq1 = function (dictEq1) {
	    return function (dictEq) {
	        return function (x) {
	            return function (y) {
	                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
	            };
	        };
	    };
	};
	module.exports = {
	    Eq: Eq,
	    eq: eq,
	    notEq: notEq,
	    Eq1: Eq1,
	    eq1: eq1,
	    notEq1: notEq1,
	    eqBoolean: eqBoolean,
	    eqInt: eqInt,
	    eqNumber: eqNumber,
	    eqChar: eqChar,
	    eqString: eqString,
	    eqUnit: eqUnit,
	    eqVoid: eqVoid,
	    eqArray: eqArray,
	    eq1Array: eq1Array
	};


/***/ }),
/* 14 */
/*!***********************************!*\
  !*** ./output/Data.Eq/foreign.js ***!
  \***********************************/
/***/ (function(module, exports) {

	"use strict";

	exports.refEq = function (r1) {
	  return function (r2) {
	    return r1 === r2;
	  };
	};

	exports.eqArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      if (xs.length !== ys.length) return false;
	      for (var i = 0; i < xs.length; i++) {
	        if (!f(xs[i])(ys[i])) return false;
	      }
	      return true;
	    };
	  };
	};


/***/ }),
/* 15 */
/*!***********************************!*\
  !*** ./output/Data.Unit/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 16);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var showUnit = new Data_Show.Show(function (v) {
	    return "unit";
	});
	module.exports = {
	    showUnit: showUnit,
	    unit: $foreign.unit
	};


/***/ }),
/* 16 */
/*!*************************************!*\
  !*** ./output/Data.Unit/foreign.js ***!
  \*************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.unit = {};


/***/ }),
/* 17 */
/*!***********************************!*\
  !*** ./output/Data.Show/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 18);
	var Show = function (show) {
	    this.show = show;
	};
	var showString = new Show($foreign.showStringImpl);
	var showNumber = new Show($foreign.showNumberImpl);
	var showInt = new Show($foreign.showIntImpl);
	var showChar = new Show($foreign.showCharImpl);
	var showBoolean = new Show(function (v) {
	    if (v) {
	        return "true";
	    };
	    if (!v) {
	        return "false";
	    };
	    throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
	});
	var show = function (dict) {
	    return dict.show;
	};
	var showArray = function (dictShow) {
	    return new Show($foreign.showArrayImpl(show(dictShow)));
	};
	module.exports = {
	    Show: Show,
	    show: show,
	    showBoolean: showBoolean,
	    showInt: showInt,
	    showNumber: showNumber,
	    showChar: showChar,
	    showString: showString,
	    showArray: showArray
	};


/***/ }),
/* 18 */
/*!*************************************!*\
  !*** ./output/Data.Show/foreign.js ***!
  \*************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.showIntImpl = function (n) {
	  return n.toString();
	};

	exports.showNumberImpl = function (n) {
	  var str = n.toString();
	  return isNaN(str + ".0") ? str : str + ".0";
	};

	exports.showCharImpl = function (c) {
	  var code = c.charCodeAt(0);
	  if (code < 0x20 || code === 0x7F) {
	    switch (c) {
	      case "\x07": return "'\\a'";
	      case "\b": return "'\\b'";
	      case "\f": return "'\\f'";
	      case "\n": return "'\\n'";
	      case "\r": return "'\\r'";
	      case "\t": return "'\\t'";
	      case "\v": return "'\\v'";
	    }
	    return "'\\" + code.toString(10) + "'";
	  }
	  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
	};

	exports.showStringImpl = function (s) {
	  var l = s.length;
	  return "\"" + s.replace(
	    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
	    function (c, i) {
	      switch (c) {
	        case "\"":
	        case "\\":
	          return "\\" + c;
	        case "\x07": return "\\a";
	        case "\b": return "\\b";
	        case "\f": return "\\f";
	        case "\n": return "\\n";
	        case "\r": return "\\r";
	        case "\t": return "\\t";
	        case "\v": return "\\v";
	      }
	      var k = i + 1;
	      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
	      return "\\" + c.charCodeAt(0).toString(10) + empty;
	    }
	  ) + "\"";
	};

	exports.showArrayImpl = function (f) {
	  return function (xs) {
	    var ss = [];
	    for (var i = 0, l = xs.length; i < l; i++) {
	      ss[i] = f(xs[i]);
	    }
	    return "[" + ss.join(",") + "]";
	  };
	};


/***/ }),
/* 19 */
/*!***********************************!*\
  !*** ./output/Data.Void/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Void = function (x) {
	    return x;
	};
	var absurd = function (a) {
	    var spin = function ($copy_v) {
	        var $tco_result;
	        function $tco_loop(v) {
	            $copy_v = v;
	            return;
	        };
	        while (!false) {
	            $tco_result = $tco_loop($copy_v);
	        };
	        return $tco_result;
	    };
	    return spin(a);
	};
	var showVoid = new Data_Show.Show(absurd);
	module.exports = {
	    absurd: absurd,
	    showVoid: showVoid
	};


/***/ }),
/* 20 */
/*!*****************************************!*\
  !*** ./output/Data.Ord.Unsafe/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 21);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	module.exports = {
	    unsafeCompare: unsafeCompare
	};


/***/ }),
/* 21 */
/*!*******************************************!*\
  !*** ./output/Data.Ord.Unsafe/foreign.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.unsafeCompareImpl = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (x) {
	        return function (y) {
	          return x < y ? lt : x === y ? eq : gt;
	        };
	      };
	    };
	  };
	};


/***/ }),
/* 22 */
/*!***************************************!*\
  !*** ./output/Data.Ordering/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var LT = (function () {
	    function LT() {

	    };
	    LT.value = new LT();
	    return LT;
	})();
	var GT = (function () {
	    function GT() {

	    };
	    GT.value = new GT();
	    return GT;
	})();
	var EQ = (function () {
	    function EQ() {

	    };
	    EQ.value = new EQ();
	    return EQ;
	})();
	var showOrdering = new Data_Show.Show(function (v) {
	    if (v instanceof LT) {
	        return "LT";
	    };
	    if (v instanceof GT) {
	        return "GT";
	    };
	    if (v instanceof EQ) {
	        return "EQ";
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
	});
	var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof LT) {
	            return LT.value;
	        };
	        if (v instanceof GT) {
	            return GT.value;
	        };
	        if (v instanceof EQ) {
	            return v1;
	        };
	        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invert = function (v) {
	    if (v instanceof GT) {
	        return LT.value;
	    };
	    if (v instanceof EQ) {
	        return EQ.value;
	    };
	    if (v instanceof LT) {
	        return GT.value;
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
	};
	var eqOrdering = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof LT && v1 instanceof LT) {
	            return true;
	        };
	        if (v instanceof GT && v1 instanceof GT) {
	            return true;
	        };
	        if (v instanceof EQ && v1 instanceof EQ) {
	            return true;
	        };
	        return false;
	    };
	});
	module.exports = {
	    LT: LT,
	    GT: GT,
	    EQ: EQ,
	    invert: invert,
	    eqOrdering: eqOrdering,
	    semigroupOrdering: semigroupOrdering,
	    showOrdering: showOrdering
	};


/***/ }),
/* 23 */
/*!****************************************!*\
  !*** ./output/Data.Semigroup/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 24);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	var Semigroup = function (append) {
	    this.append = append;
	};
	var semigroupVoid = new Semigroup(function (v) {
	    return Data_Void.absurd;
	});
	var semigroupUnit = new Semigroup(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var semigroupString = new Semigroup($foreign.concatString);
	var semigroupArray = new Semigroup($foreign.concatArray);
	var append = function (dict) {
	    return dict.append;
	};
	var semigroupFn = function (dictSemigroup) {
	    return new Semigroup(function (f) {
	        return function (g) {
	            return function (x) {
	                return append(dictSemigroup)(f(x))(g(x));
	            };
	        };
	    });
	};
	module.exports = {
	    Semigroup: Semigroup,
	    append: append,
	    semigroupString: semigroupString,
	    semigroupUnit: semigroupUnit,
	    semigroupVoid: semigroupVoid,
	    semigroupFn: semigroupFn,
	    semigroupArray: semigroupArray
	};


/***/ }),
/* 24 */
/*!******************************************!*\
  !*** ./output/Data.Semigroup/foreign.js ***!
  \******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.concatString = function (s1) {
	  return function (s2) {
	    return s1 + s2;
	  };
	};

	exports.concatArray = function (xs) {
	  return function (ys) {
	    if (xs.length === 0) return ys;
	    if (ys.length === 0) return xs;
	    return xs.concat(ys);
	  };
	};


/***/ }),
/* 25 */
/*!***********************************!*\
  !*** ./output/Data.Ring/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 26);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Ring = function (Semiring0, sub) {
	    this.Semiring0 = Semiring0;
	    this.sub = sub;
	};
	var sub = function (dict) {
	    return dict.sub;
	};
	var ringUnit = new Ring(function () {
	    return Data_Semiring.semiringUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var ringNumber = new Ring(function () {
	    return Data_Semiring.semiringNumber;
	}, $foreign.numSub);
	var ringInt = new Ring(function () {
	    return Data_Semiring.semiringInt;
	}, $foreign.intSub);
	var ringFn = function (dictRing) {
	    return new Ring(function () {
	        return Data_Semiring.semiringFn(dictRing.Semiring0());
	    }, function (f) {
	        return function (g) {
	            return function (x) {
	                return sub(dictRing)(f(x))(g(x));
	            };
	        };
	    });
	};
	var negate = function (dictRing) {
	    return function (a) {
	        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
	    };
	};
	module.exports = {
	    Ring: Ring,
	    sub: sub,
	    negate: negate,
	    ringInt: ringInt,
	    ringNumber: ringNumber,
	    ringUnit: ringUnit,
	    ringFn: ringFn
	};


/***/ }),
/* 26 */
/*!*************************************!*\
  !*** ./output/Data.Ring/foreign.js ***!
  \*************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.intSub = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x - y | 0;
	  };
	};

	exports.numSub = function (n1) {
	  return function (n2) {
	    return n1 - n2;
	  };
	};


/***/ }),
/* 27 */
/*!***************************************!*\
  !*** ./output/Data.Semiring/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 28);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Semiring = function (add, mul, one, zero) {
	    this.add = add;
	    this.mul = mul;
	    this.one = one;
	    this.zero = zero;
	};
	var zero = function (dict) {
	    return dict.zero;
	};
	var semiringUnit = new Semiring(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, Data_Unit.unit);
	var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
	var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
	var one = function (dict) {
	    return dict.one;
	};
	var mul = function (dict) {
	    return dict.mul;
	};
	var add = function (dict) {
	    return dict.add;
	};
	var semiringFn = function (dictSemiring) {
	    return new Semiring(function (f) {
	        return function (g) {
	            return function (x) {
	                return add(dictSemiring)(f(x))(g(x));
	            };
	        };
	    }, function (f) {
	        return function (g) {
	            return function (x) {
	                return mul(dictSemiring)(f(x))(g(x));
	            };
	        };
	    }, function (v) {
	        return one(dictSemiring);
	    }, function (v) {
	        return zero(dictSemiring);
	    });
	};
	module.exports = {
	    Semiring: Semiring,
	    add: add,
	    zero: zero,
	    mul: mul,
	    one: one,
	    semiringInt: semiringInt,
	    semiringNumber: semiringNumber,
	    semiringFn: semiringFn,
	    semiringUnit: semiringUnit
	};


/***/ }),
/* 28 */
/*!*****************************************!*\
  !*** ./output/Data.Semiring/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.intAdd = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x + y | 0;
	  };
	};

	exports.intMul = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x * y | 0;
	  };
	};

	exports.numAdd = function (n1) {
	  return function (n2) {
	    return n1 + n2;
	  };
	};

	exports.numMul = function (n1) {
	  return function (n2) {
	    return n1 * n2;
	  };
	};


/***/ }),
/* 29 */
/*!**************************************!*\
  !*** ./output/Data.Functor/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 30);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Functor = function (map) {
	    this.map = map;
	};
	var map = function (dict) {
	    return dict.map;
	};
	var mapFlipped = function (dictFunctor) {
	    return function (fa) {
	        return function (f) {
	            return map(dictFunctor)(f)(fa);
	        };
	    };
	};
	var $$void = function (dictFunctor) {
	    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
	};
	var voidLeft = function (dictFunctor) {
	    return function (f) {
	        return function (x) {
	            return map(dictFunctor)(Data_Function["const"](x))(f);
	        };
	    };
	};
	var voidRight = function (dictFunctor) {
	    return function (x) {
	        return map(dictFunctor)(Data_Function["const"](x));
	    };
	};
	var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
	var functorArray = new Functor($foreign.arrayMap);
	var flap = function (dictFunctor) {
	    return function (ff) {
	        return function (x) {
	            return map(dictFunctor)(function (f) {
	                return f(x);
	            })(ff);
	        };
	    };
	};
	module.exports = {
	    Functor: Functor,
	    map: map,
	    mapFlipped: mapFlipped,
	    "void": $$void,
	    voidRight: voidRight,
	    voidLeft: voidLeft,
	    flap: flap,
	    functorFn: functorFn,
	    functorArray: functorArray
	};


/***/ }),
/* 30 */
/*!****************************************!*\
  !*** ./output/Data.Functor/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.arrayMap = function (f) {
	  return function (arr) {
	    var l = arr.length;
	    var result = new Array(l);
	    for (var i = 0; i < l; i++) {
	      result[i] = f(arr[i]);
	    }
	    return result;
	  };
	};


/***/ }),
/* 31 */
/*!*******************************************!*\
  !*** ./output/Control.Coroutine/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad_Except = __webpack_require__(/*! ../Control.Monad.Except */ 32);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ../Control.Monad.Free.Trans */ 107);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Parallel = __webpack_require__(/*! ../Control.Parallel */ 111);
	var Control_Parallel_Class = __webpack_require__(/*! ../Control.Parallel.Class */ 112);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Transform = function (x) {
	    return x;
	};
	var Emit = (function () {
	    function Emit(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Emit.create = function (value0) {
	        return function (value1) {
	            return new Emit(value0, value1);
	        };
	    };
	    return Emit;
	})();
	var CoTransform = (function () {
	    function CoTransform(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CoTransform.create = function (value0) {
	        return function (value1) {
	            return new CoTransform(value0, value1);
	        };
	    };
	    return CoTransform;
	})();
	var Await = function (x) {
	    return x;
	};
	var runProcess = function (dictMonadRec) {
	    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
	        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
	    });
	};
	var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
	        };
	    };
	});
	var loop = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (me) {
	            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
	                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
	            })(Data_Unit.unit);
	        };
	    };
	};
	var fuseWithL = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictFunctor2) {
	            return function (dictMonadRec) {
	                return function (zap) {
	                    return function (fs) {
	                        return function (gs) {
	                            var go = function (v) {
	                                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
	                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
	                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
	                                            return Control_Monad_Free_Trans.freeT(function (v3) {
	                                                return go(t);
	                                            });
	                                        })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
	                                    });
	                                }));
	                            };
	                            return Control_Monad_Free_Trans.freeT(function (v) {
	                                return go(new Data_Tuple.Tuple(fs, gs));
	                            });
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var fuseWith = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictFunctor2) {
	            return function (dictMonadRec) {
	                return function (dictParallel) {
	                    return function (zap) {
	                        return function (fs) {
	                            return function (gs) {
	                                var go = function (v) {
	                                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
	                                        if (v1 instanceof Data_Either.Left) {
	                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
	                                        };
	                                        if (v1 instanceof Data_Either.Right) {
	                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
	                                                return Control_Monad_Free_Trans.freeT(function (v2) {
	                                                    return go(t);
	                                                });
	                                            })(v1.value0)));
	                                        };
	                                        throw new Error("Failed pattern match at Control.Coroutine line 80, column 5 - line 82, column 63: " + [ v1.constructor.name ]);
	                                    });
	                                };
	                                return Control_Monad_Free_Trans.freeT(function (v) {
	                                    return go(new Data_Tuple.Tuple(fs, gs));
	                                });
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
	var joinConsumers = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        return f(v(v2.value0))(v1(v2.value1));
	                    };
	                };
	            };
	        });
	    };
	};
	var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return function ($187) {
	                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($187));
	            };
	        };
	    };
	});
	var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
	var composeTransformers = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (i) {
	                        var v2 = v(i);
	                        var v3 = v1(v2.value0);
	                        return new Data_Tuple.Tuple(v3.value0, f(v2.value1)(v3.value1));
	                    };
	                };
	            };
	        });
	    };
	};
	var transform = function (dictMonad) {
	    return function (f) {
	        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
	            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
	        });
	    };
	};
	var transformConsumer = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (i) {
	                        var v2 = v(i);
	                        return f(v2.value1)(v1(v2.value0));
	                    };
	                };
	            };
	        });
	    };
	};
	var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Emit(f(v.value0), g(v.value1));
	        };
	    };
	});
	var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
	var connect = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return f(v.value1)(v1(v.value0));
	                };
	            };
	        });
	    };
	};
	var emit = function (dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
	    };
	};
	var joinProducers = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
	                };
	            };
	        });
	    };
	};
	var producer = function (dictMonad) {
	    return function (recv) {
	        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
	            };
	            if (v instanceof Data_Either.Right) {
	                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
	            };
	            throw new Error("Failed pattern match at Control.Coroutine line 126, column 3 - line 128, column 29: " + [ v.constructor.name ]);
	        }));
	    };
	};
	var pullFrom = function (dictMonadRec) {
	    return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
	            };
	        };
	    });
	};
	var transformProducer = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var v2 = v1(v.value0);
	                    return new Emit(v2.value0, f(v.value1)(v2.value1));
	                };
	            };
	        });
	    };
	};
	var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new CoTransform(f(v.value0), function ($188) {
	                return g(v.value1($188));
	            });
	        };
	    };
	});
	var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
	var composeCoTransformers = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new CoTransform(v1.value0, function (i) {
	                        return f(v.value1(i))(v1.value1(v.value0));
	                    });
	                };
	            };
	        });
	    };
	};
	var cotransform = function (dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.freeT(function (v) {
	            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
	        });
	    };
	};
	var fuseCoTransform = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var v2 = v(v1.value0);
	                    return f(v2.value1)(v1.value1(v2.value0));
	                };
	            };
	        });
	    };
	};
	var transformCoTransformL = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new CoTransform(v1.value0, function (i1) {
	                        var v2 = v(i1);
	                        return f(v2.value1)(v1.value1(v2.value0));
	                    });
	                };
	            };
	        });
	    };
	};
	var transformCoTransformR = function (dictMonadRec) {
	    return function (dictParallel) {
	        return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var v2 = v1(v.value0);
	                    return new CoTransform(v2.value0, function ($189) {
	                        return (function (v3) {
	                            return f(v3)(v2.value1);
	                        })(v.value1($189));
	                    });
	                };
	            };
	        });
	    };
	};
	var $$await = function (dictMonad) {
	    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
	};
	var consumer = function (dictMonad) {
	    return function (send) {
	        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
	            return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
	        }));
	    };
	};
	module.exports = {
	    loop: loop,
	    runProcess: runProcess,
	    fuseWith: fuseWith,
	    fuseWithL: fuseWithL,
	    Emit: Emit,
	    emit: emit,
	    producer: producer,
	    Await: Await,
	    "await": $$await,
	    consumer: consumer,
	    Transform: Transform,
	    transform: transform,
	    CoTransform: CoTransform,
	    cotransform: cotransform,
	    connect: connect,
	    pullFrom: pullFrom,
	    transformProducer: transformProducer,
	    transformConsumer: transformConsumer,
	    composeTransformers: composeTransformers,
	    composeCoTransformers: composeCoTransformers,
	    fuseCoTransform: fuseCoTransform,
	    transformCoTransformL: transformCoTransformL,
	    transformCoTransformR: transformCoTransformR,
	    joinProducers: joinProducers,
	    joinConsumers: joinConsumers,
	    bifunctorEmit: bifunctorEmit,
	    functorEmit: functorEmit,
	    profunctorAwait: profunctorAwait,
	    functorAwait: functorAwait,
	    bifunctorTransform: bifunctorTransform,
	    functorTransform: functorTransform,
	    bifunctorCoTransform: bifunctorCoTransform,
	    functorCoTransform: functorCoTransform
	};


/***/ }),
/* 32 */
/*!**********************************************!*\
  !*** ./output/Control.Monad.Except/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
	var runExcept = function ($0) {
	    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
	};
	var mapExcept = function (f) {
	    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
	        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
	    });
	};
	module.exports = {
	    runExcept: runExcept,
	    mapExcept: mapExcept,
	    withExcept: withExcept
	};


/***/ }),
/* 33 */
/*!***************************************************!*\
  !*** ./output/Control.Monad.Error.Class/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadThrow = function (Monad0, throwError) {
	    this.Monad0 = Monad0;
	    this.throwError = throwError;
	};
	var MonadError = function (MonadThrow0, catchError) {
	    this.MonadThrow0 = MonadThrow0;
	    this.catchError = catchError;
	};
	var throwError = function (dict) {
	    return dict.throwError;
	};
	var monadThrowMaybe = new MonadThrow(function () {
	    return Data_Maybe.monadMaybe;
	}, Data_Function["const"](Data_Maybe.Nothing.value));
	var monadThrowEither = new MonadThrow(function () {
	    return Data_Either.monadEither;
	}, Data_Either.Left.create);
	var monadErrorMaybe = new MonadError(function () {
	    return monadThrowMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return v1(Data_Unit.unit);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 76, column 1 - line 76, column 50: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var monadErrorEither = new MonadError(function () {
	    return monadThrowEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Either.Left) {
	            return v1(v.value0);
	        };
	        if (v instanceof Data_Either.Right) {
	            return new Data_Either.Right(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 69, column 1 - line 69, column 53: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var catchError = function (dict) {
	    return dict.catchError;
	};
	var catchJust = function (dictMonadError) {
	    return function (p) {
	        return function (act) {
	            return function (handler) {
	                var handle = function (e) {
	                    var v = p(e);
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return throwError(dictMonadError.MonadThrow0())(e);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        return handler(v.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 54, column 5 - line 56, column 26: " + [ v.constructor.name ]);
	                };
	                return catchError(dictMonadError)(act)(handle);
	            };
	        };
	    };
	};
	var $$try = function (dictMonadError) {
	    return function (a) {
	        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
	            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
	        });
	    };
	};
	var withResource = function (dictMonadError) {
	    return function (acquire) {
	        return function (release) {
	            return function (kleisli) {
	                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
	                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
	                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
	                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
	                        });
	                    });
	                });
	            };
	        };
	    };
	};
	module.exports = {
	    catchError: catchError,
	    throwError: throwError,
	    MonadThrow: MonadThrow,
	    MonadError: MonadError,
	    catchJust: catchJust,
	    "try": $$try,
	    withResource: withResource,
	    monadThrowEither: monadThrowEither,
	    monadErrorEither: monadErrorEither,
	    monadThrowMaybe: monadThrowMaybe,
	    monadErrorMaybe: monadErrorMaybe
	};


/***/ }),
/* 34 */
/*!*************************************!*\
  !*** ./output/Data.Either/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifoldable = __webpack_require__(/*! ../Data.Bifoldable */ 39);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Bitraversable = __webpack_require__(/*! ../Data.Bitraversable */ 78);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Left = (function () {
	    function Left(value0) {
	        this.value0 = value0;
	    };
	    Left.create = function (value0) {
	        return new Left(value0);
	    };
	    return Left;
	})();
	var Right = (function () {
	    function Right(value0) {
	        this.value0 = value0;
	    };
	    Right.create = function (value0) {
	        return new Right(value0);
	    };
	    return Right;
	})();
	var showEither = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            if (v instanceof Left) {
	                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
	            };
	            if (v instanceof Right) {
	                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
	            };
	            throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
	        });
	    };
	};
	var note$prime = function (f) {
	    return Data_Maybe["maybe'"](function ($171) {
	        return Left.create(f($171));
	    })(Right.create);
	};
	var note = function (a) {
	    return Data_Maybe.maybe(new Left(a))(Right.create);
	};
	var functorEither = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        if (v1 instanceof Right) {
	            return new Right(v(v1.value0));
	        };
	        throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
	var fromRight = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar62) {
	                return $dollar62;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Right) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var fromLeft = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar66) {
	                return $dollar66;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Left) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 247, column 1 - line 247, column 51: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Left) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Right) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableEither = new Data_Traversable.Traversable(function () {
	    return foldableEither;
	}, function () {
	    return functorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
	            };
	            if (v1 instanceof Right) {
	                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var extendEither = new Control_Extend.Extend(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        return new Right(v(v1));
	    };
	});
	var eqEither = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                if (x instanceof Left && y instanceof Left) {
	                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
	                };
	                if (x instanceof Right && y instanceof Right) {
	                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
	                };
	                return false;
	            };
	        });
	    };
	};
	var ordEither = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
	        }, function (x) {
	            return function (y) {
	                if (x instanceof Left && y instanceof Left) {
	                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                };
	                if (x instanceof Left) {
	                    return Data_Ordering.LT.value;
	                };
	                if (y instanceof Left) {
	                    return Data_Ordering.GT.value;
	                };
	                if (x instanceof Right && y instanceof Right) {
	                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
	            };
	        });
	    };
	};
	var eq1Either = function (dictEq) {
	    return new Data_Eq.Eq1(function (dictEq1) {
	        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
	    });
	};
	var ord1Either = function (dictOrd) {
	    return new Data_Ord.Ord1(function () {
	        return eq1Either(dictOrd.Eq0());
	    }, function (dictOrd1) {
	        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
	    });
	};
	var either = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return v(v2.value0);
	            };
	            if (v2 instanceof Right) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
	var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
	var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
	var choose = function (dictAlt) {
	    return function (a) {
	        return function (b) {
	            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
	        };
	    };
	};
	var boundedEither = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
	        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
	    };
	};
	var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return new Left(v(v2.value0));
	            };
	            if (v2 instanceof Right) {
	                return new Right(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(z)(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(z)(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0)(z);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0)(z);
	                };
	                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableEither;
	}, function () {
	    return bifunctorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
	                };
	                if (v2 instanceof Right) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
	                };
	                throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var applyEither = new Control_Apply.Apply(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return new Left(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(functorEither)(v.value0)(v1);
	        };
	        throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindEither = new Control_Bind.Bind(function () {
	    return applyEither;
	}, either(function (e) {
	    return function (v) {
	        return new Left(e);
	    };
	})(function (a) {
	    return function (f) {
	        return f(a);
	    };
	}));
	var semigroupEither = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
	        };
	    });
	};
	var semiringEither = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
	        };
	    }, function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
	        };
	    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
	};
	var applicativeEither = new Control_Applicative.Applicative(function () {
	    return applyEither;
	}, Right.create);
	var monadEither = new Control_Monad.Monad(function () {
	    return applicativeEither;
	}, function () {
	    return bindEither;
	});
	var altEither = new Control_Alt.Alt(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return v1;
	        };
	        return v;
	    };
	});
	module.exports = {
	    Left: Left,
	    Right: Right,
	    either: either,
	    choose: choose,
	    isLeft: isLeft,
	    isRight: isRight,
	    fromLeft: fromLeft,
	    fromRight: fromRight,
	    note: note,
	    "note'": note$prime,
	    hush: hush,
	    functorEither: functorEither,
	    invariantEither: invariantEither,
	    bifunctorEither: bifunctorEither,
	    applyEither: applyEither,
	    applicativeEither: applicativeEither,
	    altEither: altEither,
	    bindEither: bindEither,
	    monadEither: monadEither,
	    extendEither: extendEither,
	    showEither: showEither,
	    eqEither: eqEither,
	    eq1Either: eq1Either,
	    ordEither: ordEither,
	    ord1Either: ord1Either,
	    boundedEither: boundedEither,
	    foldableEither: foldableEither,
	    bifoldableEither: bifoldableEither,
	    traversableEither: traversableEither,
	    bitraversableEither: bitraversableEither,
	    semiringEither: semiringEither,
	    semigroupEither: semigroupEither
	};


/***/ }),
/* 35 */
/*!*************************************!*\
  !*** ./output/Control.Alt/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Alt = function (Functor0, alt) {
	    this.Functor0 = Functor0;
	    this.alt = alt;
	};
	var altArray = new Alt(function () {
	    return Data_Functor.functorArray;
	}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
	var alt = function (dict) {
	    return dict.alt;
	};
	module.exports = {
	    Alt: Alt,
	    alt: alt,
	    altArray: altArray
	};


/***/ }),
/* 36 */
/*!****************************************!*\
  !*** ./output/Control.Extend/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 37);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Extend = function (Functor0, extend) {
	    this.Functor0 = Functor0;
	    this.extend = extend;
	};
	var extendFn = function (dictSemigroup) {
	    return new Extend(function () {
	        return Data_Functor.functorFn;
	    }, function (f) {
	        return function (g) {
	            return function (w) {
	                return f(function (w$prime) {
	                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
	                });
	            };
	        };
	    });
	};
	var extendArray = new Extend(function () {
	    return Data_Functor.functorArray;
	}, $foreign.arrayExtend);
	var extend = function (dict) {
	    return dict.extend;
	};
	var extendFlipped = function (dictExtend) {
	    return function (w) {
	        return function (f) {
	            return extend(dictExtend)(f)(w);
	        };
	    };
	};
	var duplicate = function (dictExtend) {
	    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
	};
	var composeCoKleisliFlipped = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return f(extend(dictExtend)(g)(w));
	            };
	        };
	    };
	};
	var composeCoKleisli = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return g(extend(dictExtend)(f)(w));
	            };
	        };
	    };
	};
	module.exports = {
	    Extend: Extend,
	    extend: extend,
	    extendFlipped: extendFlipped,
	    composeCoKleisli: composeCoKleisli,
	    composeCoKleisliFlipped: composeCoKleisliFlipped,
	    duplicate: duplicate,
	    extendFn: extendFn,
	    extendArray: extendArray
	};


/***/ }),
/* 37 */
/*!******************************************!*\
  !*** ./output/Control.Extend/foreign.js ***!
  \******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.arrayExtend = function(f) {
	  return function(xs) {
	    return xs.map(function (_, i, xs) {
	      return f(xs.slice(i));
	    });
	  };
	};


/***/ }),
/* 38 */
/*!***************************************!*\
  !*** ./output/Control.Monad/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Monad = function (Applicative0, Bind1) {
	    this.Applicative0 = Applicative0;
	    this.Bind1 = Bind1;
	};
	var whenM = function (dictMonad) {
	    return function (mb) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
	                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
	            });
	        };
	    };
	};
	var unlessM = function (dictMonad) {
	    return function (mb) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
	                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
	            });
	        };
	    };
	};
	var monadFn = new Monad(function () {
	    return Control_Applicative.applicativeFn;
	}, function () {
	    return Control_Bind.bindFn;
	});
	var monadArray = new Monad(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Bind.bindArray;
	});
	var liftM1 = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
	            });
	        };
	    };
	};
	var ap = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
	                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
	                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
	                });
	            });
	        };
	    };
	};
	module.exports = {
	    Monad: Monad,
	    liftM1: liftM1,
	    ap: ap,
	    whenM: whenM,
	    unlessM: unlessM,
	    monadFn: monadFn,
	    monadArray: monadArray
	};


/***/ }),
/* 39 */
/*!*****************************************!*\
  !*** ./output/Data.Bifoldable/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor_Clown = __webpack_require__(/*! ../Data.Bifunctor.Clown */ 40);
	var Data_Bifunctor_Flip = __webpack_require__(/*! ../Data.Bifunctor.Flip */ 57);
	var Data_Bifunctor_Joker = __webpack_require__(/*! ../Data.Bifunctor.Joker */ 58);
	var Data_Bifunctor_Product = __webpack_require__(/*! ../Data.Bifunctor.Product */ 59);
	var Data_Bifunctor_Wrap = __webpack_require__(/*! ../Data.Bifunctor.Wrap */ 60);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Endo = __webpack_require__(/*! ../Data.Monoid.Endo */ 76);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
	    this.bifoldMap = bifoldMap;
	    this.bifoldl = bifoldl;
	    this.bifoldr = bifoldr;
	};
	var bifoldr = function (dict) {
	    return dict.bifoldr;
	};
	var bitraverse_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return bifoldr(dictBifoldable)(function ($97) {
	                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
	                })(function ($98) {
	                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
	                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	            };
	        };
	    };
	};
	var bifor_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	var bisequence_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var bifoldl = function (dict) {
	    return dict.bifoldl;
	};
	var bifoldableJoker = function (dictFoldable) {
	    return new Bifoldable(function (dictMonoid) {
	        return function (v) {
	            return function (r) {
	                return function (v1) {
	                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
	                };
	            };
	        };
	    }, function (v) {
	        return function (r) {
	            return function (u) {
	                return function (v1) {
	                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
	                };
	            };
	        };
	    }, function (v) {
	        return function (r) {
	            return function (u) {
	                return function (v1) {
	                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
	                };
	            };
	        };
	    });
	};
	var bifoldableClown = function (dictFoldable) {
	    return new Bifoldable(function (dictMonoid) {
	        return function (l) {
	            return function (v) {
	                return function (v1) {
	                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
	                };
	            };
	        };
	    }, function (l) {
	        return function (v) {
	            return function (u) {
	                return function (v1) {
	                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
	                };
	            };
	        };
	    }, function (l) {
	        return function (v) {
	            return function (u) {
	                return function (v1) {
	                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
	                };
	            };
	        };
	    });
	};
	var bifoldMapDefaultR = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return bifoldr(dictBifoldable)(function ($99) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
	                })(function ($100) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
	                })(Data_Monoid.mempty(dictMonoid));
	            };
	        };
	    };
	};
	var bifoldMapDefaultL = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return bifoldl(dictBifoldable)(function (m) {
	                    return function (a) {
	                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
	                    };
	                })(function (m) {
	                    return function (b) {
	                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
	                    };
	                })(Data_Monoid.mempty(dictMonoid));
	            };
	        };
	    };
	};
	var bifoldMap = function (dict) {
	    return dict.bifoldMap;
	};
	var bifoldableFlip = function (dictBifoldable) {
	    return new Bifoldable(function (dictMonoid) {
	        return function (r) {
	            return function (l) {
	                return function (v) {
	                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
	                };
	            };
	        };
	    }, function (r) {
	        return function (l) {
	            return function (u) {
	                return function (v) {
	                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
	                };
	            };
	        };
	    }, function (r) {
	        return function (l) {
	            return function (u) {
	                return function (v) {
	                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
	                };
	            };
	        };
	    });
	};
	var bifoldableWrap = function (dictBifoldable) {
	    return new Bifoldable(function (dictMonoid) {
	        return function (l) {
	            return function (r) {
	                return function (v) {
	                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
	                };
	            };
	        };
	    }, function (l) {
	        return function (r) {
	            return function (u) {
	                return function (v) {
	                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
	                };
	            };
	        };
	    }, function (l) {
	        return function (r) {
	            return function (u) {
	                return function (v) {
	                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
	                };
	            };
	        };
	    });
	};
	var bifoldlDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($101) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
	                    })(function ($102) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
	                    })(p)))(z);
	                };
	            };
	        };
	    };
	};
	var bifoldrDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($103) {
	                        return Data_Monoid_Endo.Endo(f($103));
	                    })(function ($104) {
	                        return Data_Monoid_Endo.Endo(g($104));
	                    })(p))(z);
	                };
	            };
	        };
	    };
	};
	var bifoldableProduct = function (dictBifoldable) {
	    return function (dictBifoldable1) {
	        return new Bifoldable(function (dictMonoid) {
	            return function (l) {
	                return function (r) {
	                    return function (v) {
	                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
	                    };
	                };
	            };
	        }, function (l) {
	            return function (r) {
	                return function (u) {
	                    return function (m) {
	                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
	                    };
	                };
	            };
	        }, function (l) {
	            return function (r) {
	                return function (u) {
	                    return function (m) {
	                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
	                    };
	                };
	            };
	        });
	    };
	};
	var bifold = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var biany = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($105) {
	                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
	                        return Data_Monoid_Disj.Disj(p($106));
	                    })(function ($107) {
	                        return Data_Monoid_Disj.Disj(q($107));
	                    })($105));
	                };
	            };
	        };
	    };
	};
	var biall = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($108) {
	                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
	                        return Data_Monoid_Conj.Conj(p($109));
	                    })(function ($110) {
	                        return Data_Monoid_Conj.Conj(q($110));
	                    })($108));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    bifoldMap: bifoldMap,
	    bifoldl: bifoldl,
	    bifoldr: bifoldr,
	    Bifoldable: Bifoldable,
	    bifoldrDefault: bifoldrDefault,
	    bifoldlDefault: bifoldlDefault,
	    bifoldMapDefaultR: bifoldMapDefaultR,
	    bifoldMapDefaultL: bifoldMapDefaultL,
	    bifold: bifold,
	    bitraverse_: bitraverse_,
	    bifor_: bifor_,
	    bisequence_: bisequence_,
	    biany: biany,
	    biall: biall,
	    bifoldableClown: bifoldableClown,
	    bifoldableJoker: bifoldableJoker,
	    bifoldableFlip: bifoldableFlip,
	    bifoldableProduct: bifoldableProduct,
	    bifoldableWrap: bifoldableWrap
	};


/***/ }),
/* 40 */
/*!**********************************************!*\
  !*** ./output/Data.Bifunctor.Clown/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Clown = function (x) {
	    return x;
	};
	var showClown = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var ordClown = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeClown = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Clown);
	var functorClown = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var eqClown = function (dictEq) {
	    return dictEq;
	};
	var bifunctorClown = function (dictFunctor) {
	    return new Data_Bifunctor.Bifunctor(function (f) {
	        return function (v) {
	            return function (v1) {
	                return Data_Functor.map(dictFunctor)(f)(v1);
	            };
	        };
	    });
	};
	var biapplyClown = function (dictApply) {
	    return new Control_Biapply.Biapply(function () {
	        return bifunctorClown(dictApply.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Apply.apply(dictApply)(v)(v1);
	        };
	    });
	};
	var biapplicativeClown = function (dictApplicative) {
	    return new Control_Biapplicative.Biapplicative(function () {
	        return biapplyClown(dictApplicative.Apply0());
	    }, function (a) {
	        return function (v) {
	            return Control_Applicative.pure(dictApplicative)(a);
	        };
	    });
	};
	module.exports = {
	    Clown: Clown,
	    newtypeClown: newtypeClown,
	    eqClown: eqClown,
	    ordClown: ordClown,
	    showClown: showClown,
	    functorClown: functorClown,
	    bifunctorClown: bifunctorClown,
	    biapplyClown: biapplyClown,
	    biapplicativeClown: biapplicativeClown
	};


/***/ }),
/* 41 */
/*!***********************************************!*\
  !*** ./output/Control.Biapplicative/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Biapplicative = function (Biapply0, bipure) {
	    this.Biapply0 = Biapply0;
	    this.bipure = bipure;
	};
	var bipure = function (dict) {
	    return dict.bipure;
	};
	module.exports = {
	    bipure: bipure,
	    Biapplicative: Biapplicative
	};


/***/ }),
/* 42 */
/*!*****************************************!*\
  !*** ./output/Control.Biapply/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Biapply = function (Bifunctor0, biapply) {
	    this.Bifunctor0 = Bifunctor0;
	    this.biapply = biapply;
	};
	var biapply = function (dict) {
	    return dict.biapply;
	};
	var biapplyFirst = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
	        };
	    };
	};
	var biapplySecond = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
	        };
	    };
	};
	var bilift2 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
	                };
	            };
	        };
	    };
	};
	var bilift3 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return function (c) {
	                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    biapply: biapply,
	    Biapply: Biapply,
	    biapplyFirst: biapplyFirst,
	    biapplySecond: biapplySecond,
	    bilift2: bilift2,
	    bilift3: bilift3
	};


/***/ }),
/* 43 */
/*!****************************************!*\
  !*** ./output/Data.Bifunctor/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Bifunctor = function (bimap) {
	    this.bimap = bimap;
	};
	var bimap = function (dict) {
	    return dict.bimap;
	};
	var lmap = function (dictBifunctor) {
	    return function (f) {
	        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function (dictBifunctor) {
	    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    bimap: bimap,
	    Bifunctor: Bifunctor,
	    lmap: lmap,
	    rmap: rmap
	};


/***/ }),
/* 44 */
/*!**************************************!*\
  !*** ./output/Data.Newtype/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Newtype = function (unwrap, wrap) {
	    this.unwrap = unwrap;
	    this.wrap = wrap;
	};
	var wrap = function (dict) {
	    return dict.wrap;
	};
	var unwrap = function (dict) {
	    return dict.unwrap;
	};
	var underF2 = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($50) {
	                            return function ($51) {
	                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($50)($51));
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var underF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($52) {
	                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var under2 = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($53) {
	                    return function ($54) {
	                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($53)($54));
	                    };
	                };
	            };
	        };
	    };
	};
	var under = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($55) {
	                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
	                };
	            };
	        };
	    };
	};
	var un = function (dictNewtype) {
	    return function (v) {
	        return unwrap(dictNewtype);
	    };
	};
	var traverse = function (dictFunctor) {
	    return function (dictNewtype) {
	        return function (v) {
	            return function (f) {
	                return function ($56) {
	                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($56)));
	                };
	            };
	        };
	    };
	};
	var overF2 = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($57) {
	                            return function ($58) {
	                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($57)($58));
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var overF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($59) {
	                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($59)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var over2 = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($60) {
	                    return function ($61) {
	                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($60)($61));
	                    };
	                };
	            };
	        };
	    };
	};
	var over = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($62) {
	                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
	                };
	            };
	        };
	    };
	};
	var op = function (dictNewtype) {
	    return un(dictNewtype);
	};
	var collect = function (dictFunctor) {
	    return function (dictNewtype) {
	        return function (v) {
	            return function (f) {
	                return function ($63) {
	                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($63)));
	                };
	            };
	        };
	    };
	};
	var alaF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($64) {
	                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var ala = function (dictFunctor) {
	    return function (dictNewtype) {
	        return function (dictNewtype1) {
	            return function (v) {
	                return function (f) {
	                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    unwrap: unwrap,
	    wrap: wrap,
	    Newtype: Newtype,
	    un: un,
	    op: op,
	    ala: ala,
	    alaF: alaF,
	    over: over,
	    overF: overF,
	    under: under,
	    underF: underF,
	    over2: over2,
	    overF2: overF2,
	    under2: under2,
	    underF2: underF2,
	    traverse: traverse,
	    collect: collect
	};


/***/ }),
/* 45 */
/*!*********************************!*\
  !*** ./output/Prelude/index.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_DivisionRing = __webpack_require__(/*! ../Data.DivisionRing */ 52);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Field = __webpack_require__(/*! ../Data.Field */ 55);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_NaturalTransformation = __webpack_require__(/*! ../Data.NaturalTransformation */ 56);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	module.exports = {};


/***/ }),
/* 46 */
/*!*********************************************!*\
  !*** ./output/Data.BooleanAlgebra/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var BooleanAlgebra = function (HeytingAlgebra0) {
	    this.HeytingAlgebra0 = HeytingAlgebra0;
	};
	var booleanAlgebraUnit = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraUnit;
	});
	var booleanAlgebraFn = function (dictBooleanAlgebra) {
	    return new BooleanAlgebra(function () {
	        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
	    });
	};
	var booleanAlgebraBoolean = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraBoolean;
	});
	module.exports = {
	    BooleanAlgebra: BooleanAlgebra,
	    booleanAlgebraBoolean: booleanAlgebraBoolean,
	    booleanAlgebraUnit: booleanAlgebraUnit,
	    booleanAlgebraFn: booleanAlgebraFn
	};


/***/ }),
/* 47 */
/*!*********************************************!*\
  !*** ./output/Data.HeytingAlgebra/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 48);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
	    this.conj = conj;
	    this.disj = disj;
	    this.ff = ff;
	    this.implies = implies;
	    this.not = not;
	    this.tt = tt;
	};
	var tt = function (dict) {
	    return dict.tt;
	};
	var not = function (dict) {
	    return dict.not;
	};
	var implies = function (dict) {
	    return dict.implies;
	};
	var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return Data_Unit.unit;
	}, Data_Unit.unit);
	var ff = function (dict) {
	    return dict.ff;
	};
	var disj = function (dict) {
	    return dict.disj;
	};
	var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
	    return function (b) {
	        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
	    };
	}, $foreign.boolNot, true);
	var conj = function (dict) {
	    return dict.conj;
	};
	var heytingAlgebraFunction = function (dictHeytingAlgebra) {
	    return new HeytingAlgebra(function (f) {
	        return function (g) {
	            return function (a) {
	                return conj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return disj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (v) {
	        return ff(dictHeytingAlgebra);
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return implies(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (a) {
	            return not(dictHeytingAlgebra)(f(a));
	        };
	    }, function (v) {
	        return tt(dictHeytingAlgebra);
	    });
	};
	module.exports = {
	    HeytingAlgebra: HeytingAlgebra,
	    tt: tt,
	    ff: ff,
	    implies: implies,
	    conj: conj,
	    disj: disj,
	    not: not,
	    heytingAlgebraBoolean: heytingAlgebraBoolean,
	    heytingAlgebraUnit: heytingAlgebraUnit,
	    heytingAlgebraFunction: heytingAlgebraFunction
	};


/***/ }),
/* 48 */
/*!***********************************************!*\
  !*** ./output/Data.HeytingAlgebra/foreign.js ***!
  \***********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.boolConj = function (b1) {
	  return function (b2) {
	    return b1 && b2;
	  };
	};

	exports.boolDisj = function (b1) {
	  return function (b2) {
	    return b1 || b2;
	  };
	};

	exports.boolNot = function (b) {
	  return !b;
	};


/***/ }),
/* 49 */
/*!**************************************!*\
  !*** ./output/Data.Bounded/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 50);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Bounded = function (Ord0, bottom, top) {
	    this.Ord0 = Ord0;
	    this.bottom = bottom;
	    this.top = top;
	};
	var top = function (dict) {
	    return dict.top;
	};
	var boundedUnit = new Bounded(function () {
	    return Data_Ord.ordUnit;
	}, Data_Unit.unit, Data_Unit.unit);
	var boundedOrdering = new Bounded(function () {
	    return Data_Ord.ordOrdering;
	}, Data_Ordering.LT.value, Data_Ordering.GT.value);
	var boundedNumber = new Bounded(function () {
	    return Data_Ord.ordNumber;
	}, $foreign.bottomNumber, $foreign.topNumber);
	var boundedInt = new Bounded(function () {
	    return Data_Ord.ordInt;
	}, $foreign.bottomInt, $foreign.topInt);
	var boundedChar = new Bounded(function () {
	    return Data_Ord.ordChar;
	}, $foreign.bottomChar, $foreign.topChar);
	var boundedBoolean = new Bounded(function () {
	    return Data_Ord.ordBoolean;
	}, false, true);
	var bottom = function (dict) {
	    return dict.bottom;
	};
	module.exports = {
	    Bounded: Bounded,
	    bottom: bottom,
	    top: top,
	    boundedBoolean: boundedBoolean,
	    boundedInt: boundedInt,
	    boundedChar: boundedChar,
	    boundedOrdering: boundedOrdering,
	    boundedUnit: boundedUnit,
	    boundedNumber: boundedNumber
	};


/***/ }),
/* 50 */
/*!****************************************!*\
  !*** ./output/Data.Bounded/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.topInt = 2147483647;
	exports.bottomInt = -2147483648;

	exports.topChar = String.fromCharCode(65535);
	exports.bottomChar = String.fromCharCode(0);

	exports.topNumber = Number.POSITIVE_INFINITY;
	exports.bottomNumber = Number.NEGATIVE_INFINITY;


/***/ }),
/* 51 */
/*!**********************************************!*\
  !*** ./output/Data.CommutativeRing/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var CommutativeRing = function (Ring0) {
	    this.Ring0 = Ring0;
	};
	var commutativeRingUnit = new CommutativeRing(function () {
	    return Data_Ring.ringUnit;
	});
	var commutativeRingNumber = new CommutativeRing(function () {
	    return Data_Ring.ringNumber;
	});
	var commutativeRingInt = new CommutativeRing(function () {
	    return Data_Ring.ringInt;
	});
	var commutativeRingFn = function (dictCommutativeRing) {
	    return new CommutativeRing(function () {
	        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
	    });
	};
	module.exports = {
	    CommutativeRing: CommutativeRing,
	    commutativeRingInt: commutativeRingInt,
	    commutativeRingNumber: commutativeRingNumber,
	    commutativeRingUnit: commutativeRingUnit,
	    commutativeRingFn: commutativeRingFn
	};


/***/ }),
/* 52 */
/*!*******************************************!*\
  !*** ./output/Data.DivisionRing/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var DivisionRing = function (Ring0, recip) {
	    this.Ring0 = Ring0;
	    this.recip = recip;
	};
	var recip = function (dict) {
	    return dict.recip;
	};
	var rightDiv = function (dictDivisionRing) {
	    return function (a) {
	        return function (b) {
	            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
	        };
	    };
	};
	var leftDiv = function (dictDivisionRing) {
	    return function (a) {
	        return function (b) {
	            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
	        };
	    };
	};
	var divisionringNumber = new DivisionRing(function () {
	    return Data_Ring.ringNumber;
	}, function (x) {
	    return 1.0 / x;
	});
	module.exports = {
	    DivisionRing: DivisionRing,
	    recip: recip,
	    leftDiv: leftDiv,
	    rightDiv: rightDiv,
	    divisionringNumber: divisionringNumber
	};


/***/ }),
/* 53 */
/*!********************************************!*\
  !*** ./output/Data.EuclideanRing/index.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 54);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
	    this.CommutativeRing0 = CommutativeRing0;
	    this.degree = degree;
	    this.div = div;
	    this.mod = mod;
	};
	var mod = function (dict) {
	    return dict.mod;
	};
	var gcd = function ($copy_dictEq) {
	    return function ($copy_dictEuclideanRing) {
	        return function ($copy_a) {
	            return function ($copy_b) {
	                var $tco_var_dictEq = $copy_dictEq;
	                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
	                var $tco_var_a = $copy_a;
	                var $tco_done = false;
	                var $tco_result;
	                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
	                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
	                    if ($7) {
	                        $tco_done = true;
	                        return a;
	                    };
	                    $tco_var_dictEq = dictEq;
	                    $tco_var_dictEuclideanRing = dictEuclideanRing;
	                    $tco_var_a = b;
	                    $copy_b = mod(dictEuclideanRing)(a)(b);
	                    return;
	                };
	                while (!$tco_done) {
	                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
	                };
	                return $tco_result;
	            };
	        };
	    };
	};
	var euclideanRingNumber = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingNumber;
	}, function (v) {
	    return 1;
	}, $foreign.numDiv, function (v) {
	    return function (v1) {
	        return 0.0;
	    };
	});
	var euclideanRingInt = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingInt;
	}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
	var div = function (dict) {
	    return dict.div;
	};
	var lcm = function (dictEq) {
	    return function (dictEuclideanRing) {
	        return function (a) {
	            return function (b) {
	                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
	                if ($8) {
	                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
	                };
	                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
	            };
	        };
	    };
	};
	var degree = function (dict) {
	    return dict.degree;
	};
	module.exports = {
	    EuclideanRing: EuclideanRing,
	    degree: degree,
	    div: div,
	    mod: mod,
	    gcd: gcd,
	    lcm: lcm,
	    euclideanRingInt: euclideanRingInt,
	    euclideanRingNumber: euclideanRingNumber
	};


/***/ }),
/* 54 */
/*!**********************************************!*\
  !*** ./output/Data.EuclideanRing/foreign.js ***!
  \**********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.intDegree = function (x) {
	  return Math.min(Math.abs(x), 2147483647);
	};

	exports.intDiv = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x / y | 0;
	  };
	};

	exports.intMod = function (x) {
	  return function (y) {
	    return x % y;
	  };
	};

	exports.numDiv = function (n1) {
	  return function (n2) {
	    return n1 / n2;
	  };
	};


/***/ }),
/* 55 */
/*!************************************!*\
  !*** ./output/Data.Field/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_DivisionRing = __webpack_require__(/*! ../Data.DivisionRing */ 52);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Field = function (EuclideanRing0) {
	    this.EuclideanRing0 = EuclideanRing0;
	};
	var fieldNumber = new Field(function () {
	    return Data_EuclideanRing.euclideanRingNumber;
	});
	module.exports = {
	    Field: Field,
	    fieldNumber: fieldNumber
	};


/***/ }),
/* 56 */
/*!****************************************************!*\
  !*** ./output/Data.NaturalTransformation/index.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	// Generated by purs version 0.11.7
	"use strict";
	module.exports = {};


/***/ }),
/* 57 */
/*!*********************************************!*\
  !*** ./output/Data.Bifunctor.Flip/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Flip = function (x) {
	    return x;
	};
	var showFlip = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var ordFlip = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeFlip = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Flip);
	var functorFlip = function (dictBifunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
	        };
	    });
	};
	var eqFlip = function (dictEq) {
	    return dictEq;
	};
	var bifunctorFlip = function (dictBifunctor) {
	    return new Data_Bifunctor.Bifunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
	            };
	        };
	    });
	};
	var biapplyFlip = function (dictBiapply) {
	    return new Control_Biapply.Biapply(function () {
	        return bifunctorFlip(dictBiapply.Bifunctor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Biapply.biapply(dictBiapply)(v)(v1);
	        };
	    });
	};
	var biapplicativeFlip = function (dictBiapplicative) {
	    return new Control_Biapplicative.Biapplicative(function () {
	        return biapplyFlip(dictBiapplicative.Biapply0());
	    }, function (a) {
	        return function (b) {
	            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
	        };
	    });
	};
	module.exports = {
	    Flip: Flip,
	    newtypeFlip: newtypeFlip,
	    eqFlip: eqFlip,
	    ordFlip: ordFlip,
	    showFlip: showFlip,
	    functorFlip: functorFlip,
	    bifunctorFlip: bifunctorFlip,
	    biapplyFlip: biapplyFlip,
	    biapplicativeFlip: biapplicativeFlip
	};


/***/ }),
/* 58 */
/*!**********************************************!*\
  !*** ./output/Data.Bifunctor.Joker/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Joker = function (x) {
	    return x;
	};
	var showJoker = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var ordJoker = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeJoker = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Joker);
	var functorJoker = function (dictFunctor) {
	    return new Data_Functor.Functor(function (g) {
	        return function (v) {
	            return Data_Functor.map(dictFunctor)(g)(v);
	        };
	    });
	};
	var eqJoker = function (dictEq) {
	    return dictEq;
	};
	var bifunctorJoker = function (dictFunctor) {
	    return new Data_Bifunctor.Bifunctor(function (v) {
	        return function (g) {
	            return function (v1) {
	                return Data_Functor.map(dictFunctor)(g)(v1);
	            };
	        };
	    });
	};
	var biapplyJoker = function (dictApply) {
	    return new Control_Biapply.Biapply(function () {
	        return bifunctorJoker(dictApply.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Apply.apply(dictApply)(v)(v1);
	        };
	    });
	};
	var biapplicativeJoker = function (dictApplicative) {
	    return new Control_Biapplicative.Biapplicative(function () {
	        return biapplyJoker(dictApplicative.Apply0());
	    }, function (v) {
	        return function (b) {
	            return Control_Applicative.pure(dictApplicative)(b);
	        };
	    });
	};
	module.exports = {
	    Joker: Joker,
	    newtypeJoker: newtypeJoker,
	    eqJoker: eqJoker,
	    ordJoker: ordJoker,
	    showJoker: showJoker,
	    functorJoker: functorJoker,
	    bifunctorJoker: bifunctorJoker,
	    biapplyJoker: biapplyJoker,
	    biapplicativeJoker: biapplicativeJoker
	};


/***/ }),
/* 59 */
/*!************************************************!*\
  !*** ./output/Data.Bifunctor.Product/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Product = (function () {
	    function Product(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Product.create = function (value0) {
	        return function (value1) {
	            return new Product(value0, value1);
	        };
	    };
	    return Product;
	})();
	var showProduct = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var eqProduct = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var ordProduct = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
	        }, function (x) {
	            return function (y) {
	                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                if (v instanceof Data_Ordering.LT) {
	                    return Data_Ordering.LT.value;
	                };
	                if (v instanceof Data_Ordering.GT) {
	                    return Data_Ordering.GT.value;
	                };
	                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var bifunctorProduct = function (dictBifunctor) {
	    return function (dictBifunctor1) {
	        return new Data_Bifunctor.Bifunctor(function (f) {
	            return function (g) {
	                return function (v) {
	                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
	                };
	            };
	        });
	    };
	};
	var biapplyProduct = function (dictBiapply) {
	    return function (dictBiapply1) {
	        return new Control_Biapply.Biapply(function () {
	            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
	        }, function (v) {
	            return function (v1) {
	                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var biapplicativeProduct = function (dictBiapplicative) {
	    return function (dictBiapplicative1) {
	        return new Control_Biapplicative.Biapplicative(function () {
	            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
	        }, function (a) {
	            return function (b) {
	                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
	            };
	        });
	    };
	};
	module.exports = {
	    Product: Product,
	    eqProduct: eqProduct,
	    ordProduct: ordProduct,
	    showProduct: showProduct,
	    bifunctorProduct: bifunctorProduct,
	    biapplyProduct: biapplyProduct,
	    biapplicativeProduct: biapplicativeProduct
	};


/***/ }),
/* 60 */
/*!*********************************************!*\
  !*** ./output/Data.Bifunctor.Wrap/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Wrap = function (x) {
	    return x;
	};
	var showWrap = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var ordWrap = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeWrap = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Wrap);
	var functorWrap = function (dictBifunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
	        };
	    });
	};
	var eqWrap = function (dictEq) {
	    return dictEq;
	};
	var bifunctorWrap = function (dictBifunctor) {
	    return new Data_Bifunctor.Bifunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
	            };
	        };
	    });
	};
	var biapplyWrap = function (dictBiapply) {
	    return new Control_Biapply.Biapply(function () {
	        return bifunctorWrap(dictBiapply.Bifunctor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Biapply.biapply(dictBiapply)(v)(v1);
	        };
	    });
	};
	var biapplicativeWrap = function (dictBiapplicative) {
	    return new Control_Biapplicative.Biapplicative(function () {
	        return biapplyWrap(dictBiapplicative.Biapply0());
	    }, function (a) {
	        return function (b) {
	            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
	        };
	    });
	};
	module.exports = {
	    Wrap: Wrap,
	    newtypeWrap: newtypeWrap,
	    eqWrap: eqWrap,
	    ordWrap: ordWrap,
	    showWrap: showWrap,
	    functorWrap: functorWrap,
	    bifunctorWrap: bifunctorWrap,
	    biapplyWrap: biapplyWrap,
	    biapplicativeWrap: biapplicativeWrap
	};


/***/ }),
/* 61 */
/*!***************************************!*\
  !*** ./output/Data.Foldable/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 62);
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Endo = __webpack_require__(/*! ../Data.Monoid.Endo */ 76);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Foldable = function (foldMap, foldl, foldr) {
	    this.foldMap = foldMap;
	    this.foldl = foldl;
	    this.foldr = foldr;
	};
	var foldr = function (dict) {
	    return dict.foldr;
	};
	var indexr = function (dictFoldable) {
	    return function (idx) {
	        var go = function (a) {
	            return function (cursor) {
	                if (cursor.elem instanceof Data_Maybe.Just) {
	                    return cursor;
	                };
	                var $106 = cursor.pos === idx;
	                if ($106) {
	                    return {
	                        elem: new Data_Maybe.Just(a),
	                        pos: cursor.pos
	                    };
	                };
	                return {
	                    pos: cursor.pos + 1 | 0,
	                    elem: cursor.elem
	                };
	            };
	        };
	        return function ($193) {
	            return (function (v) {
	                return v.elem;
	            })(foldr(dictFoldable)(go)({
	                elem: Data_Maybe.Nothing.value,
	                pos: 0
	            })($193));
	        };
	    };
	};
	var $$null = function (dictFoldable) {
	    return foldr(dictFoldable)(function (v) {
	        return function (v1) {
	            return false;
	        };
	    })(true);
	};
	var oneOf = function (dictFoldable) {
	    return function (dictPlus) {
	        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
	    };
	};
	var oneOfMap = function (dictFoldable) {
	    return function (dictPlus) {
	        return function (f) {
	            return foldr(dictFoldable)(function ($194) {
	                return Control_Alt.alt(dictPlus.Alt0())(f($194));
	            })(Control_Plus.empty(dictPlus));
	        };
	    };
	};
	var traverse_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return function (f) {
	            return foldr(dictFoldable)(function ($195) {
	                return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var for_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
	    };
	};
	var sequence_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var foldl = function (dict) {
	    return dict.foldl;
	};
	var indexl = function (dictFoldable) {
	    return function (idx) {
	        var go = function (cursor) {
	            return function (a) {
	                if (cursor.elem instanceof Data_Maybe.Just) {
	                    return cursor;
	                };
	                var $109 = cursor.pos === idx;
	                if ($109) {
	                    return {
	                        elem: new Data_Maybe.Just(a),
	                        pos: cursor.pos
	                    };
	                };
	                return {
	                    pos: cursor.pos + 1 | 0,
	                    elem: cursor.elem
	                };
	            };
	        };
	        return function ($196) {
	            return (function (v) {
	                return v.elem;
	            })(foldl(dictFoldable)(go)({
	                elem: Data_Maybe.Nothing.value,
	                pos: 0
	            })($196));
	        };
	    };
	};
	var intercalate = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (sep) {
	            return function (xs) {
	                var go = function (v) {
	                    return function (x) {
	                        if (v.init) {
	                            return {
	                                init: false,
	                                acc: x
	                            };
	                        };
	                        return {
	                            init: false,
	                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
	                        };
	                    };
	                };
	                return (foldl(dictFoldable)(go)({
	                    init: true,
	                    acc: Data_Monoid.mempty(dictMonoid)
	                })(xs)).acc;
	            };
	        };
	    };
	};
	var length = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(function (c) {
	            return function (v) {
	                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
	            };
	        })(Data_Semiring.zero(dictSemiring));
	    };
	};
	var maximumBy = function (dictFoldable) {
	    return function (cmp) {
	        var max$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
	                        if ($116) {
	                            return v.value0;
	                        };
	                        return v1;
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 378, column 3 - line 378, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var maximum = function (dictOrd) {
	    return function (dictFoldable) {
	        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var minimumBy = function (dictFoldable) {
	    return function (cmp) {
	        var min$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
	                        if ($120) {
	                            return v.value0;
	                        };
	                        return v1;
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 391, column 3 - line 391, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var minimum = function (dictOrd) {
	    return function (dictFoldable) {
	        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var product = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
	    };
	};
	var sum = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
	    };
	};
	var foldableMultiplicative = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableMaybe = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var foldableDual = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableDisj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableConj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableAdditive = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldMapDefaultR = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return foldr(dictFoldable)(function (x) {
	                return function (acc) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
	                };
	            })(Data_Monoid.mempty(dictMonoid));
	        };
	    };
	};
	var foldableArray = new Foldable(function (dictMonoid) {
	    return foldMapDefaultR(foldableArray)(dictMonoid);
	}, $foreign.foldlArray, $foreign.foldrArray);
	var foldMapDefaultL = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return foldl(dictFoldable)(function (acc) {
	                return function (x) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
	                };
	            })(Data_Monoid.mempty(dictMonoid));
	        };
	    };
	};
	var foldMap = function (dict) {
	    return dict.foldMap;
	};
	var foldableFirst = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldableLast = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldlDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($197) {
	                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($197)));
	                })(xs)))(u);
	            };
	        };
	    };
	};
	var foldrDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($198) {
	                    return Data_Monoid_Endo.Endo(c($198));
	                })(xs))(u);
	            };
	        };
	    };
	};
	var surroundMap = function (dictFoldable) {
	    return function (dictSemigroup) {
	        return function (d) {
	            return function (t) {
	                return function (f) {
	                    var joined = function (a) {
	                        return function (m) {
	                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
	                        };
	                    };
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
	                };
	            };
	        };
	    };
	};
	var surround = function (dictFoldable) {
	    return function (dictSemigroup) {
	        return function (d) {
	            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.id(Control_Category.categoryFn));
	        };
	    };
	};
	var foldM = function (dictFoldable) {
	    return function (dictMonad) {
	        return function (f) {
	            return function (a0) {
	                return foldl(dictFoldable)(function (ma) {
	                    return function (b) {
	                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
	                    };
	                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
	            };
	        };
	    };
	};
	var fold = function (dictFoldable) {
	    return function (dictMonoid) {
	        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var findMap = function (dictFoldable) {
	    return function (p) {
	        var go = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return p(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var find = function (dictFoldable) {
	    return function (p) {
	        var go = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing && p(v1)) {
	                    return new Data_Maybe.Just(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var any = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
	    };
	};
	var elem = function (dictFoldable) {
	    return function (dictEq) {
	        return function ($199) {
	            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
	        };
	    };
	};
	var notElem = function (dictFoldable) {
	    return function (dictEq) {
	        return function (x) {
	            return function ($200) {
	                return !elem(dictFoldable)(dictEq)(x)($200);
	            };
	        };
	    };
	};
	var or = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var all = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
	    };
	};
	var and = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Foldable: Foldable,
	    foldr: foldr,
	    foldl: foldl,
	    foldMap: foldMap,
	    foldrDefault: foldrDefault,
	    foldlDefault: foldlDefault,
	    foldMapDefaultL: foldMapDefaultL,
	    foldMapDefaultR: foldMapDefaultR,
	    fold: fold,
	    foldM: foldM,
	    traverse_: traverse_,
	    for_: for_,
	    sequence_: sequence_,
	    oneOf: oneOf,
	    oneOfMap: oneOfMap,
	    intercalate: intercalate,
	    surroundMap: surroundMap,
	    surround: surround,
	    and: and,
	    or: or,
	    all: all,
	    any: any,
	    sum: sum,
	    product: product,
	    elem: elem,
	    notElem: notElem,
	    indexl: indexl,
	    indexr: indexr,
	    find: find,
	    findMap: findMap,
	    maximum: maximum,
	    maximumBy: maximumBy,
	    minimum: minimum,
	    minimumBy: minimumBy,
	    "null": $$null,
	    length: length,
	    foldableArray: foldableArray,
	    foldableMaybe: foldableMaybe,
	    foldableFirst: foldableFirst,
	    foldableLast: foldableLast,
	    foldableAdditive: foldableAdditive,
	    foldableDual: foldableDual,
	    foldableDisj: foldableDisj,
	    foldableConj: foldableConj,
	    foldableMultiplicative: foldableMultiplicative
	};


/***/ }),
/* 62 */
/*!*****************************************!*\
  !*** ./output/Data.Foldable/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.foldrArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = len - 1; i >= 0; i--) {
	        acc = f(xs[i])(acc);
	      }
	      return acc;
	    };
	  };
	};

	exports.foldlArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = 0; i < len; i++) {
	        acc = f(acc)(xs[i]);
	      }
	      return acc;
	    };
	  };
	};


/***/ }),
/* 63 */
/*!**************************************!*\
  !*** ./output/Control.Plus/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Plus = function (Alt0, empty) {
	    this.Alt0 = Alt0;
	    this.empty = empty;
	};
	var plusArray = new Plus(function () {
	    return Control_Alt.altArray;
	}, [  ]);
	var empty = function (dict) {
	    return dict.empty;
	};
	module.exports = {
	    Plus: Plus,
	    empty: empty,
	    plusArray: plusArray
	};


/***/ }),
/* 64 */
/*!************************************!*\
  !*** ./output/Data.Maybe/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Nothing = (function () {
	    function Nothing() {

	    };
	    Nothing.value = new Nothing();
	    return Nothing;
	})();
	var Just = (function () {
	    function Just(value0) {
	        this.value0 = value0;
	    };
	    Just.create = function (value0) {
	        return new Just(value0);
	    };
	    return Just;
	})();
	var showMaybe = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Just) {
	            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
	        };
	        if (v instanceof Nothing) {
	            return "Nothing";
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
	    });
	};
	var semigroupMaybe = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing) {
	                return v1;
	            };
	            if (v1 instanceof Nothing) {
	                return v;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    });
	};
	var optional = function (dictAlternative) {
	    return function (a) {
	        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
	    };
	};
	var monoidMaybe = function (dictSemigroup) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMaybe(dictSemigroup);
	    }, Nothing.value);
	};
	var maybe$prime = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v(Data_Unit.unit);
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var maybe = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v;
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var isNothing = maybe(true)(Data_Function["const"](false));
	var isJust = maybe(false)(Data_Function["const"](true));
	var functorMaybe = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Just) {
	            return new Just(v(v1.value0));
	        };
	        return Nothing.value;
	    };
	});
	var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
	var fromMaybe$prime = function (a) {
	    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromMaybe = function (a) {
	    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromJust = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar35) {
	                return $dollar35;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Just) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var extendMaybe = new Control_Extend.Extend(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Nothing) {
	            return Nothing.value;
	        };
	        return new Just(v(v1));
	    };
	});
	var eqMaybe = function (dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            if (x instanceof Nothing && y instanceof Nothing) {
	                return true;
	            };
	            if (x instanceof Just && y instanceof Just) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
	            };
	            return false;
	        };
	    });
	};
	var ordMaybe = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMaybe(dictOrd.Eq0());
	    }, function (x) {
	        return function (y) {
	            if (x instanceof Nothing && y instanceof Nothing) {
	                return Data_Ordering.EQ.value;
	            };
	            if (x instanceof Nothing) {
	                return Data_Ordering.LT.value;
	            };
	            if (y instanceof Nothing) {
	                return Data_Ordering.GT.value;
	            };
	            if (x instanceof Just && y instanceof Just) {
	                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 196, column 8 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
	        };
	    });
	};
	var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
	    return Data_Eq.eq(eqMaybe(dictEq));
	});
	var ord1Maybe = new Data_Ord.Ord1(function () {
	    return eq1Maybe;
	}, function (dictOrd) {
	    return Data_Ord.compare(ordMaybe(dictOrd));
	});
	var boundedMaybe = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMaybe(dictBounded.Ord0());
	    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
	};
	var applyMaybe = new Control_Apply.Apply(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return Data_Functor.map(functorMaybe)(v.value0)(v1);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindMaybe = new Control_Bind.Bind(function () {
	    return applyMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return v1(v.value0);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var applicativeMaybe = new Control_Applicative.Applicative(function () {
	    return applyMaybe;
	}, Just.create);
	var monadMaybe = new Control_Monad.Monad(function () {
	    return applicativeMaybe;
	}, function () {
	    return bindMaybe;
	});
	var altMaybe = new Control_Alt.Alt(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nothing) {
	            return v1;
	        };
	        return v;
	    };
	});
	var plusMaybe = new Control_Plus.Plus(function () {
	    return altMaybe;
	}, Nothing.value);
	var alternativeMaybe = new Control_Alternative.Alternative(function () {
	    return applicativeMaybe;
	}, function () {
	    return plusMaybe;
	});
	var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
	    return alternativeMaybe;
	}, function () {
	    return monadMaybe;
	});
	module.exports = {
	    Nothing: Nothing,
	    Just: Just,
	    maybe: maybe,
	    "maybe'": maybe$prime,
	    fromMaybe: fromMaybe,
	    "fromMaybe'": fromMaybe$prime,
	    isJust: isJust,
	    isNothing: isNothing,
	    fromJust: fromJust,
	    optional: optional,
	    functorMaybe: functorMaybe,
	    applyMaybe: applyMaybe,
	    applicativeMaybe: applicativeMaybe,
	    altMaybe: altMaybe,
	    plusMaybe: plusMaybe,
	    alternativeMaybe: alternativeMaybe,
	    bindMaybe: bindMaybe,
	    monadMaybe: monadMaybe,
	    monadZeroMaybe: monadZeroMaybe,
	    extendMaybe: extendMaybe,
	    invariantMaybe: invariantMaybe,
	    semigroupMaybe: semigroupMaybe,
	    monoidMaybe: monoidMaybe,
	    eqMaybe: eqMaybe,
	    eq1Maybe: eq1Maybe,
	    ordMaybe: ordMaybe,
	    ord1Maybe: ord1Maybe,
	    boundedMaybe: boundedMaybe,
	    showMaybe: showMaybe
	};


/***/ }),
/* 65 */
/*!*********************************************!*\
  !*** ./output/Control.Alternative/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Alternative = function (Applicative0, Plus1) {
	    this.Applicative0 = Applicative0;
	    this.Plus1 = Plus1;
	};
	var alternativeArray = new Alternative(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Plus.plusArray;
	});
	module.exports = {
	    Alternative: Alternative,
	    alternativeArray: alternativeArray
	};


/***/ }),
/* 66 */
/*!*******************************************!*\
  !*** ./output/Control.MonadZero/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var MonadZero = function (Alternative1, Monad0) {
	    this.Alternative1 = Alternative1;
	    this.Monad0 = Monad0;
	};
	var monadZeroArray = new MonadZero(function () {
	    return Control_Alternative.alternativeArray;
	}, function () {
	    return Control_Monad.monadArray;
	});
	var guard = function (dictMonadZero) {
	    return function (v) {
	        if (v) {
	            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
	        };
	        if (!v) {
	            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
	        };
	        throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
	    };
	};
	module.exports = {
	    MonadZero: MonadZero,
	    guard: guard,
	    monadZeroArray: monadZeroArray
	};


/***/ }),
/* 67 */
/*!************************************************!*\
  !*** ./output/Data.Functor.Invariant/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Invariant = function (imap) {
	    this.imap = imap;
	};
	var imapF = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictFunctor)(f);
	        };
	    };
	};
	var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
	var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
	var imap = function (dict) {
	    return dict.imap;
	};
	module.exports = {
	    imap: imap,
	    Invariant: Invariant,
	    imapF: imapF,
	    invariantFn: invariantFn,
	    invariantArray: invariantArray
	};


/***/ }),
/* 68 */
/*!*************************************!*\
  !*** ./output/Data.Monoid/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Monoid = function (Semigroup0, mempty) {
	    this.Semigroup0 = Semigroup0;
	    this.mempty = mempty;
	};
	var monoidUnit = new Monoid(function () {
	    return Data_Semigroup.semigroupUnit;
	}, Data_Unit.unit);
	var monoidString = new Monoid(function () {
	    return Data_Semigroup.semigroupString;
	}, "");
	var monoidOrdering = new Monoid(function () {
	    return Data_Ordering.semigroupOrdering;
	}, Data_Ordering.EQ.value);
	var monoidArray = new Monoid(function () {
	    return Data_Semigroup.semigroupArray;
	}, [  ]);
	var mempty = function (dict) {
	    return dict.mempty;
	};
	var monoidFn = function (dictMonoid) {
	    return new Monoid(function () {
	        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
	    }, Data_Function["const"](mempty(dictMonoid)));
	};
	var power = function (dictMonoid) {
	    return function (x) {
	        var go = function (p) {
	            if (p <= 0) {
	                return mempty(dictMonoid);
	            };
	            if (p === 1) {
	                return x;
	            };
	            if (p % 2 === 0) {
	                var x$prime = go(p / 2 | 0);
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
	            };
	            if (Data_Boolean.otherwise) {
	                var x$prime = go(p / 2 | 0);
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
	            };
	            throw new Error("Failed pattern match at Data.Monoid line 52, column 3 - line 52, column 17: " + [ p.constructor.name ]);
	        };
	        return go;
	    };
	};
	var guard = function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            if (v) {
	                return v1;
	            };
	            if (!v) {
	                return mempty(dictMonoid);
	            };
	            throw new Error("Failed pattern match at Data.Monoid line 60, column 1 - line 60, column 49: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	module.exports = {
	    Monoid: Monoid,
	    mempty: mempty,
	    power: power,
	    guard: guard,
	    monoidUnit: monoidUnit,
	    monoidOrdering: monoidOrdering,
	    monoidFn: monoidFn,
	    monoidString: monoidString,
	    monoidArray: monoidArray
	};


/***/ }),
/* 69 */
/*!******************************************!*\
  !*** ./output/Data.Maybe.First/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var First = function (x) {
	    return x;
	};
	var showFirst = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Just) {
	            return v;
	        };
	        return v1;
	    };
	});
	var ordFirst = function (dictOrd) {
	    return Data_Maybe.ordMaybe(dictOrd);
	};
	var ord1First = Data_Maybe.ord1Maybe;
	var newtypeFirst = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, First);
	var monoidFirst = new Data_Monoid.Monoid(function () {
	    return semigroupFirst;
	}, Data_Maybe.Nothing.value);
	var monadFirst = Data_Maybe.monadMaybe;
	var invariantFirst = Data_Maybe.invariantMaybe;
	var functorFirst = Data_Maybe.functorMaybe;
	var extendFirst = Data_Maybe.extendMaybe;
	var eqFirst = function (dictEq) {
	    return Data_Maybe.eqMaybe(dictEq);
	};
	var eq1First = Data_Maybe.eq1Maybe;
	var boundedFirst = function (dictBounded) {
	    return Data_Maybe.boundedMaybe(dictBounded);
	};
	var bindFirst = Data_Maybe.bindMaybe;
	var applyFirst = Data_Maybe.applyMaybe;
	var applicativeFirst = Data_Maybe.applicativeMaybe;
	var altFirst = new Control_Alt.Alt(function () {
	    return functorFirst;
	}, Data_Semigroup.append(semigroupFirst));
	var plusFirst = new Control_Plus.Plus(function () {
	    return altFirst;
	}, Data_Monoid.mempty(monoidFirst));
	var alternativeFirst = new Control_Alternative.Alternative(function () {
	    return applicativeFirst;
	}, function () {
	    return plusFirst;
	});
	var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
	    return alternativeFirst;
	}, function () {
	    return monadFirst;
	});
	module.exports = {
	    First: First,
	    newtypeFirst: newtypeFirst,
	    eqFirst: eqFirst,
	    eq1First: eq1First,
	    ordFirst: ordFirst,
	    ord1First: ord1First,
	    boundedFirst: boundedFirst,
	    functorFirst: functorFirst,
	    invariantFirst: invariantFirst,
	    applyFirst: applyFirst,
	    applicativeFirst: applicativeFirst,
	    bindFirst: bindFirst,
	    monadFirst: monadFirst,
	    extendFirst: extendFirst,
	    showFirst: showFirst,
	    semigroupFirst: semigroupFirst,
	    monoidFirst: monoidFirst,
	    altFirst: altFirst,
	    plusFirst: plusFirst,
	    alternativeFirst: alternativeFirst,
	    monadZeroFirst: monadZeroFirst
	};


/***/ }),
/* 70 */
/*!*****************************************!*\
  !*** ./output/Data.Maybe.Last/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Last = function (x) {
	    return x;
	};
	var showLast = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Maybe.Just) {
	            return v1;
	        };
	        if (v1 instanceof Data_Maybe.Nothing) {
	            return v;
	        };
	        throw new Error("Failed pattern match at Data.Maybe.Last line 53, column 1 - line 53, column 45: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var ordLast = function (dictOrd) {
	    return Data_Maybe.ordMaybe(dictOrd);
	};
	var ord1Last = Data_Maybe.ord1Maybe;
	var newtypeLast = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Last);
	var monoidLast = new Data_Monoid.Monoid(function () {
	    return semigroupLast;
	}, Data_Maybe.Nothing.value);
	var monadLast = Data_Maybe.monadMaybe;
	var invariantLast = Data_Maybe.invariantMaybe;
	var functorLast = Data_Maybe.functorMaybe;
	var extendLast = Data_Maybe.extendMaybe;
	var eqLast = function (dictEq) {
	    return Data_Maybe.eqMaybe(dictEq);
	};
	var eq1Last = Data_Maybe.eq1Maybe;
	var boundedLast = function (dictBounded) {
	    return Data_Maybe.boundedMaybe(dictBounded);
	};
	var bindLast = Data_Maybe.bindMaybe;
	var applyLast = Data_Maybe.applyMaybe;
	var applicativeLast = Data_Maybe.applicativeMaybe;
	var altLast = new Control_Alt.Alt(function () {
	    return functorLast;
	}, Data_Semigroup.append(semigroupLast));
	var plusLast = new Control_Plus.Plus(function () {
	    return altLast;
	}, Data_Monoid.mempty(monoidLast));
	var alternativeLast = new Control_Alternative.Alternative(function () {
	    return applicativeLast;
	}, function () {
	    return plusLast;
	});
	var monadZeroLast = new Control_MonadZero.MonadZero(function () {
	    return alternativeLast;
	}, function () {
	    return monadLast;
	});
	module.exports = {
	    Last: Last,
	    newtypeLast: newtypeLast,
	    eqLast: eqLast,
	    eq1Last: eq1Last,
	    ordLast: ordLast,
	    ord1Last: ord1Last,
	    boundedLast: boundedLast,
	    functorLast: functorLast,
	    invariantLast: invariantLast,
	    applyLast: applyLast,
	    applicativeLast: applicativeLast,
	    bindLast: bindLast,
	    monadLast: monadLast,
	    extendLast: extendLast,
	    showLast: showLast,
	    semigroupLast: semigroupLast,
	    monoidLast: monoidLast,
	    altLast: altLast,
	    plusLast: plusLast,
	    alternativeLast: alternativeLast,
	    monadZeroLast: monadZeroLast
	};


/***/ }),
/* 71 */
/*!**********************************************!*\
  !*** ./output/Data.Monoid.Additive/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Additive = function (x) {
	    return x;
	};
	var showAdditive = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupAdditive = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    });
	};
	var ordAdditive = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Additive);
	var monoidAdditive = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAdditive(dictSemiring);
	    }, Data_Semiring.zero(dictSemiring));
	};
	var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorAdditive = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendAdditive = new Control_Extend.Extend(function () {
	    return functorAdditive;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqAdditive = function (dictEq) {
	    return dictEq;
	};
	var comonadAdditive = new Control_Comonad.Comonad(function () {
	    return extendAdditive;
	}, Data_Newtype.unwrap(newtypeAdditive));
	var boundedAdditive = function (dictBounded) {
	    return dictBounded;
	};
	var applyAdditive = new Control_Apply.Apply(function () {
	    return functorAdditive;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindAdditive = new Control_Bind.Bind(function () {
	    return applyAdditive;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeAdditive = new Control_Applicative.Applicative(function () {
	    return applyAdditive;
	}, Additive);
	var monadAdditive = new Control_Monad.Monad(function () {
	    return applicativeAdditive;
	}, function () {
	    return bindAdditive;
	});
	module.exports = {
	    Additive: Additive,
	    newtypeAdditive: newtypeAdditive,
	    eqAdditive: eqAdditive,
	    ordAdditive: ordAdditive,
	    boundedAdditive: boundedAdditive,
	    functorAdditive: functorAdditive,
	    invariantAdditive: invariantAdditive,
	    applyAdditive: applyAdditive,
	    applicativeAdditive: applicativeAdditive,
	    bindAdditive: bindAdditive,
	    monadAdditive: monadAdditive,
	    extendAdditive: extendAdditive,
	    comonadAdditive: comonadAdditive,
	    showAdditive: showAdditive,
	    semigroupAdditive: semigroupAdditive,
	    monoidAdditive: monoidAdditive
	};


/***/ }),
/* 72 */
/*!*****************************************!*\
  !*** ./output/Control.Comonad/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Comonad = function (Extend0, extract) {
	    this.Extend0 = Extend0;
	    this.extract = extract;
	};
	var extract = function (dict) {
	    return dict.extract;
	};
	module.exports = {
	    Comonad: Comonad,
	    extract: extract
	};


/***/ }),
/* 73 */
/*!******************************************!*\
  !*** ./output/Data.Monoid.Conj/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Conj = function (x) {
	    return x;
	};
	var showConj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var semigroupConj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var ordConj = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeConj = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Conj);
	var monoidConj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorConj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendConj = new Control_Extend.Extend(function () {
	    return functorConj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqConj = function (dictEq) {
	    return dictEq;
	};
	var comonadConj = new Control_Comonad.Comonad(function () {
	    return extendConj;
	}, Data_Newtype.unwrap(newtypeConj));
	var boundedConj = function (dictBounded) {
	    return dictBounded;
	};
	var applyConj = new Control_Apply.Apply(function () {
	    return functorConj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindConj = new Control_Bind.Bind(function () {
	    return applyConj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeConj = new Control_Applicative.Applicative(function () {
	    return applyConj;
	}, Conj);
	var monadConj = new Control_Monad.Monad(function () {
	    return applicativeConj;
	}, function () {
	    return bindConj;
	});
	module.exports = {
	    Conj: Conj,
	    newtypeConj: newtypeConj,
	    eqConj: eqConj,
	    ordConj: ordConj,
	    boundedConj: boundedConj,
	    functorConj: functorConj,
	    invariantConj: invariantConj,
	    applyConj: applyConj,
	    applicativeConj: applicativeConj,
	    bindConj: bindConj,
	    monadConj: monadConj,
	    extendConj: extendConj,
	    comonadConj: comonadConj,
	    showConj: showConj,
	    semigroupConj: semigroupConj,
	    monoidConj: monoidConj,
	    semiringConj: semiringConj
	};


/***/ }),
/* 74 */
/*!******************************************!*\
  !*** ./output/Data.Monoid.Disj/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Disj = function (x) {
	    return x;
	};
	var showDisj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringDisj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var semigroupDisj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var ordDisj = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeDisj = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Disj);
	var monoidDisj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDisj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDisj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDisj = new Control_Extend.Extend(function () {
	    return functorDisj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDisj = function (dictEq) {
	    return dictEq;
	};
	var comonadDisj = new Control_Comonad.Comonad(function () {
	    return extendDisj;
	}, Data_Newtype.unwrap(newtypeDisj));
	var boundedDisj = function (dictBounded) {
	    return dictBounded;
	};
	var applyDisj = new Control_Apply.Apply(function () {
	    return functorDisj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDisj = new Control_Bind.Bind(function () {
	    return applyDisj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDisj = new Control_Applicative.Applicative(function () {
	    return applyDisj;
	}, Disj);
	var monadDisj = new Control_Monad.Monad(function () {
	    return applicativeDisj;
	}, function () {
	    return bindDisj;
	});
	module.exports = {
	    Disj: Disj,
	    newtypeDisj: newtypeDisj,
	    eqDisj: eqDisj,
	    ordDisj: ordDisj,
	    boundedDisj: boundedDisj,
	    functorDisj: functorDisj,
	    invariantDisj: invariantDisj,
	    applyDisj: applyDisj,
	    applicativeDisj: applicativeDisj,
	    bindDisj: bindDisj,
	    monadDisj: monadDisj,
	    extendDisj: extendDisj,
	    comonadDisj: comonadDisj,
	    showDisj: showDisj,
	    semigroupDisj: semigroupDisj,
	    monoidDisj: monoidDisj,
	    semiringDisj: semiringDisj
	};


/***/ }),
/* 75 */
/*!******************************************!*\
  !*** ./output/Data.Monoid.Dual/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Dual = function (x) {
	    return x;
	};
	var showDual = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupDual = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v1)(v);
	        };
	    });
	};
	var ordDual = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeDual = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Dual);
	var monoidDual = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDual(dictMonoid.Semigroup0());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDual = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDual = new Control_Extend.Extend(function () {
	    return functorDual;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDual = function (dictEq) {
	    return dictEq;
	};
	var comonadDual = new Control_Comonad.Comonad(function () {
	    return extendDual;
	}, Data_Newtype.unwrap(newtypeDual));
	var boundedDual = function (dictBounded) {
	    return dictBounded;
	};
	var applyDual = new Control_Apply.Apply(function () {
	    return functorDual;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDual = new Control_Bind.Bind(function () {
	    return applyDual;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDual = new Control_Applicative.Applicative(function () {
	    return applyDual;
	}, Dual);
	var monadDual = new Control_Monad.Monad(function () {
	    return applicativeDual;
	}, function () {
	    return bindDual;
	});
	module.exports = {
	    Dual: Dual,
	    newtypeDual: newtypeDual,
	    eqDual: eqDual,
	    ordDual: ordDual,
	    boundedDual: boundedDual,
	    functorDual: functorDual,
	    invariantDual: invariantDual,
	    applyDual: applyDual,
	    applicativeDual: applicativeDual,
	    bindDual: bindDual,
	    monadDual: monadDual,
	    extendDual: extendDual,
	    comonadDual: comonadDual,
	    showDual: showDual,
	    semigroupDual: semigroupDual,
	    monoidDual: monoidDual
	};


/***/ }),
/* 76 */
/*!******************************************!*\
  !*** ./output/Data.Monoid.Endo/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Endo = function (x) {
	    return x;
	};
	var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function ($11) {
	            return v(v1($11));
	        };
	    };
	});
	var newtypeEndo = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Endo);
	var monoidEndo = new Data_Monoid.Monoid(function () {
	    return semigroupEndo;
	}, Control_Category.id(Control_Category.categoryFn));
	var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
	    return function (ba) {
	        return function (v) {
	            return function ($12) {
	                return ab(v(ba($12)));
	            };
	        };
	    };
	});
	module.exports = {
	    Endo: Endo,
	    newtypeEndo: newtypeEndo,
	    invariantEndo: invariantEndo,
	    semigroupEndo: semigroupEndo,
	    monoidEndo: monoidEndo
	};


/***/ }),
/* 77 */
/*!****************************************************!*\
  !*** ./output/Data.Monoid.Multiplicative/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Multiplicative = function (x) {
	    return x;
	};
	var showMultiplicative = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupMultiplicative = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    });
	};
	var ordMultiplicative = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Multiplicative);
	var monoidMultiplicative = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMultiplicative(dictSemiring);
	    }, Data_Semiring.one(dictSemiring));
	};
	var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorMultiplicative = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendMultiplicative = new Control_Extend.Extend(function () {
	    return functorMultiplicative;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqMultiplicative = function (dictEq) {
	    return dictEq;
	};
	var comonadMultiplicative = new Control_Comonad.Comonad(function () {
	    return extendMultiplicative;
	}, Data_Newtype.unwrap(newtypeMultiplicative));
	var boundedMultiplicative = function (dictBounded) {
	    return dictBounded;
	};
	var applyMultiplicative = new Control_Apply.Apply(function () {
	    return functorMultiplicative;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindMultiplicative = new Control_Bind.Bind(function () {
	    return applyMultiplicative;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
	    return applyMultiplicative;
	}, Multiplicative);
	var monadMultiplicative = new Control_Monad.Monad(function () {
	    return applicativeMultiplicative;
	}, function () {
	    return bindMultiplicative;
	});
	module.exports = {
	    Multiplicative: Multiplicative,
	    newtypeMultiplicative: newtypeMultiplicative,
	    eqMultiplicative: eqMultiplicative,
	    ordMultiplicative: ordMultiplicative,
	    boundedMultiplicative: boundedMultiplicative,
	    functorMultiplicative: functorMultiplicative,
	    invariantMultiplicative: invariantMultiplicative,
	    applyMultiplicative: applyMultiplicative,
	    applicativeMultiplicative: applicativeMultiplicative,
	    bindMultiplicative: bindMultiplicative,
	    monadMultiplicative: monadMultiplicative,
	    extendMultiplicative: extendMultiplicative,
	    comonadMultiplicative: comonadMultiplicative,
	    showMultiplicative: showMultiplicative,
	    semigroupMultiplicative: semigroupMultiplicative,
	    monoidMultiplicative: monoidMultiplicative
	};


/***/ }),
/* 78 */
/*!********************************************!*\
  !*** ./output/Data.Bitraversable/index.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Bifoldable = __webpack_require__(/*! ../Data.Bifoldable */ 39);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Bifunctor_Clown = __webpack_require__(/*! ../Data.Bifunctor.Clown */ 40);
	var Data_Bifunctor_Flip = __webpack_require__(/*! ../Data.Bifunctor.Flip */ 57);
	var Data_Bifunctor_Joker = __webpack_require__(/*! ../Data.Bifunctor.Joker */ 58);
	var Data_Bifunctor_Product = __webpack_require__(/*! ../Data.Bifunctor.Product */ 59);
	var Data_Bifunctor_Wrap = __webpack_require__(/*! ../Data.Bifunctor.Wrap */ 60);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
	    this.Bifoldable1 = Bifoldable1;
	    this.Bifunctor0 = Bifunctor0;
	    this.bisequence = bisequence;
	    this.bitraverse = bitraverse;
	};
	var bitraverse = function (dict) {
	    return dict.bitraverse;
	};
	var lfor = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
	            };
	        };
	    };
	};
	var ltraverse = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
	        };
	    };
	};
	var rfor = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
	            };
	        };
	    };
	};
	var rtraverse = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
	    };
	};
	var bitraversableJoker = function (dictTraversable) {
	    return new Bitraversable(function () {
	        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
	    }, function () {
	        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
	        };
	    }, function (dictApplicative) {
	        return function (v) {
	            return function (r) {
	                return function (v1) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
	                };
	            };
	        };
	    });
	};
	var bitraversableClown = function (dictTraversable) {
	    return new Bitraversable(function () {
	        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
	    }, function () {
	        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
	        };
	    }, function (dictApplicative) {
	        return function (l) {
	            return function (v) {
	                return function (v1) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
	                };
	            };
	        };
	    });
	};
	var bisequenceDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var bisequence = function (dict) {
	    return dict.bisequence;
	};
	var bitraversableFlip = function (dictBitraversable) {
	    return new Bitraversable(function () {
	        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
	    }, function () {
	        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
	        };
	    }, function (dictApplicative) {
	        return function (r) {
	            return function (l) {
	                return function (v) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
	                };
	            };
	        };
	    });
	};
	var bitraversableProduct = function (dictBitraversable) {
	    return function (dictBitraversable1) {
	        return new Bitraversable(function () {
	            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
	        }, function () {
	            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
	        }, function (dictApplicative) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
	            };
	        }, function (dictApplicative) {
	            return function (l) {
	                return function (r) {
	                    return function (v) {
	                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
	                    };
	                };
	            };
	        });
	    };
	};
	var bitraversableWrap = function (dictBitraversable) {
	    return new Bitraversable(function () {
	        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
	    }, function () {
	        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
	        };
	    }, function (dictApplicative) {
	        return function (l) {
	            return function (r) {
	                return function (v) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
	                };
	            };
	        };
	    });
	};
	var bitraverseDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return function (t) {
	                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
	                };
	            };
	        };
	    };
	};
	var bifor = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bitraversable: Bitraversable,
	    bitraverse: bitraverse,
	    bisequence: bisequence,
	    bitraverseDefault: bitraverseDefault,
	    bisequenceDefault: bisequenceDefault,
	    ltraverse: ltraverse,
	    rtraverse: rtraverse,
	    bifor: bifor,
	    lfor: lfor,
	    rfor: rfor,
	    bitraversableClown: bitraversableClown,
	    bitraversableJoker: bitraversableJoker,
	    bitraversableFlip: bitraversableFlip,
	    bitraversableProduct: bitraversableProduct,
	    bitraversableWrap: bitraversableWrap
	};


/***/ }),
/* 79 */
/*!******************************************!*\
  !*** ./output/Data.Traversable/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 80);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Traversable_Accum = __webpack_require__(/*! ../Data.Traversable.Accum */ 81);
	var Data_Traversable_Accum_Internal = __webpack_require__(/*! ../Data.Traversable.Accum.Internal */ 82);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Traversable = function (Foldable1, Functor0, sequence, traverse) {
	    this.Foldable1 = Foldable1;
	    this.Functor0 = Functor0;
	    this.sequence = sequence;
	    this.traverse = traverse;
	};
	var traverse = function (dict) {
	    return dict.traverse;
	};
	var traversableMultiplicative = new Traversable(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function () {
	    return Data_Monoid_Multiplicative.functorMultiplicative;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
	        };
	    };
	});
	var traversableMaybe = new Traversable(function () {
	    return Data_Foldable.foldableMaybe;
	}, function () {
	    return Data_Maybe.functorMaybe;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableDual = new Traversable(function () {
	    return Data_Foldable.foldableDual;
	}, function () {
	    return Data_Monoid_Dual.functorDual;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
	        };
	    };
	});
	var traversableDisj = new Traversable(function () {
	    return Data_Foldable.foldableDisj;
	}, function () {
	    return Data_Monoid_Disj.functorDisj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
	        };
	    };
	});
	var traversableConj = new Traversable(function () {
	    return Data_Foldable.foldableConj;
	}, function () {
	    return Data_Monoid_Conj.functorConj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
	        };
	    };
	});
	var traversableAdditive = new Traversable(function () {
	    return Data_Foldable.foldableAdditive;
	}, function () {
	    return Data_Monoid_Additive.functorAdditive;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
	        };
	    };
	});
	var sequenceDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var traversableArray = new Traversable(function () {
	    return Data_Foldable.foldableArray;
	}, function () {
	    return Data_Functor.functorArray;
	}, function (dictApplicative) {
	    return sequenceDefault(traversableArray)(dictApplicative);
	}, function (dictApplicative) {
	    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
	});
	var sequence = function (dict) {
	    return dict.sequence;
	};
	var traversableFirst = new Traversable(function () {
	    return Data_Foldable.foldableFirst;
	}, function () {
	    return Data_Maybe_First.functorFirst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traversableLast = new Traversable(function () {
	    return Data_Foldable.foldableLast;
	}, function () {
	    return Data_Maybe_Last.functorLast;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traverseDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (ta) {
	                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
	            };
	        };
	    };
	};
	var mapAccumR = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanr = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumR(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(a)(b);
	                        return {
	                            accum: b$prime,
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var mapAccumL = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanl = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumL(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(b)(a);
	                        return {
	                            accum: b$prime,
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var $$for = function (dictApplicative) {
	    return function (dictTraversable) {
	        return function (x) {
	            return function (f) {
	                return traverse(dictTraversable)(dictApplicative)(f)(x);
	            };
	        };
	    };
	};
	module.exports = {
	    Traversable: Traversable,
	    traverse: traverse,
	    sequence: sequence,
	    traverseDefault: traverseDefault,
	    sequenceDefault: sequenceDefault,
	    "for": $$for,
	    scanl: scanl,
	    scanr: scanr,
	    mapAccumL: mapAccumL,
	    mapAccumR: mapAccumR,
	    traversableArray: traversableArray,
	    traversableMaybe: traversableMaybe,
	    traversableFirst: traversableFirst,
	    traversableLast: traversableLast,
	    traversableAdditive: traversableAdditive,
	    traversableDual: traversableDual,
	    traversableConj: traversableConj,
	    traversableDisj: traversableDisj,
	    traversableMultiplicative: traversableMultiplicative
	};


/***/ }),
/* 80 */
/*!********************************************!*\
  !*** ./output/Data.Traversable/foreign.js ***!
  \********************************************/
/***/ (function(module, exports) {

	"use strict";

	// jshint maxparams: 3

	exports.traverseArrayImpl = function () {
	  function Cont(fn) {
	    this.fn = fn;
	  }

	  var emptyList = {};

	  var ConsCell = function (head, tail) {
	    this.head = head;
	    this.tail = tail;
	  };

	  function consList(x) {
	    return function (xs) {
	      return new ConsCell(x, xs);
	    };
	  }

	  function listToArray(list) {
	    var arr = [];
	    var xs = list;
	    while (xs !== emptyList) {
	      arr.push(xs.head);
	      xs = xs.tail;
	    }
	    return arr;
	  }

	  return function (apply) {
	    return function (map) {
	      return function (pure) {
	        return function (f) {
	          var buildFrom = function (x, ys) {
	            return apply(map(consList)(f(x)))(ys);
	          };

	          var go = function (acc, currentLen, xs) {
	            if (currentLen === 0) {
	              return acc;
	            } else {
	              var last = xs[currentLen - 1];
	              return new Cont(function () {
	                return go(buildFrom(last, acc), currentLen - 1, xs);
	              });
	            }
	          };

	          return function (array) {
	            var result = go(pure(emptyList), array.length, array);
	            while (result instanceof Cont) {
	              result = result.fn();
	            }

	            return map(listToArray)(result);
	          };
	        };
	      };
	    };
	  };
	}();


/***/ }),
/* 81 */
/*!************************************************!*\
  !*** ./output/Data.Traversable.Accum/index.js ***!
  \************************************************/
/***/ (function(module, exports) {

	// Generated by purs version 0.11.7
	"use strict";
	module.exports = {};


/***/ }),
/* 82 */
/*!*********************************************************!*\
  !*** ./output/Data.Traversable.Accum.Internal/index.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Traversable_Accum = __webpack_require__(/*! ../Data.Traversable.Accum */ 81);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var StateR = function (x) {
	    return x;
	};
	var StateL = function (x) {
	    return x;
	};
	var stateR = function (v) {
	    return v;
	};
	var stateL = function (v) {
	    return v;
	};
	var functorStateR = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var v = stateR(k)(s);
	            return {
	                accum: v.accum,
	                value: f(v.value)
	            };
	        };
	    };
	});
	var functorStateL = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var v = stateL(k)(s);
	            return {
	                accum: v.accum,
	                value: f(v.value)
	            };
	        };
	    };
	});
	var applyStateR = new Control_Apply.Apply(function () {
	    return functorStateR;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var v = stateR(x)(s);
	            var v1 = stateR(f)(v.accum);
	            return {
	                accum: v1.accum,
	                value: v1.value(v.value)
	            };
	        };
	    };
	});
	var applyStateL = new Control_Apply.Apply(function () {
	    return functorStateL;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var v = stateL(f)(s);
	            var v1 = stateL(x)(v.accum);
	            return {
	                accum: v1.accum,
	                value: v.value(v1.value)
	            };
	        };
	    };
	});
	var applicativeStateR = new Control_Applicative.Applicative(function () {
	    return applyStateR;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s,
	            value: a
	        };
	    };
	});
	var applicativeStateL = new Control_Applicative.Applicative(function () {
	    return applyStateL;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s,
	            value: a
	        };
	    };
	});
	module.exports = {
	    StateL: StateL,
	    stateL: stateL,
	    StateR: StateR,
	    stateR: stateR,
	    functorStateL: functorStateL,
	    applyStateL: applyStateL,
	    applicativeStateL: applicativeStateL,
	    functorStateR: functorStateR,
	    applyStateR: applyStateR,
	    applicativeStateR: applicativeStateR
	};


/***/ }),
/* 83 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Except.Trans/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var ExceptT = function (x) {
	    return x;
	};
	var withExceptT = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            var mapLeft = function (v1) {
	                return function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return new Data_Either.Right(v2.value0);
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return new Data_Either.Left(v1(v2.value0));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
	                };
	            };
	            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
	        };
	    };
	};
	var runExceptT = function (v) {
	    return v;
	};
	var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ExceptT);
	var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
	            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
	        });
	    };
	});
	var mapExceptT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorExceptT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
	    });
	};
	var except = function (dictApplicative) {
	    return function ($96) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
	    };
	};
	var monadExceptT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeExceptT(dictMonad);
	    }, function () {
	        return bindExceptT(dictMonad);
	    });
	};
	var bindExceptT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
	            })(function (a) {
	                var v1 = k(a);
	                return v1;
	            }));
	        };
	    });
	};
	var applyExceptT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
	    }, Control_Monad.ap(monadExceptT(dictMonad)));
	};
	var applicativeExceptT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyExceptT(dictMonad);
	    }, function ($98) {
	        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
	    });
	};
	var monadAskExceptT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadExceptT(dictMonadAsk.Monad0());
	    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderExceptT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskExceptT(dictMonadReader.MonadAsk0());
	    }, function (f) {
	        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadContExceptT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadExceptT(dictMonadCont.Monad0());
	    }, function (f) {
	        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var v = f(function (a) {
	                return ExceptT(c(new Data_Either.Right(a)));
	            });
	            return v;
	        }));
	    });
	};
	var monadEffExceptT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadExceptT(dictMonadEff.Monad0());
	    }, function ($99) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99));
	    });
	};
	var monadRecExceptT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadExceptT(dictMonadRec.Monad0());
	    }, function (f) {
	        return function ($100) {
	            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
	                    var v = f(a);
	                    return v;
	                })())(function (m$prime) {
	                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
	                        if (m$prime instanceof Data_Either.Left) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 14 - line 79, column 43: " + [ m$prime.constructor.name ]);
	                    })());
	                });
	            })($100));
	        };
	    });
	};
	var monadStateExceptT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadExceptT(dictMonadState.Monad0());
	    }, function (f) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadTellExceptT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadExceptT(dictMonadTell.Monad0());
	    }, function ($101) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
	    });
	};
	var monadWriterExceptT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellExceptT(dictMonadWriter.MonadTell0());
	    }, mapExceptT(function (m) {
	        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapExceptT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
	                if (v instanceof Data_Either.Left) {
	                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 138, column 10 - line 140, column 44: " + [ v.constructor.name ]);
	            })());
	        }));
	    }));
	};
	var monadThrowExceptT = function (dictMonad) {
	    return new Control_Monad_Error_Class.MonadThrow(function () {
	        return monadExceptT(dictMonad);
	    }, function ($102) {
	        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
	    });
	};
	var monadErrorExceptT = function (dictMonad) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadThrowExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
	                var v1 = k(a);
	                return v1;
	            })(function ($103) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
	            }));
	        };
	    });
	};
	var altExceptT = function (dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Alt.Alt(function () {
	            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
	        }, function (v) {
	            return function (v1) {
	                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
	                            };
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
	                });
	            };
	        });
	    };
	};
	var plusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Plus.Plus(function () {
	            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
	        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var alternativeExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeExceptT(dictMonad);
	        }, function () {
	            return plusExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	var monadZeroExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeExceptT(dictMonoid)(dictMonad);
	        }, function () {
	            return monadExceptT(dictMonad);
	        });
	    };
	};
	var monadPlusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	module.exports = {
	    ExceptT: ExceptT,
	    runExceptT: runExceptT,
	    withExceptT: withExceptT,
	    mapExceptT: mapExceptT,
	    except: except,
	    newtypeExceptT: newtypeExceptT,
	    functorExceptT: functorExceptT,
	    applyExceptT: applyExceptT,
	    applicativeExceptT: applicativeExceptT,
	    bindExceptT: bindExceptT,
	    monadExceptT: monadExceptT,
	    monadRecExceptT: monadRecExceptT,
	    altExceptT: altExceptT,
	    plusExceptT: plusExceptT,
	    alternativeExceptT: alternativeExceptT,
	    monadPlusExceptT: monadPlusExceptT,
	    monadZeroExceptT: monadZeroExceptT,
	    monadTransExceptT: monadTransExceptT,
	    monadEffExceptT: monadEffExceptT,
	    monadContExceptT: monadContExceptT,
	    monadThrowExceptT: monadThrowExceptT,
	    monadErrorExceptT: monadErrorExceptT,
	    monadAskExceptT: monadAskExceptT,
	    monadReaderExceptT: monadReaderExceptT,
	    monadStateExceptT: monadStateExceptT,
	    monadTellExceptT: monadTellExceptT,
	    monadWriterExceptT: monadWriterExceptT
	};


/***/ }),
/* 84 */
/*!**************************************************!*\
  !*** ./output/Control.Monad.Cont.Class/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadCont = function (Monad0, callCC) {
	    this.Monad0 = Monad0;
	    this.callCC = callCC;
	};
	var callCC = function (dict) {
	    return dict.callCC;
	};
	module.exports = {
	    MonadCont: MonadCont,
	    callCC: callCC
	};


/***/ }),
/* 85 */
/*!*************************************************!*\
  !*** ./output/Control.Monad.Eff.Class/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var MonadEff = function (Monad0, liftEff) {
	    this.Monad0 = Monad0;
	    this.liftEff = liftEff;
	};
	var monadEffEff = new MonadEff(function () {
	    return Control_Monad_Eff.monadEff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftEff = function (dict) {
	    return dict.liftEff;
	};
	module.exports = {
	    liftEff: liftEff,
	    MonadEff: MonadEff,
	    monadEffEff: monadEffEff
	};


/***/ }),
/* 86 */
/*!*******************************************!*\
  !*** ./output/Control.Monad.Eff/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 87);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var monadEff = new Control_Monad.Monad(function () {
	    return applicativeEff;
	}, function () {
	    return bindEff;
	});
	var bindEff = new Control_Bind.Bind(function () {
	    return applyEff;
	}, $foreign.bindE);
	var applyEff = new Control_Apply.Apply(function () {
	    return functorEff;
	}, Control_Monad.ap(monadEff));
	var applicativeEff = new Control_Applicative.Applicative(function () {
	    return applyEff;
	}, $foreign.pureE);
	var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
	var semigroupEff = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEff)(Data_Semigroup.append(dictSemigroup)));
	};
	var monoidEff = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupEff(dictMonoid.Semigroup0());
	    }, Control_Applicative.pure(applicativeEff)(Data_Monoid.mempty(dictMonoid)));
	};
	module.exports = {
	    semigroupEff: semigroupEff,
	    monoidEff: monoidEff,
	    functorEff: functorEff,
	    applyEff: applyEff,
	    applicativeEff: applicativeEff,
	    bindEff: bindEff,
	    monadEff: monadEff,
	    runPure: $foreign.runPure,
	    untilE: $foreign.untilE,
	    whileE: $foreign.whileE,
	    forE: $foreign.forE,
	    foreachE: $foreign.foreachE
	};


/***/ }),
/* 87 */
/*!*********************************************!*\
  !*** ./output/Control.Monad.Eff/foreign.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.pureE = function (a) {
	  return function () {
	    return a;
	  };
	};

	exports.bindE = function (a) {
	  return function (f) {
	    return function () {
	      return f(a())();
	    };
	  };
	};

	exports.runPure = function (f) {
	  return f();
	};

	exports.untilE = function (f) {
	  return function () {
	    while (!f());
	    return {};
	  };
	};

	exports.whileE = function (f) {
	  return function (a) {
	    return function () {
	      while (f()) {
	        a();
	      }
	      return {};
	    };
	  };
	};

	exports.forE = function (lo) {
	  return function (hi) {
	    return function (f) {
	      return function () {
	        for (var i = lo; i < hi; i++) {
	          f(i)();
	        }
	      };
	    };
	  };
	};

	exports.foreachE = function (as) {
	  return function (f) {
	    return function () {
	      for (var i = 0, l = as.length; i < l; i++) {
	        f(as[i])();
	      }
	    };
	  };
	};


/***/ }),
/* 88 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Reader.Class/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadAsk = function (Monad0, ask) {
	    this.Monad0 = Monad0;
	    this.ask = ask;
	};
	var MonadReader = function (MonadAsk0, local) {
	    this.MonadAsk0 = MonadAsk0;
	    this.local = local;
	};
	var monadAskFun = new MonadAsk(function () {
	    return Control_Monad.monadFn;
	}, Control_Category.id(Control_Category.categoryFn));
	var monadReaderFun = new MonadReader(function () {
	    return monadAskFun;
	}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
	var local = function (dict) {
	    return dict.local;
	};
	var ask = function (dict) {
	    return dict.ask;
	};
	var asks = function (dictMonadAsk) {
	    return function (f) {
	        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
	    };
	};
	module.exports = {
	    ask: ask,
	    local: local,
	    MonadAsk: MonadAsk,
	    asks: asks,
	    MonadReader: MonadReader,
	    monadAskFun: monadAskFun,
	    monadReaderFun: monadReaderFun
	};


/***/ }),
/* 89 */
/*!*************************************************!*\
  !*** ./output/Control.Monad.Rec.Class/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ../Control.Monad.Eff.Unsafe */ 90);
	var Control_Monad_ST = __webpack_require__(/*! ../Control.Monad.ST */ 92);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Loop = (function () {
	    function Loop(value0) {
	        this.value0 = value0;
	    };
	    Loop.create = function (value0) {
	        return new Loop(value0);
	    };
	    return Loop;
	})();
	var Done = (function () {
	    function Done(value0) {
	        this.value0 = value0;
	    };
	    Done.create = function (value0) {
	        return new Done(value0);
	    };
	    return Done;
	})();
	var MonadRec = function (Monad0, tailRecM) {
	    this.Monad0 = Monad0;
	    this.tailRecM = tailRecM;
	};
	var tailRecM = function (dict) {
	    return dict.tailRecM;
	};
	var tailRecM2 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return tailRecM(dictMonadRec)(function (o) {
	                    return f(o.a)(o.b);
	                })({
	                    a: a,
	                    b: b
	                });
	            };
	        };
	    };
	};
	var tailRecM3 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return tailRecM(dictMonadRec)(function (o) {
	                        return f(o.a)(o.b)(o.c);
	                    })({
	                        a: a,
	                        b: b,
	                        c: c
	                    });
	                };
	            };
	        };
	    };
	};
	var tailRecEff = function (f) {
	    return function (a) {
	        var fromDone = function (v) {
	            var __unused = function (dictPartial1) {
	                return function ($dollar16) {
	                    return $dollar16;
	                };
	            };
	            return __unused()((function () {
	                if (v instanceof Done) {
	                    return v.value0;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
	            })());
	        };
	        var f$prime = function ($52) {
	            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
	        };
	        return function __do() {
	            var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
	            (function () {
	                while (!(function __do() {
	                    var v1 = v.value;
	                    if (v1 instanceof Loop) {
	                        var v2 = f$prime(v1.value0)();
	                        var v3 = v.value = v2;
	                        return false;
	                    };
	                    if (v1 instanceof Done) {
	                        return true;
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
	                })()) {

	                };
	                return {};
	            })();
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
	        };
	    };
	};
	var tailRec = function (f) {
	    var go = function ($copy_v) {
	        var $tco_done = false;
	        var $tco_result;
	        function $tco_loop(v) {
	            if (v instanceof Loop) {
	                $copy_v = f(v.value0);
	                return;
	            };
	            if (v instanceof Done) {
	                $tco_done = true;
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
	        };
	        while (!$tco_done) {
	            $tco_result = $tco_loop($copy_v);
	        };
	        return $tco_result;
	    };
	    return function ($53) {
	        return go(f($53));
	    };
	};
	var monadRecMaybe = new MonadRec(function () {
	    return Data_Maybe.monadMaybe;
	}, function (f) {
	    return function (a0) {
	        var g = function (v) {
	            if (v instanceof Data_Maybe.Nothing) {
	                return new Done(Data_Maybe.Nothing.value);
	            };
	            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
	                return new Loop(f(v.value0.value0));
	            };
	            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
	                return new Done(new Data_Maybe.Just(v.value0.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 120, column 7 - line 120, column 31: " + [ v.constructor.name ]);
	        };
	        return tailRec(g)(f(a0));
	    };
	});
	var monadRecIdentity = new MonadRec(function () {
	    return Data_Identity.monadIdentity;
	}, function (f) {
	    var runIdentity = function (v) {
	        return v;
	    };
	    return function ($54) {
	        return Data_Identity.Identity(tailRec(function ($55) {
	            return runIdentity(f($55));
	        })($54));
	    };
	});
	var monadRecFunction = new MonadRec(function () {
	    return Control_Monad.monadFn;
	}, function (f) {
	    return function (a0) {
	        return function (e) {
	            return tailRec(function (a) {
	                return f(a)(e);
	            })(a0);
	        };
	    };
	});
	var monadRecEither = new MonadRec(function () {
	    return Data_Either.monadEither;
	}, function (f) {
	    return function (a0) {
	        var g = function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new Done(new Data_Either.Left(v.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
	                return new Loop(f(v.value0.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
	                return new Done(new Data_Either.Right(v.value0.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
	        };
	        return tailRec(g)(f(a0));
	    };
	});
	var monadRecEff = new MonadRec(function () {
	    return Control_Monad_Eff.monadEff;
	}, tailRecEff);
	var functorStep = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        if (v instanceof Loop) {
	            return new Loop(v.value0);
	        };
	        if (v instanceof Done) {
	            return new Done(f(v.value0));
	        };
	        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 1 - line 28, column 41: " + [ f.constructor.name, v.constructor.name ]);
	    };
	});
	var forever = function (dictMonadRec) {
	    return function (ma) {
	        return tailRecM(dictMonadRec)(function (u) {
	            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
	        })(Data_Unit.unit);
	    };
	};
	var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Loop) {
	                return new Loop(v(v2.value0));
	            };
	            if (v2 instanceof Done) {
	                return new Done(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	module.exports = {
	    Loop: Loop,
	    Done: Done,
	    MonadRec: MonadRec,
	    tailRec: tailRec,
	    tailRecM: tailRecM,
	    tailRecM2: tailRecM2,
	    tailRecM3: tailRecM3,
	    forever: forever,
	    functorStep: functorStep,
	    bifunctorStep: bifunctorStep,
	    monadRecIdentity: monadRecIdentity,
	    monadRecEff: monadRecEff,
	    monadRecFunction: monadRecFunction,
	    monadRecEither: monadRecEither,
	    monadRecMaybe: monadRecMaybe
	};


/***/ }),
/* 90 */
/*!**************************************************!*\
  !*** ./output/Control.Monad.Eff.Unsafe/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 91);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var unsafePerformEff = function ($0) {
	    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
	};
	module.exports = {
	    unsafePerformEff: unsafePerformEff,
	    unsafeCoerceEff: $foreign.unsafeCoerceEff
	};


/***/ }),
/* 91 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Eff.Unsafe/foreign.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.unsafeCoerceEff = function (f) {
	  return f;
	};


/***/ }),
/* 92 */
/*!******************************************!*\
  !*** ./output/Control.Monad.ST/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 93);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var pureST = function (st) {
	    return Control_Monad_Eff.runPure($foreign.runST(st));
	};
	module.exports = {
	    pureST: pureST,
	    newSTRef: $foreign.newSTRef,
	    readSTRef: $foreign.readSTRef,
	    modifySTRef: $foreign.modifySTRef,
	    writeSTRef: $foreign.writeSTRef,
	    runST: $foreign.runST
	};


/***/ }),
/* 93 */
/*!********************************************!*\
  !*** ./output/Control.Monad.ST/foreign.js ***!
  \********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.newSTRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};

	exports.readSTRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};

	exports.modifySTRef = function (ref) {
	  return function (f) {
	    return function () {
	      return ref.value = f(ref.value); // eslint-disable-line no-return-assign
	    };
	  };
	};

	exports.writeSTRef = function (ref) {
	  return function (a) {
	    return function () {
	      return ref.value = a; // eslint-disable-line no-return-assign
	    };
	  };
	};

	exports.runST = function (f) {
	  return f;
	};


/***/ }),
/* 94 */
/*!***************************************!*\
  !*** ./output/Data.Identity/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Field = __webpack_require__(/*! ../Data.Field */ 55);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Identity = function (x) {
	    return x;
	};
	var showIdentity = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringIdentity = function (dictSemiring) {
	    return dictSemiring;
	};
	var semigroupIdenity = function (dictSemigroup) {
	    return dictSemigroup;
	};
	var ringIdentity = function (dictRing) {
	    return dictRing;
	};
	var ordIdentity = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Identity);
	var monoidIdentity = function (dictMonoid) {
	    return dictMonoid;
	};
	var lazyIdentity = function (dictLazy) {
	    return dictLazy;
	};
	var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
	    return dictHeytingAlgebra;
	};
	var functorIdentity = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
	var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var traversableIdentity = new Data_Traversable.Traversable(function () {
	    return foldableIdentity;
	}, function () {
	    return functorIdentity;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
	        };
	    };
	});
	var fieldIdentity = function (dictField) {
	    return dictField;
	};
	var extendIdentity = new Control_Extend.Extend(function () {
	    return functorIdentity;
	}, function (f) {
	    return function (m) {
	        return f(m);
	    };
	});
	var euclideanRingIdentity = function (dictEuclideanRing) {
	    return dictEuclideanRing;
	};
	var eqIdentity = function (dictEq) {
	    return dictEq;
	};
	var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
	    return Data_Eq.eq(eqIdentity(dictEq));
	});
	var ord1Identity = new Data_Ord.Ord1(function () {
	    return eq1Identity;
	}, function (dictOrd) {
	    return Data_Ord.compare(ordIdentity(dictOrd));
	});
	var comonadIdentity = new Control_Comonad.Comonad(function () {
	    return extendIdentity;
	}, function (v) {
	    return v;
	});
	var commutativeRingIdentity = function (dictCommutativeRing) {
	    return dictCommutativeRing;
	};
	var boundedIdentity = function (dictBounded) {
	    return dictBounded;
	};
	var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
	    return dictBooleanAlgebra;
	};
	var applyIdentity = new Control_Apply.Apply(function () {
	    return functorIdentity;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindIdentity = new Control_Bind.Bind(function () {
	    return applyIdentity;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeIdentity = new Control_Applicative.Applicative(function () {
	    return applyIdentity;
	}, Identity);
	var monadIdentity = new Control_Monad.Monad(function () {
	    return applicativeIdentity;
	}, function () {
	    return bindIdentity;
	});
	var altIdentity = new Control_Alt.Alt(function () {
	    return functorIdentity;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	module.exports = {
	    Identity: Identity,
	    newtypeIdentity: newtypeIdentity,
	    eqIdentity: eqIdentity,
	    ordIdentity: ordIdentity,
	    boundedIdentity: boundedIdentity,
	    heytingAlgebraIdentity: heytingAlgebraIdentity,
	    booleanAlgebraIdentity: booleanAlgebraIdentity,
	    semigroupIdenity: semigroupIdenity,
	    monoidIdentity: monoidIdentity,
	    semiringIdentity: semiringIdentity,
	    euclideanRingIdentity: euclideanRingIdentity,
	    ringIdentity: ringIdentity,
	    commutativeRingIdentity: commutativeRingIdentity,
	    fieldIdentity: fieldIdentity,
	    lazyIdentity: lazyIdentity,
	    showIdentity: showIdentity,
	    eq1Identity: eq1Identity,
	    ord1Identity: ord1Identity,
	    functorIdentity: functorIdentity,
	    invariantIdentity: invariantIdentity,
	    altIdentity: altIdentity,
	    applyIdentity: applyIdentity,
	    applicativeIdentity: applicativeIdentity,
	    bindIdentity: bindIdentity,
	    monadIdentity: monadIdentity,
	    extendIdentity: extendIdentity,
	    comonadIdentity: comonadIdentity,
	    foldableIdentity: foldableIdentity,
	    traversableIdentity: traversableIdentity
	};


/***/ }),
/* 95 */
/*!**************************************!*\
  !*** ./output/Control.Lazy/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Lazy = function (defer) {
	    this.defer = defer;
	};
	var lazyUnit = new Lazy(function (v) {
	    return Data_Unit.unit;
	});
	var lazyFn = new Lazy(function (f) {
	    return function (x) {
	        return f(Data_Unit.unit)(x);
	    };
	});
	var defer = function (dict) {
	    return dict.defer;
	};
	var fix = function (dictLazy) {
	    return function (f) {
	        return defer(dictLazy)(function (v) {
	            return f(fix(dictLazy)(f));
	        });
	    };
	};
	module.exports = {
	    defer: defer,
	    Lazy: Lazy,
	    fix: fix,
	    lazyFn: lazyFn,
	    lazyUnit: lazyUnit
	};


/***/ }),
/* 96 */
/*!****************************************!*\
  !*** ./output/Partial.Unsafe/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 97);
	var Partial = __webpack_require__(/*! ../Partial */ 98);
	var unsafePartialBecause = function (v) {
	    return function (x) {
	        return $foreign.unsafePartial(function (dictPartial) {
	            return x(dictPartial);
	        });
	    };
	};
	var unsafeCrashWith = function (msg) {
	    return $foreign.unsafePartial(function (dictPartial) {
	        return Partial.crashWith(dictPartial)(msg);
	    });
	};
	module.exports = {
	    unsafePartialBecause: unsafePartialBecause,
	    unsafeCrashWith: unsafeCrashWith,
	    unsafePartial: $foreign.unsafePartial
	};


/***/ }),
/* 97 */
/*!******************************************!*\
  !*** ./output/Partial.Unsafe/foreign.js ***!
  \******************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Partial.Unsafe

	exports.unsafePartial = function (f) {
	  return f();
	};


/***/ }),
/* 98 */
/*!*********************************!*\
  !*** ./output/Partial/index.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 99);
	var crash = function (dictPartial) {
	    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
	};
	module.exports = {
	    crash: crash,
	    crashWith: $foreign.crashWith
	};


/***/ }),
/* 99 */
/*!***********************************!*\
  !*** ./output/Partial/foreign.js ***!
  \***********************************/
/***/ (function(module, exports) {

	"use strict";

	// module Partial

	exports.crashWith = function () {
	  return function (msg) {
	    throw new Error(msg);
	  };
	};


/***/ }),
/* 100 */
/*!***************************************************!*\
  !*** ./output/Control.Monad.State.Class/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadState = function (Monad0, state) {
	    this.Monad0 = Monad0;
	    this.state = state;
	};
	var state = function (dict) {
	    return dict.state;
	};
	var put = function (dictMonadState) {
	    return function (s) {
	        return state(dictMonadState)(function (v) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, s);
	        });
	    };
	};
	var modify = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
	        });
	    };
	};
	var gets = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(f(s), s);
	        });
	    };
	};
	var get = function (dictMonadState) {
	    return state(dictMonadState)(function (s) {
	        return new Data_Tuple.Tuple(s, s);
	    });
	};
	module.exports = {
	    state: state,
	    MonadState: MonadState,
	    get: get,
	    gets: gets,
	    put: put,
	    modify: modify
	};


/***/ }),
/* 101 */
/*!************************************!*\
  !*** ./output/Data.Tuple/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Biapplicative = __webpack_require__(/*! ../Control.Biapplicative */ 41);
	var Control_Biapply = __webpack_require__(/*! ../Control.Biapply */ 42);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifoldable = __webpack_require__(/*! ../Data.Bifoldable */ 39);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Bitraversable = __webpack_require__(/*! ../Data.Bitraversable */ 78);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_Distributive = __webpack_require__(/*! ../Data.Distributive */ 102);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Type_Equality = __webpack_require__(/*! ../Type.Equality */ 103);
	var Tuple = (function () {
	    function Tuple(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tuple.create = function (value0) {
	        return function (value1) {
	            return new Tuple(value0, value1);
	        };
	    };
	    return Tuple;
	})();
	var uncurry = function (f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var swap = function (v) {
	    return new Tuple(v.value1, v.value0);
	};
	var snd = function (v) {
	    return v.value1;
	};
	var showTuple = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var semiringTuple = function (dictSemiring) {
	    return function (dictSemiring1) {
	        return new Data_Semiring.Semiring(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
	    };
	};
	var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return new Tuple(v1.value0, v.value1);
	    };
	});
	var semigroupTuple = function (dictSemigroup) {
	    return function (dictSemigroup1) {
	        return new Data_Semigroup.Semigroup(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var ringTuple = function (dictRing) {
	    return function (dictRing1) {
	        return new Data_Ring.Ring(function () {
	            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var monoidTuple = function (dictMonoid) {
	    return function (dictMonoid1) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
	        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
	    };
	};
	var lookup = function (dictFoldable) {
	    return function (dictEq) {
	        return function (a) {
	            return function ($264) {
	                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
	                    var $146 = Data_Eq.eq(dictEq)(a)(v.value0);
	                    if ($146) {
	                        return new Data_Maybe.Just(v.value1);
	                    };
	                    return Data_Maybe.Nothing.value;
	                })($264));
	            };
	        };
	    };
	};
	var heytingAlgebraTuple = function (dictHeytingAlgebra) {
	    return function (dictHeytingAlgebra1) {
	        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
	        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
	    };
	};
	var functorTuple = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v.value1));
	    };
	});
	var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
	var fst = function (v) {
	    return v.value0;
	};
	var lazyTuple = function (dictLazy) {
	    return function (dictLazy1) {
	        return new Control_Lazy.Lazy(function (f) {
	            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
	                return fst(f(Data_Unit.unit));
	            }), Control_Lazy.defer(dictLazy1)(function (v) {
	                return snd(f(Data_Unit.unit));
	            }));
	        });
	    };
	};
	var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v.value1)(z);
	        };
	    };
	});
	var traversableTuple = new Data_Traversable.Traversable(function () {
	    return foldableTuple;
	}, function () {
	    return functorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
	        };
	    };
	});
	var extendTuple = new Control_Extend.Extend(function () {
	    return functorTuple;
	}, function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v));
	    };
	});
	var eqTuple = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var ordTuple = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
	        }, function (x) {
	            return function (y) {
	                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                if (v instanceof Data_Ordering.LT) {
	                    return Data_Ordering.LT.value;
	                };
	                if (v instanceof Data_Ordering.GT) {
	                    return Data_Ordering.GT.value;
	                };
	                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var eq1Tuple = function (dictEq) {
	    return new Data_Eq.Eq1(function (dictEq1) {
	        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
	    });
	};
	var ord1Tuple = function (dictOrd) {
	    return new Data_Ord.Ord1(function () {
	        return eq1Tuple(dictOrd.Eq0());
	    }, function (dictOrd1) {
	        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
	    });
	};
	var distributiveTuple = function (dictTypeEquals) {
	    return new Data_Distributive.Distributive(function () {
	        return functorTuple;
	    }, function (dictFunctor) {
	        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
	    }, function (dictFunctor) {
	        return function ($265) {
	            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($265));
	        };
	    });
	};
	var curry = function (f) {
	    return function (a) {
	        return function (b) {
	            return f(new Tuple(a, b));
	        };
	    };
	};
	var comonadTuple = new Control_Comonad.Comonad(function () {
	    return extendTuple;
	}, snd);
	var commutativeRingTuple = function (dictCommutativeRing) {
	    return function (dictCommutativeRing1) {
	        return new Data_CommutativeRing.CommutativeRing(function () {
	            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
	        });
	    };
	};
	var boundedTuple = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
	        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
	    };
	};
	var booleanAlgebraTuple = function (dictBooleanAlgebra) {
	    return function (dictBooleanAlgebra1) {
	        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
	        });
	    };
	};
	var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Tuple(f(v.value0), g(v.value1));
	        };
	    };
	});
	var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return g(f(z)(v.value0))(v.value1);
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return f(v.value0)(g(v.value1)(z));
	            };
	        };
	    };
	});
	var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableTuple;
	}, function () {
	    return bifunctorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
	            };
	        };
	    };
	});
	var biapplyTuple = new Control_Biapply.Biapply(function () {
	    return bifunctorTuple;
	}, function (v) {
	    return function (v1) {
	        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
	    };
	});
	var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
	    return biapplyTuple;
	}, Tuple.create);
	var applyTuple = function (dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorTuple;
	    }, function (v) {
	        return function (v1) {
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
	        };
	    });
	};
	var bindTuple = function (dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyTuple(dictSemigroup);
	    }, function (v) {
	        return function (f) {
	            var v1 = f(v.value1);
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
	        };
	    });
	};
	var applicativeTuple = function (dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyTuple(dictMonoid.Semigroup0());
	    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
	};
	var monadTuple = function (dictMonoid) {
	    return new Control_Monad.Monad(function () {
	        return applicativeTuple(dictMonoid);
	    }, function () {
	        return bindTuple(dictMonoid.Semigroup0());
	    });
	};
	module.exports = {
	    Tuple: Tuple,
	    fst: fst,
	    snd: snd,
	    curry: curry,
	    uncurry: uncurry,
	    swap: swap,
	    lookup: lookup,
	    showTuple: showTuple,
	    eqTuple: eqTuple,
	    eq1Tuple: eq1Tuple,
	    ordTuple: ordTuple,
	    ord1Tuple: ord1Tuple,
	    boundedTuple: boundedTuple,
	    semigroupoidTuple: semigroupoidTuple,
	    semigroupTuple: semigroupTuple,
	    monoidTuple: monoidTuple,
	    semiringTuple: semiringTuple,
	    ringTuple: ringTuple,
	    commutativeRingTuple: commutativeRingTuple,
	    heytingAlgebraTuple: heytingAlgebraTuple,
	    booleanAlgebraTuple: booleanAlgebraTuple,
	    functorTuple: functorTuple,
	    invariantTuple: invariantTuple,
	    bifunctorTuple: bifunctorTuple,
	    applyTuple: applyTuple,
	    biapplyTuple: biapplyTuple,
	    applicativeTuple: applicativeTuple,
	    biapplicativeTuple: biapplicativeTuple,
	    bindTuple: bindTuple,
	    monadTuple: monadTuple,
	    extendTuple: extendTuple,
	    comonadTuple: comonadTuple,
	    lazyTuple: lazyTuple,
	    foldableTuple: foldableTuple,
	    bifoldableTuple: bifoldableTuple,
	    traversableTuple: traversableTuple,
	    bitraversableTuple: bitraversableTuple,
	    distributiveTuple: distributiveTuple
	};


/***/ }),
/* 102 */
/*!*******************************************!*\
  !*** ./output/Data.Distributive/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Distributive = function (Functor0, collect, distribute) {
	    this.Functor0 = Functor0;
	    this.collect = collect;
	    this.distribute = distribute;
	};
	var distributiveIdentity = new Distributive(function () {
	    return Data_Identity.functorIdentity;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($11) {
	            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
	                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
	            })($11));
	        };
	    };
	}, function (dictFunctor) {
	    return function ($13) {
	        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
	    };
	});
	var distribute = function (dict) {
	    return dict.distribute;
	};
	var distributiveFunction = new Distributive(function () {
	    return Data_Functor.functorFn;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($14) {
	            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
	        };
	    };
	}, function (dictFunctor) {
	    return function (a) {
	        return function (e) {
	            return Data_Functor.map(dictFunctor)(function (v) {
	                return v(e);
	            })(a);
	        };
	    };
	});
	var cotraverse = function (dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($15) {
	                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
	            };
	        };
	    };
	};
	var collectDefault = function (dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($16) {
	                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
	            };
	        };
	    };
	};
	var collect = function (dict) {
	    return dict.collect;
	};
	var distributeDefault = function (dictDistributive) {
	    return function (dictFunctor) {
	        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    collect: collect,
	    distribute: distribute,
	    Distributive: Distributive,
	    distributeDefault: distributeDefault,
	    collectDefault: collectDefault,
	    cotraverse: cotraverse,
	    distributiveIdentity: distributiveIdentity,
	    distributiveFunction: distributiveFunction
	};


/***/ }),
/* 103 */
/*!***************************************!*\
  !*** ./output/Type.Equality/index.js ***!
  \***************************************/
/***/ (function(module, exports) {

	// Generated by purs version 0.11.7
	"use strict";
	var TypeEquals = function (from, to) {
	    this.from = from;
	    this.to = to;
	};
	var to = function (dict) {
	    return dict.to;
	};
	var refl = new TypeEquals(function (a) {
	    return a;
	}, function (a) {
	    return a;
	});
	var from = function (dict) {
	    return dict.from;
	};
	module.exports = {
	    TypeEquals: TypeEquals,
	    to: to,
	    from: from,
	    refl: refl
	};


/***/ }),
/* 104 */
/*!***************************************************!*\
  !*** ./output/Control.Monad.Trans.Class/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadTrans = function (lift) {
	    this.lift = lift;
	};
	var lift = function (dict) {
	    return dict.lift;
	};
	module.exports = {
	    lift: lift,
	    MonadTrans: MonadTrans
	};


/***/ }),
/* 105 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Writer.Class/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MonadTell = function (Monad0, tell) {
	    this.Monad0 = Monad0;
	    this.tell = tell;
	};
	var MonadWriter = function (MonadTell0, listen, pass) {
	    this.MonadTell0 = MonadTell0;
	    this.listen = listen;
	    this.pass = pass;
	};
	var tell = function (dict) {
	    return dict.tell;
	};
	var pass = function (dict) {
	    return dict.pass;
	};
	var listen = function (dict) {
	    return dict.listen;
	};
	var listens = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
	            });
	        };
	    };
	};
	var censor = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
	            }));
	        };
	    };
	};
	module.exports = {
	    listen: listen,
	    pass: pass,
	    tell: tell,
	    MonadTell: MonadTell,
	    MonadWriter: MonadWriter,
	    listens: listens,
	    censor: censor
	};


/***/ }),
/* 106 */
/*!*******************************************!*\
  !*** ./output/Control.MonadPlus/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var MonadPlus = function (MonadZero0) {
	    this.MonadZero0 = MonadZero0;
	};
	var monadPlusArray = new MonadPlus(function () {
	    return Control_MonadZero.monadZeroArray;
	});
	module.exports = {
	    MonadPlus: MonadPlus,
	    monadPlusArray: monadPlusArray
	};


/***/ }),
/* 107 */
/*!**************************************************!*\
  !*** ./output/Control.Monad.Free.Trans/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Exists = __webpack_require__(/*! ../Data.Exists */ 108);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Bound = (function () {
	    function Bound(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Bound.create = function (value0) {
	        return function (value1) {
	            return new Bound(value0, value1);
	        };
	    };
	    return Bound;
	})();
	var FreeT = (function () {
	    function FreeT(value0) {
	        this.value0 = value0;
	    };
	    FreeT.create = function (value0) {
	        return new FreeT(value0);
	    };
	    return FreeT;
	})();
	var Bind = (function () {
	    function Bind(value0) {
	        this.value0 = value0;
	    };
	    Bind.create = function (value0) {
	        return new Bind(value0);
	    };
	    return Bind;
	})();
	var monadTransFreeT = function (dictFunctor) {
	    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	        return function (ma) {
	            return new FreeT(function (v) {
	                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
	            });
	        };
	    });
	};
	var freeT = FreeT.create;
	var bound = function (m) {
	    return function (f) {
	        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
	    };
	};
	var functorFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function (v) {
	                if (v instanceof FreeT) {
	                    return new FreeT(function (v1) {
	                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
	                    });
	                };
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function ($104) {
	                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
	                        });
	                    })(v.value0);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 58, column 1 - line 58, column 71: " + [ f.constructor.name, v.constructor.name ]);
	            };
	        });
	    };
	};
	var bimapFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return function (nm) {
	                return function (v) {
	                    if (v instanceof Bind) {
	                        return Data_Exists.runExists(function (v1) {
	                            return bound(function ($105) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($105));
	                            })(function ($106) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($106));
	                            });
	                        })(v.value0);
	                    };
	                    if (v instanceof FreeT) {
	                        return new FreeT(function (v1) {
	                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($107) {
	                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($107));
	                            }))(nm(v.value0(Data_Unit.unit)));
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 119, column 1 - line 119, column 109: " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
	                };
	            };
	        };
	    };
	};
	var hoistFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var interpret = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.id(Control_Category.categoryFn));
	        };
	    };
	};
	var monadFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeFreeT(dictFunctor)(dictMonad);
	        }, function () {
	            return bindFreeT(dictFunctor)(dictMonad);
	        });
	    };
	};
	var bindFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Bind.Bind(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (v) {
	            return function (f) {
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function (x) {
	                            return bound(function (v2) {
	                                return v1.value1(x);
	                            })(f);
	                        });
	                    })(v.value0);
	                };
	                return bound(function (v1) {
	                    return v;
	                })(f);
	            };
	        });
	    };
	};
	var applyFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Apply.Apply(function () {
	            return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
	        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
	    };
	};
	var applicativeFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Applicative.Applicative(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (a) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
	            });
	        });
	    };
	};
	var liftFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (fa) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
	            });
	        };
	    };
	};
	var resume = function (dictFunctor) {
	    return function (dictMonadRec) {
	        var go = function (v) {
	            if (v instanceof FreeT) {
	                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
	            };
	            if (v instanceof Bind) {
	                return Data_Exists.runExists(function (v1) {
	                    var v2 = v1.value0(Data_Unit.unit);
	                    if (v2 instanceof FreeT) {
	                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
	                            };
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
	                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
	                                })(v3.value0))));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: " + [ v3.constructor.name ]);
	                        });
	                    };
	                    if (v2 instanceof Bind) {
	                        return Data_Exists.runExists(function (v3) {
	                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
	                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
	                            })));
	                        })(v2.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: " + [ v2.constructor.name ]);
	                })(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 48, column 3 - line 48, column 75: " + [ v.constructor.name ]);
	        };
	        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	    };
	};
	var runFreeT = function (dictFunctor) {
	    return function (dictMonadRec) {
	        return function (interp) {
	            var go = function (v) {
	                if (v instanceof Data_Either.Left) {
	                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 127, column 3 - line 127, column 63: " + [ v.constructor.name ]);
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
	        };
	    };
	};
	var semigroupFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (dictSemigroup) {
	            return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup)));
	        };
	    };
	};
	var monadAskFreeT = function (dictFunctor) {
	    return function (dictMonadAsk) {
	        return new Control_Monad_Reader_Class.MonadAsk(function () {
	            return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());
	        }, Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	    };
	};
	var monadEffFreeT = function (dictFunctor) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadFreeT(dictFunctor)(dictMonadEff.Monad0());
	        }, function ($108) {
	            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($108));
	        });
	    };
	};
	var monadStateFreeT = function (dictFunctor) {
	    return function (dictMonadState) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadFreeT(dictFunctor)(dictMonadState.Monad0());
	        }, function ($109) {
	            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($109));
	        });
	    };
	};
	var monadTellFreeT = function (dictFunctor) {
	    return function (dictMonadTell) {
	        return new Control_Monad_Writer_Class.MonadTell(function () {
	            return monadFreeT(dictFunctor)(dictMonadTell.Monad0());
	        }, function ($110) {
	            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($110));
	        });
	    };
	};
	var monadThrowFreeT = function (dictFunctor) {
	    return function (dictMonadThrow) {
	        return new Control_Monad_Error_Class.MonadThrow(function () {
	            return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());
	        }, function ($111) {
	            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($111));
	        });
	    };
	};
	var monadRecFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadFreeT(dictFunctor)(dictMonad);
	        }, function (f) {
	            var go = function (s) {
	                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
	                    if (v instanceof Control_Monad_Rec_Class.Loop) {
	                        return go(v.value0);
	                    };
	                    if (v instanceof Control_Monad_Rec_Class.Done) {
	                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 81, column 15 - line 83, column 25: " + [ v.constructor.name ]);
	                });
	            };
	            return go;
	        });
	    };
	};
	var monoidFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (dictMonoid) {
	            return new Data_Monoid.Monoid(function () {
	                return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());
	            }, Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)));
	        };
	    };
	};
	module.exports = {
	    freeT: freeT,
	    liftFreeT: liftFreeT,
	    hoistFreeT: hoistFreeT,
	    interpret: interpret,
	    bimapFreeT: bimapFreeT,
	    resume: resume,
	    runFreeT: runFreeT,
	    functorFreeT: functorFreeT,
	    applyFreeT: applyFreeT,
	    applicativeFreeT: applicativeFreeT,
	    bindFreeT: bindFreeT,
	    monadFreeT: monadFreeT,
	    monadTransFreeT: monadTransFreeT,
	    monadRecFreeT: monadRecFreeT,
	    semigroupFreeT: semigroupFreeT,
	    monoidFreeT: monoidFreeT,
	    monadEffFreeT: monadEffFreeT,
	    monadAskFreeT: monadAskFreeT,
	    monadTellFreeT: monadTellFreeT,
	    monadStateFreeT: monadStateFreeT,
	    monadThrowFreeT: monadThrowFreeT
	};


/***/ }),
/* 108 */
/*!*************************************!*\
  !*** ./output/Data.Exists/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var runExists = Unsafe_Coerce.unsafeCoerce;
	var mkExists = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    mkExists: mkExists,
	    runExists: runExists
	};


/***/ }),
/* 109 */
/*!***************************************!*\
  !*** ./output/Unsafe.Coerce/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 110);
	module.exports = {
	    unsafeCoerce: $foreign.unsafeCoerce
	};


/***/ }),
/* 110 */
/*!*****************************************!*\
  !*** ./output/Unsafe.Coerce/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Unsafe.Coerce

	exports.unsafeCoerce = function (x) {
	  return x;
	};


/***/ }),
/* 111 */
/*!******************************************!*\
  !*** ./output/Control.Parallel/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Parallel_Class = __webpack_require__(/*! ../Control.Parallel.Class */ 112);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var parTraverse_ = function (dictParallel) {
	    return function (dictFoldable) {
	        return function (f) {
	            return function ($17) {
	                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
	                    return Control_Parallel_Class.parallel(dictParallel)(f($18));
	                })($17));
	            };
	        };
	    };
	};
	var parTraverse = function (dictParallel) {
	    return function (dictTraversable) {
	        return function (f) {
	            return function ($19) {
	                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
	                    return Control_Parallel_Class.parallel(dictParallel)(f($20));
	                })($19));
	            };
	        };
	    };
	};
	var parSequence_ = function (dictParallel) {
	    return function (dictFoldable) {
	        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var parSequence = function (dictParallel) {
	    return function (dictTraversable) {
	        return parTraverse(dictParallel)(dictTraversable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var parOneOfMap = function (dictParallel) {
	    return function (dictAlternative) {
	        return function (dictFoldable) {
	            return function (dictFunctor) {
	                return function (f) {
	                    return function ($21) {
	                        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
	                            return Control_Parallel_Class.parallel(dictParallel)(f($22));
	                        })($21));
	                    };
	                };
	            };
	        };
	    };
	};
	var parOneOf = function (dictParallel) {
	    return function (dictAlternative) {
	        return function (dictFoldable) {
	            return function (dictFunctor) {
	                return function ($23) {
	                    return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
	                };
	            };
	        };
	    };
	};
	var parApply = function (dictParallel) {
	    return function (mf) {
	        return function (ma) {
	            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
	        };
	    };
	};
	module.exports = {
	    parTraverse: parTraverse,
	    parTraverse_: parTraverse_,
	    parSequence: parSequence,
	    parSequence_: parSequence_,
	    parOneOf: parOneOf,
	    parOneOfMap: parOneOfMap,
	    parApply: parApply
	};


/***/ }),
/* 112 */
/*!************************************************!*\
  !*** ./output/Control.Parallel.Class/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad_Cont_Trans = __webpack_require__(/*! ../Control.Monad.Cont.Trans */ 113);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Eff_Ref = __webpack_require__(/*! ../Control.Monad.Eff.Ref */ 114);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ../Control.Monad.Eff.Unsafe */ 90);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Monad_Maybe_Trans = __webpack_require__(/*! ../Control.Monad.Maybe.Trans */ 116);
	var Control_Monad_Reader_Trans = __webpack_require__(/*! ../Control.Monad.Reader.Trans */ 117);
	var Control_Monad_Writer_Trans = __webpack_require__(/*! ../Control.Monad.Writer.Trans */ 118);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Compose = __webpack_require__(/*! ../Data.Functor.Compose */ 119);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var ParCont = function (x) {
	    return x;
	};
	var Parallel = function (Applicative1, Monad0, parallel, sequential) {
	    this.Applicative1 = Applicative1;
	    this.Monad0 = Monad0;
	    this.parallel = parallel;
	    this.sequential = sequential;
	};
	var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
	var sequential = function (dict) {
	    return dict.sequential;
	};
	var parallel = function (dict) {
	    return dict.parallel;
	};
	var newtypeParCont = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ParCont);
	var monadParWriterT = function (dictMonoid) {
	    return function (dictParallel) {
	        return new Parallel(function () {
	            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
	        }, function () {
	            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
	        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
	    };
	};
	var monadParReaderT = function (dictParallel) {
	    return new Parallel(function () {
	        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
	    }, function () {
	        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
	    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
	};
	var monadParMaybeT = function (dictParallel) {
	    return new Parallel(function () {
	        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
	    }, function () {
	        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
	    }, function (v) {
	        return parallel(dictParallel)(v);
	    }, function (v) {
	        return sequential(dictParallel)(v);
	    });
	};
	var monadParExceptT = function (dictParallel) {
	    return new Parallel(function () {
	        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
	    }, function () {
	        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
	    }, function (v) {
	        return parallel(dictParallel)(v);
	    }, function (v) {
	        return sequential(dictParallel)(v);
	    });
	};
	var monadParParCont = function (dictMonadEff) {
	    return new Parallel(function () {
	        return applicativeParCont(dictMonadEff);
	    }, function () {
	        return Control_Monad_Cont_Trans.monadContT(dictMonadEff.Monad0());
	    }, ParCont, function (v) {
	        return v;
	    });
	};
	var functorParCont = function (dictMonadEff) {
	    return new Data_Functor.Functor(function (f) {
	        return function ($54) {
	            return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEff))($54)));
	        };
	    });
	};
	var applyParCont = function (dictMonadEff) {
	    return new Control_Apply.Apply(function () {
	        return functorParCont(dictMonadEff);
	    }, function (v) {
	        return function (v1) {
	            return ParCont(function (k) {
	                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
	                    return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
	                        return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
	                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
	                                if (v4 instanceof Data_Maybe.Nothing) {
	                                    return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
	                                };
	                                if (v4 instanceof Data_Maybe.Just) {
	                                    return k(a(v4.value0));
	                                };
	                                throw new Error("Failed pattern match at Control.Parallel.Class line 80, column 7 - line 82, column 26: " + [ v4.constructor.name ]);
	                            });
	                        }))(function () {
	                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
	                                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
	                                    if (v4 instanceof Data_Maybe.Nothing) {
	                                        return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
	                                    };
	                                    if (v4 instanceof Data_Maybe.Just) {
	                                        return k(v4.value0(b));
	                                    };
	                                    throw new Error("Failed pattern match at Control.Parallel.Class line 86, column 7 - line 88, column 26: " + [ v4.constructor.name ]);
	                                });
	                            });
	                        });
	                    });
	                });
	            });
	        };
	    });
	};
	var applicativeParCont = function (dictMonadEff) {
	    return new Control_Applicative.Applicative(function () {
	        return applyParCont(dictMonadEff);
	    }, function ($55) {
	        return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff.Monad0()).Applicative0()))($55));
	    });
	};
	var altParCont = function (dictMonadEff) {
	    return new Control_Alt.Alt(function () {
	        return functorParCont(dictMonadEff);
	    }, function (v) {
	        return function (v1) {
	            return ParCont(function (k) {
	                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))))(function (v2) {
	                    return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
	                        return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
	                            if (v3) {
	                                return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
	                            };
	                            return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
	                                return k(a);
	                            });
	                        });
	                    }))(function () {
	                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
	                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
	                                if (v3) {
	                                    return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
	                                };
	                                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
	                                    return k(a);
	                                });
	                            });
	                        });
	                    });
	                });
	            });
	        };
	    });
	};
	var plusParCont = function (dictMonadEff) {
	    return new Control_Plus.Plus(function () {
	        return altParCont(dictMonadEff);
	    }, ParCont(function (v) {
	        return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
	    }));
	};
	var alternativeParCont = function (dictMonadEff) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeParCont(dictMonadEff);
	    }, function () {
	        return plusParCont(dictMonadEff);
	    });
	};
	module.exports = {
	    Parallel: Parallel,
	    parallel: parallel,
	    sequential: sequential,
	    ParCont: ParCont,
	    monadParExceptT: monadParExceptT,
	    monadParReaderT: monadParReaderT,
	    monadParWriterT: monadParWriterT,
	    monadParMaybeT: monadParMaybeT,
	    newtypeParCont: newtypeParCont,
	    functorParCont: functorParCont,
	    applyParCont: applyParCont,
	    applicativeParCont: applicativeParCont,
	    altParCont: altParCont,
	    plusParCont: plusParCont,
	    alternativeParCont: alternativeParCont,
	    monadParParCont: monadParParCont
	};


/***/ }),
/* 113 */
/*!**************************************************!*\
  !*** ./output/Control.Monad.Cont.Trans/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var ContT = function (x) {
	    return x;
	};
	var withContT = function (f) {
	    return function (v) {
	        return function (k) {
	            return v(f(k));
	        };
	    };
	};
	var runContT = function (v) {
	    return function (k) {
	        return v(k);
	    };
	};
	var newtypeContT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ContT);
	var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
	        };
	    };
	});
	var mapContT = function (f) {
	    return function (v) {
	        return function (k) {
	            return f(v(k));
	        };
	    };
	};
	var functorContT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (k) {
	                return v(function (a) {
	                    return k(f(a));
	                });
	            };
	        };
	    });
	};
	var applyContT = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorContT(dictApply.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return function (k) {
	                return v(function (g) {
	                    return v1(function (a) {
	                        return k(g(a));
	                    });
	                });
	            };
	        };
	    });
	};
	var bindContT = function (dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyContT(dictBind.Apply0());
	    }, function (v) {
	        return function (k) {
	            return function (k$prime) {
	                return v(function (a) {
	                    var v1 = k(a);
	                    return v1(k$prime);
	                });
	            };
	        };
	    });
	};
	var applicativeContT = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyContT(dictApplicative.Apply0());
	    }, function (a) {
	        return function (k) {
	            return k(a);
	        };
	    });
	};
	var monadContT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeContT(dictMonad.Applicative0());
	    }, function () {
	        return bindContT(dictMonad.Bind1());
	    });
	};
	var monadAskContT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadContT(dictMonadAsk.Monad0());
	    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderContT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskContT(dictMonadReader.MonadAsk0());
	    }, function (f) {
	        return function (v) {
	            return function (k) {
	                return Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
	                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
	                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
	                    }));
	                });
	            };
	        };
	    });
	};
	var monadContContT = function (dictMonad) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadContT(dictMonad);
	    }, function (f) {
	        return function (k) {
	            var v = f(function (a) {
	                return function (v1) {
	                    return k(a);
	                };
	            });
	            return v(k);
	        };
	    });
	};
	var monadEffContT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadContT(dictMonadEff.Monad0());
	    }, function ($46) {
	        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($46));
	    });
	};
	var monadStateContT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadContT(dictMonadState.Monad0());
	    }, function ($47) {
	        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
	    });
	};
	module.exports = {
	    ContT: ContT,
	    runContT: runContT,
	    mapContT: mapContT,
	    withContT: withContT,
	    newtypeContT: newtypeContT,
	    monadContContT: monadContContT,
	    functorContT: functorContT,
	    applyContT: applyContT,
	    applicativeContT: applicativeContT,
	    bindContT: bindContT,
	    monadContT: monadContT,
	    monadTransContT: monadTransContT,
	    monadEffContT: monadEffContT,
	    monadAskContT: monadAskContT,
	    monadReaderContT: monadReaderContT,
	    monadStateContT: monadStateContT
	};


/***/ }),
/* 114 */
/*!***********************************************!*\
  !*** ./output/Control.Monad.Eff.Ref/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 115);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var modifyRef = function (ref) {
	    return function (f) {
	        return $foreign["modifyRef'"](ref)(function (s) {
	            return {
	                state: f(s),
	                value: Data_Unit.unit
	            };
	        });
	    };
	};
	module.exports = {
	    modifyRef: modifyRef,
	    newRef: $foreign.newRef,
	    readRef: $foreign.readRef,
	    "modifyRef'": $foreign["modifyRef'"],
	    writeRef: $foreign.writeRef
	};


/***/ }),
/* 115 */
/*!*************************************************!*\
  !*** ./output/Control.Monad.Eff.Ref/foreign.js ***!
  \*************************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.newRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};

	exports.readRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};

	exports["modifyRef'"] = function (ref) {
	  return function (f) {
	    return function () {
	      var t = f(ref.value);
	      ref.value = t.state;
	      return t.value;
	    };
	  };
	};

	exports.writeRef = function (ref) {
	  return function (val) {
	    return function () {
	      ref.value = val;
	      return {};
	    };
	  };
	};


/***/ }),
/* 116 */
/*!***************************************************!*\
  !*** ./output/Control.Monad.Maybe.Trans/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var MaybeT = function (x) {
	    return x;
	};
	var runMaybeT = function (v) {
	    return v;
	};
	var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, MaybeT);
	var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function ($75) {
	        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
	    };
	});
	var mapMaybeT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorMaybeT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
	        };
	    });
	};
	var monadMaybeT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return bindMaybeT(dictMonad);
	    });
	};
	var bindMaybeT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyMaybeT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
	                if (v1 instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
	                };
	                if (v1 instanceof Data_Maybe.Just) {
	                    var v2 = f(v1.value0);
	                    return v2;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 11 - line 57, column 42: " + [ v1.constructor.name ]);
	            });
	        };
	    });
	};
	var applyMaybeT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
	    }, Control_Monad.ap(monadMaybeT(dictMonad)));
	};
	var applicativeMaybeT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyMaybeT(dictMonad);
	    }, function ($76) {
	        return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
	    });
	};
	var monadAskMaybeT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadMaybeT(dictMonadAsk.Monad0());
	    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderMaybeT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskMaybeT(dictMonadReader.MonadAsk0());
	    }, function (f) {
	        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadContMaybeT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadMaybeT(dictMonadCont.Monad0());
	    }, function (f) {
	        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var v = f(function (a) {
	                return MaybeT(c(new Data_Maybe.Just(a)));
	            });
	            return v;
	        }));
	    });
	};
	var monadEffMaybe = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadMaybeT(dictMonadEff.Monad0());
	    }, function ($77) {
	        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($77));
	    });
	};
	var monadRecMaybeT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadMaybeT(dictMonadRec.Monad0());
	    }, function (f) {
	        return function ($78) {
	            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
	                    var v = f(a);
	                    return v;
	                })())(function (m$prime) {
	                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
	                        if (m$prime instanceof Data_Maybe.Nothing) {
	                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 85, column 16 - line 88, column 43: " + [ m$prime.constructor.name ]);
	                    })());
	                });
	            })($78));
	        };
	    });
	};
	var monadStateMaybeT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadMaybeT(dictMonadState.Monad0());
	    }, function (f) {
	        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadTellMaybeT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadMaybeT(dictMonadTell.Monad0());
	    }, function ($79) {
	        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
	    });
	};
	var monadWriterMaybeT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellMaybeT(dictMonadWriter.MonadTell0());
	    }, mapMaybeT(function (m) {
	        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapMaybeT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 122, column 10 - line 124, column 42: " + [ v.constructor.name ]);
	            })());
	        }));
	    }));
	};
	var monadThrowMaybeT = function (dictMonadThrow) {
	    return new Control_Monad_Error_Class.MonadThrow(function () {
	        return monadMaybeT(dictMonadThrow.Monad0());
	    }, function (e) {
	        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
	    });
	};
	var monadErrorMaybeT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadThrowMaybeT(dictMonadError.MonadThrow0());
	    }, function (v) {
	        return function (h) {
	            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
	                var v1 = h(a);
	                return v1;
	            }));
	        };
	    });
	};
	var altMaybeT = function (dictMonad) {
	    return new Control_Alt.Alt(function () {
	        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
	                if (v2 instanceof Data_Maybe.Nothing) {
	                    return v1;
	                };
	                return Control_Applicative.pure(dictMonad.Applicative0())(v2);
	            });
	        };
	    });
	};
	var plusMaybeT = function (dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altMaybeT(dictMonad);
	    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
	};
	var alternativeMaybeT = function (dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return plusMaybeT(dictMonad);
	    });
	};
	var monadZeroMaybeT = function (dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeMaybeT(dictMonad);
	    }, function () {
	        return monadMaybeT(dictMonad);
	    });
	};
	var monadPlusMaybeT = function (dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroMaybeT(dictMonad);
	    });
	};
	module.exports = {
	    MaybeT: MaybeT,
	    runMaybeT: runMaybeT,
	    mapMaybeT: mapMaybeT,
	    newtypeMaybeT: newtypeMaybeT,
	    functorMaybeT: functorMaybeT,
	    applyMaybeT: applyMaybeT,
	    applicativeMaybeT: applicativeMaybeT,
	    bindMaybeT: bindMaybeT,
	    monadMaybeT: monadMaybeT,
	    monadTransMaybeT: monadTransMaybeT,
	    altMaybeT: altMaybeT,
	    plusMaybeT: plusMaybeT,
	    alternativeMaybeT: alternativeMaybeT,
	    monadPlusMaybeT: monadPlusMaybeT,
	    monadZeroMaybeT: monadZeroMaybeT,
	    monadRecMaybeT: monadRecMaybeT,
	    monadEffMaybe: monadEffMaybe,
	    monadContMaybeT: monadContMaybeT,
	    monadThrowMaybeT: monadThrowMaybeT,
	    monadErrorMaybeT: monadErrorMaybeT,
	    monadAskMaybeT: monadAskMaybeT,
	    monadReaderMaybeT: monadReaderMaybeT,
	    monadStateMaybeT: monadStateMaybeT,
	    monadTellMaybeT: monadTellMaybeT,
	    monadWriterMaybeT: monadWriterMaybeT
	};


/***/ }),
/* 117 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Reader.Trans/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Distributive = __webpack_require__(/*! ../Data.Distributive */ 102);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var ReaderT = function (x) {
	    return x;
	};
	var withReaderT = function (f) {
	    return function (v) {
	        return function ($66) {
	            return v(f($66));
	        };
	    };
	};
	var runReaderT = function (v) {
	    return v;
	};
	var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ReaderT);
	var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function ($67) {
	        return ReaderT(Data_Function["const"]($67));
	    };
	});
	var mapReaderT = function (f) {
	    return function (v) {
	        return function ($68) {
	            return f(v($68));
	        };
	    };
	};
	var functorReaderT = function (dictFunctor) {
	    return new Data_Functor.Functor(function ($69) {
	        return mapReaderT(Data_Functor.map(dictFunctor)($69));
	    });
	};
	var distributiveReaderT = function (dictDistributive) {
	    return new Data_Distributive.Distributive(function () {
	        return functorReaderT(dictDistributive.Functor0());
	    }, function (dictFunctor) {
	        return function (f) {
	            return function ($70) {
	                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
	            };
	        };
	    }, function (dictFunctor) {
	        return function (a) {
	            return function (e) {
	                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
	                    return r(e);
	                })(a);
	            };
	        };
	    });
	};
	var applyReaderT = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorReaderT(dictApply.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Apply.apply(dictApply)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var bindReaderT = function (dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyReaderT(dictBind.Apply0());
	    }, function (v) {
	        return function (k) {
	            return function (r) {
	                return Control_Bind.bind(dictBind)(v(r))(function (a) {
	                    var v1 = k(a);
	                    return v1(r);
	                });
	            };
	        };
	    });
	};
	var semigroupReaderT = function (dictApply) {
	    return function (dictSemigroup) {
	        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
	    };
	};
	var applicativeReaderT = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyReaderT(dictApplicative.Apply0());
	    }, function ($71) {
	        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
	    });
	};
	var monadReaderT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeReaderT(dictMonad.Applicative0());
	    }, function () {
	        return bindReaderT(dictMonad.Bind1());
	    });
	};
	var monadAskReaderT = function (dictMonad) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadReaderT(dictMonad);
	    }, Control_Applicative.pure(dictMonad.Applicative0()));
	};
	var monadReaderReaderT = function (dictMonad) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskReaderT(dictMonad);
	    }, withReaderT);
	};
	var monadContReaderT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadReaderT(dictMonadCont.Monad0());
	    }, function (f) {
	        return function (r) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var v = f(function ($72) {
	                    return ReaderT(Data_Function["const"](c($72)));
	                });
	                return v(r);
	            });
	        };
	    });
	};
	var monadEffReader = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadReaderT(dictMonadEff.Monad0());
	    }, function ($73) {
	        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($73));
	    });
	};
	var monadRecReaderT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadReaderT(dictMonadRec.Monad0());
	    }, function (k) {
	        return function (a) {
	            var k$prime = function (r) {
	                return function (a$prime) {
	                    var v = k(a$prime);
	                    return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));
	                };
	            };
	            return function (r) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
	            };
	        };
	    });
	};
	var monadStateReaderT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadReaderT(dictMonadState.Monad0());
	    }, function ($74) {
	        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
	    });
	};
	var monadTellReaderT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadReaderT(dictMonadTell.Monad0());
	    }, function ($75) {
	        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
	    });
	};
	var monadWriterReaderT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellReaderT(dictMonadWriter.MonadTell0());
	    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
	};
	var monadThrowReaderT = function (dictMonadThrow) {
	    return new Control_Monad_Error_Class.MonadThrow(function () {
	        return monadReaderT(dictMonadThrow.Monad0());
	    }, function ($76) {
	        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
	    });
	};
	var monadErrorReaderT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadThrowReaderT(dictMonadError.MonadThrow0());
	    }, function (v) {
	        return function (h) {
	            return function (r) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
	                    var v1 = h(e);
	                    return v1(r);
	                });
	            };
	        };
	    });
	};
	var monoidReaderT = function (dictApplicative) {
	    return function (dictMonoid) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
	        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var altReaderT = function (dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorReaderT(dictAlt.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var plusReaderT = function (dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altReaderT(dictPlus.Alt0());
	    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
	};
	var alternativeReaderT = function (dictAlternative) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeReaderT(dictAlternative.Applicative0());
	    }, function () {
	        return plusReaderT(dictAlternative.Plus1());
	    });
	};
	var monadZeroReaderT = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeReaderT(dictMonadZero.Alternative1());
	    }, function () {
	        return monadReaderT(dictMonadZero.Monad0());
	    });
	};
	var monadPlusReaderT = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroReaderT(dictMonadPlus.MonadZero0());
	    });
	};
	module.exports = {
	    ReaderT: ReaderT,
	    runReaderT: runReaderT,
	    withReaderT: withReaderT,
	    mapReaderT: mapReaderT,
	    newtypeReaderT: newtypeReaderT,
	    functorReaderT: functorReaderT,
	    applyReaderT: applyReaderT,
	    applicativeReaderT: applicativeReaderT,
	    altReaderT: altReaderT,
	    plusReaderT: plusReaderT,
	    alternativeReaderT: alternativeReaderT,
	    bindReaderT: bindReaderT,
	    monadReaderT: monadReaderT,
	    monadZeroReaderT: monadZeroReaderT,
	    semigroupReaderT: semigroupReaderT,
	    monoidReaderT: monoidReaderT,
	    monadPlusReaderT: monadPlusReaderT,
	    monadTransReaderT: monadTransReaderT,
	    monadEffReader: monadEffReader,
	    monadContReaderT: monadContReaderT,
	    monadThrowReaderT: monadThrowReaderT,
	    monadErrorReaderT: monadErrorReaderT,
	    monadAskReaderT: monadAskReaderT,
	    monadReaderReaderT: monadReaderReaderT,
	    monadStateReaderT: monadStateReaderT,
	    monadTellReaderT: monadTellReaderT,
	    monadWriterReaderT: monadWriterReaderT,
	    distributiveReaderT: distributiveReaderT,
	    monadRecReaderT: monadRecReaderT
	};


/***/ }),
/* 118 */
/*!****************************************************!*\
  !*** ./output/Control.Monad.Writer.Trans/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var WriterT = function (x) {
	    return x;
	};
	var runWriterT = function (v) {
	    return v;
	};
	var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, WriterT);
	var monadTransWriterT = function (dictMonoid) {
	    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
	            });
	        };
	    });
	};
	var mapWriterT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorWriterT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
	            return new Data_Tuple.Tuple(f(v.value0), v.value1);
	        }));
	    });
	};
	var execWriterT = function (dictFunctor) {
	    return function (v) {
	        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
	    };
	};
	var applyWriterT = function (dictSemigroup) {
	    return function (dictApply) {
	        return new Control_Apply.Apply(function () {
	            return functorWriterT(dictApply.Functor0());
	        }, function (v) {
	            return function (v1) {
	                var k = function (v3) {
	                    return function (v4) {
	                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
	                    };
	                };
	                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
	            };
	        });
	    };
	};
	var bindWriterT = function (dictSemigroup) {
	    return function (dictBind) {
	        return new Control_Bind.Bind(function () {
	            return applyWriterT(dictSemigroup)(dictBind.Apply0());
	        }, function (v) {
	            return function (k) {
	                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
	                    var v2 = k(v1.value0);
	                    return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
	                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
	                    })(v2);
	                }));
	            };
	        });
	    };
	};
	var applicativeWriterT = function (dictMonoid) {
	    return function (dictApplicative) {
	        return new Control_Applicative.Applicative(function () {
	            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
	        }, function (a) {
	            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	        });
	    };
	};
	var monadWriterT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
	        }, function () {
	            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
	        });
	    };
	};
	var monadAskWriterT = function (dictMonoid) {
	    return function (dictMonadAsk) {
	        return new Control_Monad_Reader_Class.MonadAsk(function () {
	            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
	        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	    };
	};
	var monadReaderWriterT = function (dictMonoid) {
	    return function (dictMonadReader) {
	        return new Control_Monad_Reader_Class.MonadReader(function () {
	            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
	        }, function (f) {
	            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	        });
	    };
	};
	var monadContWriterT = function (dictMonoid) {
	    return function (dictMonadCont) {
	        return new Control_Monad_Cont_Class.MonadCont(function () {
	            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
	        }, function (f) {
	            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var v = f(function (a) {
	                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	                });
	                return v;
	            }));
	        });
	    };
	};
	var monadEffWriter = function (dictMonoid) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadWriterT(dictMonoid)(dictMonadEff.Monad0());
	        }, function ($123) {
	            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($123));
	        });
	    };
	};
	var monadRecWriterT = function (dictMonoid) {
	    return function (dictMonadRec) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
	        }, function (f) {
	            return function (a) {
	                var f$prime = function (v) {
	                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
	                        var v1 = f(v.value0);
	                        return v1;
	                    })())(function (v1) {
	                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
	                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
	                            };
	                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
	                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 85, column 16 - line 87, column 47: " + [ v1.value0.constructor.name ]);
	                        })());
	                    });
	                };
	                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	            };
	        });
	    };
	};
	var monadStateWriterT = function (dictMonoid) {
	    return function (dictMonadState) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
	        }, function (f) {
	            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
	        });
	    };
	};
	var monadTellWriterT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad_Writer_Class.MonadTell(function () {
	            return monadWriterT(dictMonoid)(dictMonad);
	        }, function ($124) {
	            return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
	        });
	    };
	};
	var monadWriterWriterT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad_Writer_Class.MonadWriter(function () {
	            return monadTellWriterT(dictMonoid)(dictMonad);
	        }, function (v) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
	            });
	        }, function (v) {
	            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
	            });
	        });
	    };
	};
	var monadThrowWriterT = function (dictMonoid) {
	    return function (dictMonadThrow) {
	        return new Control_Monad_Error_Class.MonadThrow(function () {
	            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
	        }, function (e) {
	            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
	        });
	    };
	};
	var monadErrorWriterT = function (dictMonoid) {
	    return function (dictMonadError) {
	        return new Control_Monad_Error_Class.MonadError(function () {
	            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
	        }, function (v) {
	            return function (h) {
	                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
	                    var v1 = h(e);
	                    return v1;
	                }));
	            };
	        });
	    };
	};
	var altWriterT = function (dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorWriterT(dictAlt.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return Control_Alt.alt(dictAlt)(v)(v1);
	        };
	    });
	};
	var plusWriterT = function (dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altWriterT(dictPlus.Alt0());
	    }, Control_Plus.empty(dictPlus));
	};
	var alternativeWriterT = function (dictMonoid) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
	        }, function () {
	            return plusWriterT(dictAlternative.Plus1());
	        });
	    };
	};
	var monadZeroWriterT = function (dictMonoid) {
	    return function (dictMonadZero) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
	        }, function () {
	            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
	        });
	    };
	};
	var monadPlusWriterT = function (dictMonoid) {
	    return function (dictMonadPlus) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
	        });
	    };
	};
	module.exports = {
	    WriterT: WriterT,
	    runWriterT: runWriterT,
	    execWriterT: execWriterT,
	    mapWriterT: mapWriterT,
	    newtypeWriterT: newtypeWriterT,
	    functorWriterT: functorWriterT,
	    applyWriterT: applyWriterT,
	    applicativeWriterT: applicativeWriterT,
	    altWriterT: altWriterT,
	    plusWriterT: plusWriterT,
	    alternativeWriterT: alternativeWriterT,
	    bindWriterT: bindWriterT,
	    monadWriterT: monadWriterT,
	    monadRecWriterT: monadRecWriterT,
	    monadZeroWriterT: monadZeroWriterT,
	    monadPlusWriterT: monadPlusWriterT,
	    monadTransWriterT: monadTransWriterT,
	    monadEffWriter: monadEffWriter,
	    monadContWriterT: monadContWriterT,
	    monadThrowWriterT: monadThrowWriterT,
	    monadErrorWriterT: monadErrorWriterT,
	    monadAskWriterT: monadAskWriterT,
	    monadReaderWriterT: monadReaderWriterT,
	    monadStateWriterT: monadStateWriterT,
	    monadTellWriterT: monadTellWriterT,
	    monadWriterWriterT: monadWriterWriterT
	};


/***/ }),
/* 119 */
/*!**********************************************!*\
  !*** ./output/Data.Functor.Compose/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_App = __webpack_require__(/*! ../Data.Functor.App */ 120);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Compose = function (x) {
	    return x;
	};
	var showCompose = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var newtypeCompose = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Compose);
	var functorCompose = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function (v) {
	                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
	            };
	        });
	    };
	};
	var foldableCompose = function (dictFoldable) {
	    return function (dictFoldable1) {
	        return new Data_Foldable.Foldable(function (dictMonoid) {
	            return function (f) {
	                return function (v) {
	                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
	                };
	            };
	        }, function (f) {
	            return function (i) {
	                return function (v) {
	                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
	                };
	            };
	        }, function (f) {
	            return function (i) {
	                return function (v) {
	                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
	                };
	            };
	        });
	    };
	};
	var traversableCompose = function (dictTraversable) {
	    return function (dictTraversable1) {
	        return new Data_Traversable.Traversable(function () {
	            return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
	        }, function () {
	            return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
	        }, function (dictApplicative) {
	            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	        }, function (dictApplicative) {
	            return function (f) {
	                return function (v) {
	                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
	                };
	            };
	        });
	    };
	};
	var eq1Compose = function (dictEq1) {
	    return function (dictEq11) {
	        return new Data_Eq.Eq1(function (dictEq) {
	            return function (v) {
	                return function (v1) {
	                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
	                };
	            };
	        });
	    };
	};
	var eqCompose = function (dictEq1) {
	    return function (dictEq11) {
	        return function (dictEq) {
	            return new Data_Eq.Eq(Data_Eq.eq1(eq1Compose(dictEq1)(dictEq11))(dictEq));
	        };
	    };
	};
	var ord1Compose = function (dictOrd1) {
	    return function (dictOrd11) {
	        return new Data_Ord.Ord1(function () {
	            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
	        }, function (dictOrd) {
	            return function (v) {
	                return function (v1) {
	                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
	                };
	            };
	        });
	    };
	};
	var ordCompose = function (dictOrd1) {
	    return function (dictOrd11) {
	        return function (dictOrd) {
	            return new Data_Ord.Ord(function () {
	                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
	            }, Data_Ord.compare1(ord1Compose(dictOrd1)(dictOrd11))(dictOrd));
	        };
	    };
	};
	var bihoistCompose = function (dictFunctor) {
	    return function (natF) {
	        return function (natG) {
	            return function (v) {
	                return natF(Data_Functor.map(dictFunctor)(natG)(v));
	            };
	        };
	    };
	};
	var applyCompose = function (dictApply) {
	    return function (dictApply1) {
	        return new Control_Apply.Apply(function () {
	            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
	        }, function (v) {
	            return function (v1) {
	                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
	            };
	        });
	    };
	};
	var applicativeCompose = function (dictApplicative) {
	    return function (dictApplicative1) {
	        return new Control_Applicative.Applicative(function () {
	            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
	        }, function ($75) {
	            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($75)));
	        });
	    };
	};
	var altCompose = function (dictAlt) {
	    return function (dictFunctor) {
	        return new Control_Alt.Alt(function () {
	            return functorCompose(dictAlt.Functor0())(dictFunctor);
	        }, function (v) {
	            return function (v1) {
	                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
	            };
	        });
	    };
	};
	var plusCompose = function (dictPlus) {
	    return function (dictFunctor) {
	        return new Control_Plus.Plus(function () {
	            return altCompose(dictPlus.Alt0())(dictFunctor);
	        }, Control_Plus.empty(dictPlus));
	    };
	};
	var alternativeCompose = function (dictAlternative) {
	    return function (dictApplicative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
	        }, function () {
	            return plusCompose(dictAlternative.Plus1())((dictApplicative.Apply0()).Functor0());
	        });
	    };
	};
	module.exports = {
	    Compose: Compose,
	    bihoistCompose: bihoistCompose,
	    newtypeCompose: newtypeCompose,
	    eq1Compose: eq1Compose,
	    eqCompose: eqCompose,
	    ord1Compose: ord1Compose,
	    ordCompose: ordCompose,
	    showCompose: showCompose,
	    functorCompose: functorCompose,
	    applyCompose: applyCompose,
	    applicativeCompose: applicativeCompose,
	    foldableCompose: foldableCompose,
	    traversableCompose: traversableCompose,
	    altCompose: altCompose,
	    plusCompose: plusCompose,
	    alternativeCompose: alternativeCompose
	};


/***/ }),
/* 120 */
/*!******************************************!*\
  !*** ./output/Data.Functor.App/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var App = function (x) {
	    return x;
	};
	var traversableApp = function (dictTraversable) {
	    return dictTraversable;
	};
	var showApp = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(App " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupApp = function (dictApply) {
	    return function (dictSemigroup) {
	        return new Data_Semigroup.Semigroup(function (v) {
	            return function (v1) {
	                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
	            };
	        });
	    };
	};
	var plusApp = function (dictPlus) {
	    return dictPlus;
	};
	var newtypeApp = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, App);
	var monoidApp = function (dictApplicative) {
	    return function (dictMonoid) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
	        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var monadZeroApp = function (dictMonadZero) {
	    return dictMonadZero;
	};
	var monadPlusApp = function (dictMonadPlus) {
	    return dictMonadPlus;
	};
	var monadApp = function (dictMonad) {
	    return dictMonad;
	};
	var lazyApp = function (dictLazy) {
	    return dictLazy;
	};
	var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
	var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
	var hoistApp = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorApp = function (dictFunctor) {
	    return dictFunctor;
	};
	var foldableApp = function (dictFoldable) {
	    return dictFoldable;
	};
	var extendApp = function (dictExtend) {
	    return dictExtend;
	};
	var eq1App = function (dictEq1) {
	    return new Data_Eq.Eq1(function (dictEq) {
	        return function (v) {
	            return function (v1) {
	                return Data_Eq.eq1(dictEq1)(dictEq)(v)(v1);
	            };
	        };
	    });
	};
	var eqApp = function (dictEq1) {
	    return function (dictEq) {
	        return new Data_Eq.Eq(Data_Eq.eq1(eq1App(dictEq1))(dictEq));
	    };
	};
	var ord1App = function (dictOrd1) {
	    return new Data_Ord.Ord1(function () {
	        return eq1App(dictOrd1.Eq10());
	    }, function (dictOrd) {
	        return function (v) {
	            return function (v1) {
	                return Data_Ord.compare1(dictOrd1)(dictOrd)(v)(v1);
	            };
	        };
	    });
	};
	var ordApp = function (dictOrd1) {
	    return function (dictOrd) {
	        return new Data_Ord.Ord(function () {
	            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
	        }, Data_Ord.compare1(ord1App(dictOrd1))(dictOrd));
	    };
	};
	var comonadApp = function (dictComonad) {
	    return dictComonad;
	};
	var bindApp = function (dictBind) {
	    return dictBind;
	};
	var applyApp = function (dictApply) {
	    return dictApply;
	};
	var applicativeApp = function (dictApplicative) {
	    return dictApplicative;
	};
	var alternativeApp = function (dictAlternative) {
	    return dictAlternative;
	};
	var altApp = function (dictAlt) {
	    return dictAlt;
	};
	module.exports = {
	    App: App,
	    hoistApp: hoistApp,
	    hoistLiftApp: hoistLiftApp,
	    hoistLowerApp: hoistLowerApp,
	    newtypeApp: newtypeApp,
	    eqApp: eqApp,
	    eq1App: eq1App,
	    ordApp: ordApp,
	    ord1App: ord1App,
	    showApp: showApp,
	    semigroupApp: semigroupApp,
	    monoidApp: monoidApp,
	    functorApp: functorApp,
	    applyApp: applyApp,
	    applicativeApp: applicativeApp,
	    bindApp: bindApp,
	    monadApp: monadApp,
	    altApp: altApp,
	    plusApp: plusApp,
	    alternativeApp: alternativeApp,
	    monadZeroApp: monadZeroApp,
	    monadPlusApp: monadPlusApp,
	    lazyApp: lazyApp,
	    foldableApp: foldableApp,
	    traversableApp: traversableApp,
	    extendApp: extendApp,
	    comonadApp: comonadApp
	};


/***/ }),
/* 121 */
/*!*****************************************!*\
  !*** ./output/Data.Profunctor/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Profunctor = function (dimap) {
	    this.dimap = dimap;
	};
	var profunctorFn = new Profunctor(function (a2b) {
	    return function (c2d) {
	        return function (b2c) {
	            return function ($9) {
	                return c2d(b2c(a2b($9)));
	            };
	        };
	    };
	});
	var dimap = function (dict) {
	    return dict.dimap;
	};
	var lmap = function (dictProfunctor) {
	    return function (a2b) {
	        return dimap(dictProfunctor)(a2b)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function (dictProfunctor) {
	    return function (b2c) {
	        return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
	    };
	};
	var unwrapIso = function (dictProfunctor) {
	    return function (dictNewtype) {
	        return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
	    };
	};
	var wrapIso = function (dictProfunctor) {
	    return function (dictNewtype) {
	        return function (v) {
	            return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
	        };
	    };
	};
	var arr = function (dictCategory) {
	    return function (dictProfunctor) {
	        return function (f) {
	            return rmap(dictProfunctor)(f)(Control_Category.id(dictCategory));
	        };
	    };
	};
	module.exports = {
	    dimap: dimap,
	    Profunctor: Profunctor,
	    lmap: lmap,
	    rmap: rmap,
	    arr: arr,
	    unwrapIso: unwrapIso,
	    wrapIso: wrapIso,
	    profunctorFn: profunctorFn
	};


/***/ }),
/* 122 */
/*!*******************************************!*\
  !*** ./output/Control.Monad.Aff/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 123);
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ../Control.Monad.Eff.Exception */ 127);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ../Control.Monad.Eff.Unsafe */ 90);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Parallel = __webpack_require__(/*! ../Control.Parallel */ 111);
	var Control_Parallel_Class = __webpack_require__(/*! ../Control.Parallel.Class */ 112);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Function_Uncurried = __webpack_require__(/*! ../Data.Function.Uncurried */ 129);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Time_Duration = __webpack_require__(/*! ../Data.Time.Duration */ 131);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var Fiber = function (x) {
	    return x;
	};
	var FFIUtil = function (x) {
	    return x;
	};
	var Canceler = function (x) {
	    return x;
	};
	var suspendAff = $foreign._fork(false);
	var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Canceler);
	var functorParAff = new Data_Functor.Functor($foreign._parAffMap);
	var functorAff = new Data_Functor.Functor($foreign._map);
	var forkAff = $foreign._fork(true);
	var ffiUtil = (function () {
	    var unsafeFromRight = function (v) {
	        if (v instanceof Data_Either.Right) {
	            return v.value0;
	        };
	        if (v instanceof Data_Either.Left) {
	            return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
	        };
	        throw new Error("Failed pattern match at Control.Monad.Aff line 402, column 21 - line 404, column 31: " + [ v.constructor.name ]);
	    };
	    var unsafeFromLeft = function (v) {
	        if (v instanceof Data_Either.Left) {
	            return v.value0;
	        };
	        if (v instanceof Data_Either.Right) {
	            return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
	        };
	        throw new Error("Failed pattern match at Control.Monad.Aff line 397, column 20 - line 401, column 3: " + [ v.constructor.name ]);
	    };
	    var isLeft = function (v) {
	        if (v instanceof Data_Either.Left) {
	            return true;
	        };
	        if (v instanceof Data_Either.Right) {
	            return false;
	        };
	        throw new Error("Failed pattern match at Control.Monad.Aff line 392, column 12 - line 394, column 20: " + [ v.constructor.name ]);
	    };
	    return {
	        isLeft: isLeft,
	        fromLeft: unsafeFromLeft,
	        fromRight: unsafeFromRight,
	        left: Data_Either.Left.create,
	        right: Data_Either.Right.create
	    };
	})();
	var makeFiber = function (aff) {
	    return $foreign._makeFiber(ffiUtil, aff);
	};
	var launchAff = function (aff) {
	    return function __do() {
	        var v = makeFiber(aff)();
	        v.run();
	        return v;
	    };
	};
	var launchAff_ = function ($49) {
	    return Data_Functor["void"](Control_Monad_Eff.functorEff)(launchAff($49));
	};
	var launchSuspendedAff = makeFiber;
	var delay = function (v) {
	    return $foreign._delay(Data_Either.Right.create, v);
	};
	var bracket = function (acquire) {
	    return function (completed) {
	        return $foreign.generalBracket(acquire)({
	            killed: Data_Function["const"](completed),
	            failed: Data_Function["const"](completed),
	            completed: Data_Function["const"](completed)
	        });
	    };
	};
	var applyParAff = new Control_Apply.Apply(function () {
	    return functorParAff;
	}, $foreign._parAffApply);
	var semigroupParAff = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
	};
	var monadAff = new Control_Monad.Monad(function () {
	    return applicativeAff;
	}, function () {
	    return bindAff;
	});
	var bindAff = new Control_Bind.Bind(function () {
	    return applyAff;
	}, $foreign._bind);
	var applyAff = new Control_Apply.Apply(function () {
	    return functorAff;
	}, Control_Monad.ap(monadAff));
	var applicativeAff = new Control_Applicative.Applicative(function () {
	    return applyAff;
	}, $foreign._pure);
	var cancelWith = function (aff) {
	    return function (v) {
	        return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
	            killed: function (e) {
	                return function (v1) {
	                    return v(e);
	                };
	            },
	            failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
	            completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
	        })(Data_Function["const"](aff));
	    };
	};
	var $$finally = function (fin) {
	    return function (a) {
	        return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
	    };
	};
	var invincible = function (a) {
	    return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
	};
	var lazyAff = new Control_Lazy.Lazy(function (f) {
	    return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
	});
	var semigroupAff = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
	};
	var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
	    return monadAff;
	}, $foreign._liftEff);
	var effCanceler = function ($50) {
	    return Canceler(Data_Function["const"](Control_Monad_Eff_Class.liftEff(monadEffAff)($50)));
	};
	var joinFiber = function (v) {
	    return $foreign.makeAff(function (k) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.join(k));
	    });
	};
	var functorFiber = new Data_Functor.Functor(function (f) {
	    return function (t) {
	        return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
	    };
	});
	var applyFiber = new Control_Apply.Apply(function () {
	    return functorFiber;
	}, function (t1) {
	    return function (t2) {
	        return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
	    };
	});
	var applicativeFiber = new Control_Applicative.Applicative(function () {
	    return applyFiber;
	}, function (a) {
	    return Control_Monad_Eff_Unsafe.unsafePerformEff(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
	});
	var killFiber = function (e) {
	    return function (v) {
	        return Control_Bind.bind(bindAff)(Control_Monad_Eff_Class.liftEff(monadEffAff)(v.isSuspended))(function (v1) {
	            if (v1) {
	                return Control_Monad_Eff_Class.liftEff(monadEffAff)(Data_Functor["void"](Control_Monad_Eff.functorEff)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))));
	            };
	            return $foreign.makeAff(function (k) {
	                return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.kill(e, k));
	            });
	        });
	    };
	};
	var liftEff$prime = function ($51) {
	    return Control_Monad_Eff_Class.liftEff(monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff($51));
	};
	var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
	    return monadAff;
	}, $foreign._throwError);
	var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
	    return monadThrowAff;
	}, $foreign._catchError);
	var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
	var runAff = function (k) {
	    return function (aff) {
	        return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
	            return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($52));
	        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
	    };
	};
	var runAff_ = function (k) {
	    return function (aff) {
	        return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff(k)(aff));
	    };
	};
	var runSuspendedAff = function (k) {
	    return function (aff) {
	        return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function ($53) {
	            return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($53));
	        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
	    };
	};
	var parallelAff = new Control_Parallel_Class.Parallel(function () {
	    return applicativeParAff;
	}, function () {
	    return monadAff;
	}, Unsafe_Coerce.unsafeCoerce, $foreign._sequential);
	var applicativeParAff = new Control_Applicative.Applicative(function () {
	    return applyParAff;
	}, function ($54) {
	    return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
	});
	var monoidParAff = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupParAff(dictMonoid.Semigroup0());
	    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
	};
	var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function (err) {
	            return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
	        };
	    };
	});
	var supervise = function (aff) {
	    var killError = Control_Monad_Eff_Exception.error("[Aff] Child fiber outlived parent");
	    var killAll = function (err) {
	        return function (sup) {
	            return $foreign.makeAff(function (k) {
	                return $foreign._killAll(err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
	            });
	        };
	    };
	    var acquire = function __do() {
	        var v = $foreign._makeSupervisedFiber(ffiUtil, aff)();
	        v.fiber.run();
	        return v;
	    };
	    return $foreign.generalBracket(Control_Monad_Eff_Class.liftEff(monadEffAff)(acquire))({
	        killed: function (err) {
	            return function (sup) {
	                return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);
	            };
	        },
	        failed: Data_Function["const"](killAll(killError)),
	        completed: Data_Function["const"](killAll(killError))
	    })(function ($55) {
	        return joinFiber((function (v) {
	            return v.fiber;
	        })($55));
	    });
	};
	var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
	    return monadAff;
	}, function (k) {
	    var go = function (a) {
	        return Control_Bind.bind(bindAff)(k(a))(function (v) {
	            if (v instanceof Control_Monad_Rec_Class.Done) {
	                return Control_Applicative.pure(applicativeAff)(v.value0);
	            };
	            if (v instanceof Control_Monad_Rec_Class.Loop) {
	                return go(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Monad.Aff line 101, column 7 - line 103, column 22: " + [ v.constructor.name ]);
	        });
	    };
	    return go;
	});
	var monoidAff = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAff(dictMonoid.Semigroup0());
	    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
	};
	var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
	var monoidCanceler = new Data_Monoid.Monoid(function () {
	    return semigroupCanceler;
	}, nonCanceler);
	var never = $foreign.makeAff(function (v) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(monoidCanceler));
	});
	var apathize = function ($56) {
	    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt($56));
	};
	var altParAff = new Control_Alt.Alt(function () {
	    return functorParAff;
	}, $foreign._parAffAlt);
	var altAff = new Control_Alt.Alt(function () {
	    return functorAff;
	}, function (a1) {
	    return function (a2) {
	        return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
	    };
	});
	var plusAff = new Control_Plus.Plus(function () {
	    return altAff;
	}, Control_Monad_Error_Class.throwError(monadThrowAff)(Control_Monad_Eff_Exception.error("Always fails")));
	var plusParAff = new Control_Plus.Plus(function () {
	    return altParAff;
	}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
	var alternativeParAff = new Control_Alternative.Alternative(function () {
	    return applicativeParAff;
	}, function () {
	    return plusParAff;
	});
	module.exports = {
	    Canceler: Canceler,
	    launchAff: launchAff,
	    launchAff_: launchAff_,
	    launchSuspendedAff: launchSuspendedAff,
	    runAff: runAff,
	    runAff_: runAff_,
	    runSuspendedAff: runSuspendedAff,
	    forkAff: forkAff,
	    suspendAff: suspendAff,
	    "liftEff'": liftEff$prime,
	    supervise: supervise,
	    attempt: attempt,
	    apathize: apathize,
	    delay: delay,
	    never: never,
	    "finally": $$finally,
	    invincible: invincible,
	    killFiber: killFiber,
	    joinFiber: joinFiber,
	    cancelWith: cancelWith,
	    bracket: bracket,
	    nonCanceler: nonCanceler,
	    effCanceler: effCanceler,
	    functorAff: functorAff,
	    applyAff: applyAff,
	    applicativeAff: applicativeAff,
	    bindAff: bindAff,
	    monadAff: monadAff,
	    semigroupAff: semigroupAff,
	    monoidAff: monoidAff,
	    altAff: altAff,
	    plusAff: plusAff,
	    monadRecAff: monadRecAff,
	    monadThrowAff: monadThrowAff,
	    monadErrorAff: monadErrorAff,
	    monadEffAff: monadEffAff,
	    lazyAff: lazyAff,
	    functorParAff: functorParAff,
	    applyParAff: applyParAff,
	    applicativeParAff: applicativeParAff,
	    semigroupParAff: semigroupParAff,
	    monoidParAff: monoidParAff,
	    altParAff: altParAff,
	    plusParAff: plusParAff,
	    alternativeParAff: alternativeParAff,
	    parallelAff: parallelAff,
	    functorFiber: functorFiber,
	    applyFiber: applyFiber,
	    applicativeFiber: applicativeFiber,
	    newtypeCanceler: newtypeCanceler,
	    semigroupCanceler: semigroupCanceler,
	    monoidCanceler: monoidCanceler,
	    makeAff: $foreign.makeAff,
	    generalBracket: $foreign.generalBracket
	};


/***/ }),
/* 123 */
/*!*********************************************!*\
  !*** ./output/Control.Monad.Aff/foreign.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
	/* jshint -W083, -W098, -W003 */
	"use strict";

	var Aff = function () {
	  // A unique value for empty.
	  var EMPTY = {};

	  /*

	  An awkward approximation. We elide evidence we would otherwise need in PS for
	  efficiency sake.

	  data Aff eff a
	    = Pure a
	    | Throw Error
	    | Catch (Aff eff a) (Error -> Aff eff a)
	    | Sync (Eff eff a)
	    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
	    | forall b. Bind (Aff eff b) (b -> Aff eff a)
	    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
	    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
	    | Sequential (ParAff aff a)

	  */
	  var PURE    = "Pure";
	  var THROW   = "Throw";
	  var CATCH   = "Catch";
	  var SYNC    = "Sync";
	  var ASYNC   = "Async";
	  var BIND    = "Bind";
	  var BRACKET = "Bracket";
	  var FORK    = "Fork";
	  var SEQ     = "Sequential";

	  /*

	  data ParAff eff a
	    = forall b. Map (b -> a) (ParAff eff b)
	    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
	    | Alt (ParAff eff a) (ParAff eff a)
	    | ?Par (Aff eff a)

	  */
	  var MAP   = "Map";
	  var APPLY = "Apply";
	  var ALT   = "Alt";

	  // Various constructors used in interpretation
	  var CONS      = "Cons";      // Cons-list, for stacks
	  var RESUME    = "Resume";    // Continue indiscriminately
	  var RELEASE   = "Release";   // Continue with bracket finalizers
	  var FINALIZER = "Finalizer"; // A non-interruptible effect
	  var FINALIZED = "Finalized"; // Marker for finalization
	  var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
	  var FIBER     = "Fiber";     // Actual fiber reference
	  var THUNK     = "Thunk";     // Primed effect, ready to invoke

	  function Aff(tag, _1, _2, _3) {
	    this.tag = tag;
	    this._1  = _1;
	    this._2  = _2;
	    this._3  = _3;
	  }

	  function AffCtr(tag) {
	    var fn = function (_1, _2, _3) {
	      return new Aff(tag, _1, _2, _3);
	    };
	    fn.tag = tag;
	    return fn;
	  }

	  function nonCanceler(error) {
	    return new Aff(PURE, void 0);
	  }

	  function runEff(eff) {
	    try {
	      eff();
	    } catch (error) {
	      setTimeout(function () {
	        throw error;
	      }, 0);
	    }
	  }

	  function runSync(left, right, eff) {
	    try {
	      return right(eff());
	    } catch (error) {
	      return left(error);
	    }
	  }

	  function runAsync(left, eff, k) {
	    try {
	      return eff(k)();
	    } catch (error) {
	      k(left(error))();
	      return nonCanceler;
	    }
	  }

	  var Scheduler = function () {
	    var limit    = 1024;
	    var size     = 0;
	    var ix       = 0;
	    var queue    = new Array(limit);
	    var draining = false;

	    function drain() {
	      var thunk;
	      draining = true;
	      while (size !== 0) {
	        size--;
	        thunk     = queue[ix];
	        queue[ix] = void 0;
	        ix        = (ix + 1) % limit;
	        thunk();
	      }
	      draining = false;
	    }

	    return {
	      isDraining: function () {
	        return draining;
	      },
	      enqueue: function (cb) {
	        var i, tmp;
	        if (size === limit) {
	          tmp = draining;
	          drain();
	          draining = tmp;
	        }

	        queue[(ix + size) % limit] = cb;
	        size++;

	        if (!draining) {
	          drain();
	        }
	      }
	    };
	  }();

	  function Supervisor(util) {
	    var fibers  = {};
	    var fiberId = 0;
	    var count   = 0;

	    return {
	      register: function (fiber) {
	        var fid = fiberId++;
	        fiber.onComplete({
	          rethrow: true,
	          handler: function (result) {
	            return function () {
	              count--;
	              delete fibers[fid];
	            };
	          }
	        });
	        fibers[fid] = fiber;
	        count++;
	      },
	      isEmpty: function () {
	        return count === 0;
	      },
	      killAll: function (killError, cb) {
	        return function () {
	          var killCount = 0;
	          var kills     = {};

	          function kill(fid) {
	            kills[fid] = fibers[fid].kill(killError, function (result) {
	              return function () {
	                delete kills[fid];
	                killCount--;
	                if (util.isLeft(result) && util.fromLeft(result)) {
	                  setTimeout(function () {
	                    throw util.fromLeft(result);
	                  }, 0);
	                }
	                if (killCount === 0) {
	                  cb();
	                }
	              };
	            })();
	          }

	          for (var k in fibers) {
	            if (fibers.hasOwnProperty(k)) {
	              killCount++;
	              kill(k);
	            }
	          }

	          fibers  = {};
	          fiberId = 0;
	          count   = 0;

	          return function (error) {
	            return new Aff(SYNC, function () {
	              for (var k in kills) {
	                if (kills.hasOwnProperty(k)) {
	                  kills[k]();
	                }
	              }
	            });
	          };
	        };
	      }
	    };
	  }

	  // Fiber state machine
	  var SUSPENDED   = 0; // Suspended, pending a join.
	  var CONTINUE    = 1; // Interpret the next instruction.
	  var STEP_BIND   = 2; // Apply the next bind.
	  var STEP_RESULT = 3; // Handle potential failure from a result.
	  var PENDING     = 4; // An async effect is running.
	  var RETURN      = 5; // The current stack has returned.
	  var COMPLETED   = 6; // The entire fiber has completed.

	  function Fiber(util, supervisor, aff) {
	    // Monotonically increasing tick, increased on each asynchronous turn.
	    var runTick = 0;

	    // The current branch of the state machine.
	    var status = SUSPENDED;

	    // The current point of interest for the state machine branch.
	    var step      = aff;  // Successful step
	    var fail      = null; // Failure step
	    var interrupt = null; // Asynchronous interrupt

	    // Stack of continuations for the current fiber.
	    var bhead = null;
	    var btail = null;

	    // Stack of attempts and finalizers for error recovery. Every `Cons` is also
	    // tagged with current `interrupt` state. We use this to track which items
	    // should be ignored or evaluated as a result of a kill.
	    var attempts = null;

	    // A special state is needed for Bracket, because it cannot be killed. When
	    // we enter a bracket acquisition or finalizer, we increment the counter,
	    // and then decrement once complete.
	    var bracketCount = 0;

	    // Each join gets a new id so they can be revoked.
	    var joinId  = 0;
	    var joins   = null;
	    var rethrow = true;

	    // Each invocation of `run` requires a tick. When an asynchronous effect is
	    // resolved, we must check that the local tick coincides with the fiber
	    // tick before resuming. This prevents multiple async continuations from
	    // accidentally resuming the same fiber. A common example may be invoking
	    // the provided callback in `makeAff` more than once, but it may also be an
	    // async effect resuming after the fiber was already cancelled.
	    function run(localRunTick) {
	      var tmp, result, attempt, canceler;
	      while (true) {
	        tmp       = null;
	        result    = null;
	        attempt   = null;
	        canceler  = null;

	        switch (status) {
	        case STEP_BIND:
	          status = CONTINUE;
	          step   = bhead(step);
	          if (btail === null) {
	            bhead = null;
	          } else {
	            bhead = btail._1;
	            btail = btail._2;
	          }
	          break;

	        case STEP_RESULT:
	          if (util.isLeft(step)) {
	            status = RETURN;
	            fail   = step;
	            step   = null;
	          } else if (bhead === null) {
	            status = RETURN;
	          } else {
	            status = STEP_BIND;
	            step   = util.fromRight(step);
	          }
	          break;

	        case CONTINUE:
	          switch (step.tag) {
	          case BIND:
	            if (bhead) {
	              btail = new Aff(CONS, bhead, btail);
	            }
	            bhead  = step._2;
	            status = CONTINUE;
	            step   = step._1;
	            break;

	          case PURE:
	            if (bhead === null) {
	              status = RETURN;
	              step   = util.right(step._1);
	            } else {
	              status = STEP_BIND;
	              step   = step._1;
	            }
	            break;

	          case SYNC:
	            status = STEP_RESULT;
	            step   = runSync(util.left, util.right, step._1);
	            break;

	          case ASYNC:
	            status = PENDING;
	            step   = runAsync(util.left, step._1, function (result) {
	              return function () {
	                if (runTick !== localRunTick) {
	                  return;
	                }
	                runTick++;
	                Scheduler.enqueue(function () {
	                  status = STEP_RESULT;
	                  step   = result;
	                  run(runTick);
	                });
	              };
	            });
	            return;

	          case THROW:
	            status = RETURN;
	            fail   = util.left(step._1);
	            step   = null;
	            break;

	          // Enqueue the Catch so that we can call the error handler later on
	          // in case of an exception.
	          case CATCH:
	            if (bhead === null) {
	              attempts = new Aff(CONS, step, attempts, interrupt);
	            } else {
	              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
	            }
	            bhead    = null;
	            btail    = null;
	            status   = CONTINUE;
	            step     = step._1;
	            break;

	          // Enqueue the Bracket so that we can call the appropriate handlers
	          // after resource acquisition.
	          case BRACKET:
	            bracketCount++;
	            if (bhead === null) {
	              attempts = new Aff(CONS, step, attempts, interrupt);
	            } else {
	              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
	            }
	            bhead  = null;
	            btail  = null;
	            status = CONTINUE;
	            step   = step._1;
	            break;

	          case FORK:
	            status = STEP_RESULT;
	            tmp    = Fiber(util, supervisor, step._2);
	            if (supervisor) {
	              supervisor.register(tmp);
	            }
	            if (step._1) {
	              tmp.run();
	            }
	            step = util.right(tmp);
	            break;

	          case SEQ:
	            status = CONTINUE;
	            step   = sequential(util, supervisor, step._1);
	            break;
	          }
	          break;

	        case RETURN:
	          bhead = null;
	          btail = null;
	          // If the current stack has returned, and we have no other stacks to
	          // resume or finalizers to run, the fiber has halted and we can
	          // invoke all join callbacks. Otherwise we need to resume.
	          if (attempts === null) {
	            status = COMPLETED;
	            step   = interrupt || fail || step;
	          } else {
	            // The interrupt status for the enqueued item.
	            tmp      = attempts._3;
	            attempt  = attempts._1;
	            attempts = attempts._2;

	            switch (attempt.tag) {
	            // We cannot recover from an interrupt. Otherwise we should
	            // continue stepping, or run the exception handler if an exception
	            // was raised.
	            case CATCH:
	              // We should compare the interrupt status as well because we
	              // only want it to apply if there has been an interrupt since
	              // enqueuing the catch.
	              if (interrupt && interrupt !== tmp) {
	                status = RETURN;
	              } else if (fail) {
	                status = CONTINUE;
	                step   = attempt._2(util.fromLeft(fail));
	                fail   = null;
	              }
	              break;

	            // We cannot resume from an interrupt or exception.
	            case RESUME:
	              // As with Catch, we only want to ignore in the case of an
	              // interrupt since enqueing the item.
	              if (interrupt && interrupt !== tmp || fail) {
	                status = RETURN;
	              } else {
	                bhead  = attempt._1;
	                btail  = attempt._2;
	                status = STEP_BIND;
	                step   = util.fromRight(step);
	              }
	              break;

	            // If we have a bracket, we should enqueue the handlers,
	            // and continue with the success branch only if the fiber has
	            // not been interrupted. If the bracket acquisition failed, we
	            // should not run either.
	            case BRACKET:
	              bracketCount--;
	              if (fail === null) {
	                result   = util.fromRight(step);
	                // We need to enqueue the Release with the same interrupt
	                // status as the Bracket that is initiating it.
	                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
	                // We should only coninue as long as the interrupt status has not changed or
	                // we are currently within a non-interruptable finalizer.
	                if (interrupt === tmp || bracketCount > 0) {
	                  status = CONTINUE;
	                  step   = attempt._3(result);
	                }
	              }
	              break;

	            // Enqueue the appropriate handler. We increase the bracket count
	            // because it should not be cancelled.
	            case RELEASE:
	              bracketCount++;
	              attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
	              status   = CONTINUE;
	              // It has only been killed if the interrupt status has changed
	              // since we enqueued the item.
	              if (interrupt && interrupt !== tmp) {
	                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
	              } else if (fail) {
	                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
	              } else {
	                step = attempt._1.completed(util.fromRight(step))(attempt._2);
	              }
	              break;

	            case FINALIZER:
	              bracketCount++;
	              attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
	              status   = CONTINUE;
	              step     = attempt._1;
	              break;

	            case FINALIZED:
	              bracketCount--;
	              status = RETURN;
	              step   = attempt._1;
	              break;
	            }
	          }
	          break;

	        case COMPLETED:
	          for (var k in joins) {
	            if (joins.hasOwnProperty(k)) {
	              rethrow = rethrow && joins[k].rethrow;
	              runEff(joins[k].handler(step));
	            }
	          }
	          joins = null;
	          // If we have an interrupt and a fail, then the thread threw while
	          // running finalizers. This should always rethrow in a fresh stack.
	          if (interrupt && fail) {
	            setTimeout(function () {
	              throw util.fromLeft(fail);
	            }, 0);
	          // If we have an unhandled exception, and no other fiber has joined
	          // then we need to throw the exception in a fresh stack.
	          } else if (util.isLeft(step) && rethrow) {
	            setTimeout(function () {
	              // Guard on reathrow because a completely synchronous fiber can
	              // still have an observer which was added after-the-fact.
	              if (rethrow) {
	                throw util.fromLeft(step);
	              }
	            }, 0);
	          }
	          return;
	        case SUSPENDED:
	          status = CONTINUE;
	          break;
	        case PENDING: return;
	        }
	      }
	    }

	    function onComplete(join) {
	      return function () {
	        if (status === COMPLETED) {
	          rethrow = rethrow && join.rethrow;
	          join.handler(step)();
	          return function () {};
	        }

	        var jid    = joinId++;
	        joins      = joins || {};
	        joins[jid] = join;

	        return function() {
	          if (joins !== null) {
	            delete joins[jid];
	          }
	        };
	      };
	    }

	    function kill(error, cb) {
	      return function () {
	        if (status === COMPLETED) {
	          cb(util.right(void 0))();
	          return function () {};
	        }

	        var canceler = onComplete({
	          rethrow: false,
	          handler: function (/* unused */) {
	            return cb(util.right(void 0));
	          }
	        })();

	        switch (status) {
	        case SUSPENDED:
	          interrupt = util.left(error);
	          status    = COMPLETED;
	          step      = interrupt;
	          run(runTick);
	          break;
	        case PENDING:
	          if (interrupt === null) {
	            interrupt = util.left(error);
	          }
	          if (bracketCount === 0) {
	            if (status === PENDING) {
	              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
	            }
	            status   = RETURN;
	            step     = null;
	            fail     = null;
	            run(++runTick);
	          }
	          break;
	        default:
	          if (interrupt === null) {
	            interrupt = util.left(error);
	          }
	          if (bracketCount === 0) {
	            status = RETURN;
	            step   = null;
	            fail   = null;
	          }
	        }

	        return canceler;
	      };
	    }

	    function join(cb) {
	      return function () {
	        var canceler = onComplete({
	          rethrow: false,
	          handler: cb
	        })();
	        if (status === SUSPENDED) {
	          run(runTick);
	        }
	        return canceler;
	      };
	    }

	    return {
	      kill: kill,
	      join: join,
	      onComplete: onComplete,
	      isSuspended: function () {
	        return status === SUSPENDED;
	      },
	      run: function () {
	        if (status === SUSPENDED) {
	          if (!Scheduler.isDraining()) {
	            Scheduler.enqueue(function () {
	              run(runTick);
	            });
	          } else {
	            run(runTick);
	          }
	        }
	      }
	    };
	  }

	  function runPar(util, supervisor, par, cb) {
	    // Table of all forked fibers.
	    var fiberId   = 0;
	    var fibers    = {};

	    // Table of currently running cancelers, as a product of `Alt` behavior.
	    var killId    = 0;
	    var kills     = {};

	    // Error used for early cancelation on Alt branches.
	    var early     = new Error("[ParAff] Early exit");

	    // Error used to kill the entire tree.
	    var interrupt = null;

	    // The root pointer of the tree.
	    var root      = EMPTY;

	    // Walks a tree, invoking all the cancelers. Returns the table of pending
	    // cancellation fibers.
	    function kill(error, par, cb) {
	      var step  = par;
	      var head  = null;
	      var tail  = null;
	      var count = 0;
	      var kills = {};
	      var tmp, kid;

	      loop: while (true) {
	        tmp = null;

	        switch (step.tag) {
	        case FORKED:
	          if (step._3 === EMPTY) {
	            tmp = fibers[step._1];
	            kills[count++] = tmp.kill(error, function (result) {
	              return function () {
	                count--;
	                if (count === 0) {
	                  cb(result)();
	                }
	              };
	            });
	          }
	          // Terminal case.
	          if (head === null) {
	            break loop;
	          }
	          // Go down the right side of the tree.
	          step = head._2;
	          if (tail === null) {
	            head = null;
	          } else {
	            head = tail._1;
	            tail = tail._2;
	          }
	          break;
	        case MAP:
	          step = step._2;
	          break;
	        case APPLY:
	        case ALT:
	          if (head) {
	            tail = new Aff(CONS, head, tail);
	          }
	          head = step;
	          step = step._1;
	          break;
	        }
	      }

	      if (count === 0) {
	        cb(util.right(void 0))();
	      } else {
	        // Run the cancelation effects. We alias `count` because it's mutable.
	        kid = 0;
	        tmp = count;
	        for (; kid < tmp; kid++) {
	          kills[kid] = kills[kid]();
	        }
	      }

	      return kills;
	    }

	    // When a fiber resolves, we need to bubble back up the tree with the
	    // result, computing the applicative nodes.
	    function join(result, head, tail) {
	      var fail, step, lhs, rhs, tmp, kid;

	      if (util.isLeft(result)) {
	        fail = result;
	        step = null;
	      } else {
	        step = result;
	        fail = null;
	      }

	      loop: while (true) {
	        lhs = null;
	        rhs = null;
	        tmp = null;
	        kid = null;

	        // We should never continue if the entire tree has been interrupted.
	        if (interrupt !== null) {
	          return;
	        }

	        // We've made it all the way to the root of the tree, which means
	        // the tree has fully evaluated.
	        if (head === null) {
	          cb(fail || step)();
	          return;
	        }

	        // The tree has already been computed, so we shouldn't try to do it
	        // again. This should never happen.
	        // TODO: Remove this?
	        if (head._3 !== EMPTY) {
	          return;
	        }

	        switch (head.tag) {
	        case MAP:
	          if (fail === null) {
	            head._3 = util.right(head._1(util.fromRight(step)));
	            step    = head._3;
	          } else {
	            head._3 = fail;
	          }
	          break;
	        case APPLY:
	          lhs = head._1._3;
	          rhs = head._2._3;
	          // If we have a failure we should kill the other side because we
	          // can't possible yield a result anymore.
	          if (fail) {
	            head._3 = fail;
	            tmp     = true;
	            kid     = killId++;

	            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
	              return function () {
	                delete kills[kid];
	                if (tmp) {
	                  tmp = false;
	                } else if (tail === null) {
	                  join(step, null, null);
	                } else {
	                  join(step, tail._1, tail._2);
	                }
	              };
	            });

	            if (tmp) {
	              tmp = false;
	              return;
	            }
	          } else if (lhs === EMPTY || rhs === EMPTY) {
	            // We can only proceed if both sides have resolved.
	            return;
	          } else {
	            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
	            head._3 = step;
	          }
	          break;
	        case ALT:
	          lhs = head._1._3;
	          rhs = head._2._3;
	          // We can only proceed if both have resolved or we have a success
	          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
	            return;
	          }
	          // If both sides resolve with an error, we should continue with the
	          // first error
	          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
	            fail    = step === lhs ? rhs : lhs;
	            step    = null;
	            head._3 = fail;
	          } else {
	            head._3 = step;
	            tmp     = true;
	            kid     = killId++;
	            // Once a side has resolved, we need to cancel the side that is still
	            // pending before we can continue.
	            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
	              return function () {
	                delete kills[kid];
	                if (tmp) {
	                  tmp = false;
	                } else if (tail === null) {
	                  join(step, null, null);
	                } else {
	                  join(step, tail._1, tail._2);
	                }
	              };
	            });

	            if (tmp) {
	              tmp = false;
	              return;
	            }
	          }
	          break;
	        }

	        if (tail === null) {
	          head = null;
	        } else {
	          head = tail._1;
	          tail = tail._2;
	        }
	      }
	    }

	    function resolve(fiber) {
	      return function (result) {
	        return function () {
	          delete fibers[fiber._1];
	          fiber._3 = result;
	          join(result, fiber._2._1, fiber._2._2);
	        };
	      };
	    }

	    // Walks the applicative tree, substituting non-applicative nodes with
	    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
	    // as a mutable slot for memoization. In an unresolved state, the `_3`
	    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
	    // the left side first, because both operations are left-associative. As
	    // we `RETURN` from those branches, we then walk the right side.
	    function run() {
	      var status = CONTINUE;
	      var step   = par;
	      var head   = null;
	      var tail   = null;
	      var tmp, fid;

	      loop: while (true) {
	        tmp = null;
	        fid = null;

	        switch (status) {
	        case CONTINUE:
	          switch (step.tag) {
	          case MAP:
	            if (head) {
	              tail = new Aff(CONS, head, tail);
	            }
	            head = new Aff(MAP, step._1, EMPTY, EMPTY);
	            step = step._2;
	            break;
	          case APPLY:
	            if (head) {
	              tail = new Aff(CONS, head, tail);
	            }
	            head = new Aff(APPLY, EMPTY, step._2, EMPTY);
	            step = step._1;
	            break;
	          case ALT:
	            if (head) {
	              tail = new Aff(CONS, head, tail);
	            }
	            head = new Aff(ALT, EMPTY, step._2, EMPTY);
	            step = step._1;
	            break;
	          default:
	            // When we hit a leaf value, we suspend the stack in the `FORKED`.
	            // When the fiber resolves, it can bubble back up the tree.
	            fid    = fiberId++;
	            status = RETURN;
	            tmp    = step;
	            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
	            tmp    = Fiber(util, supervisor, tmp);
	            tmp.onComplete({
	              rethrow: false,
	              handler: resolve(step)
	            })();
	            fibers[fid] = tmp;
	            if (supervisor) {
	              supervisor.register(tmp);
	            }
	          }
	          break;
	        case RETURN:
	          // Terminal case, we are back at the root.
	          if (head === null) {
	            break loop;
	          }
	          // If we are done with the right side, we need to continue down the
	          // left. Otherwise we should continue up the stack.
	          if (head._1 === EMPTY) {
	            head._1 = step;
	            status  = CONTINUE;
	            step    = head._2;
	            head._2 = EMPTY;
	          } else {
	            head._2 = step;
	            step    = head;
	            if (tail === null) {
	              head  = null;
	            } else {
	              head  = tail._1;
	              tail  = tail._2;
	            }
	          }
	        }
	      }

	      // Keep a reference to the tree root so it can be cancelled.
	      root = step;

	      for (fid = 0; fid < fiberId; fid++) {
	        fibers[fid].run();
	      }
	    }

	    // Cancels the entire tree. If there are already subtrees being canceled,
	    // we need to first cancel those joins. We will then add fresh joins for
	    // all pending branches including those that were in the process of being
	    // canceled.
	    function cancel(error, cb) {
	      interrupt = util.left(error);
	      var innerKills;
	      for (var kid in kills) {
	        if (kills.hasOwnProperty(kid)) {
	          innerKills = kills[kid];
	          for (kid in innerKills) {
	            if (innerKills.hasOwnProperty(kid)) {
	              innerKills[kid]();
	            }
	          }
	        }
	      }

	      kills = null;
	      var newKills = kill(error, root, cb);

	      return function (killError) {
	        return new Aff(ASYNC, function (killCb) {
	          return function () {
	            for (var kid in newKills) {
	              if (newKills.hasOwnProperty(kid)) {
	                newKills[kid]();
	              }
	            }
	            return nonCanceler;
	          };
	        });
	      };
	    }

	    run();

	    return function (killError) {
	      return new Aff(ASYNC, function (killCb) {
	        return function () {
	          return cancel(killError, killCb);
	        };
	      });
	    };
	  }

	  function sequential(util, supervisor, par) {
	    return new Aff(ASYNC, function (cb) {
	      return function () {
	        return runPar(util, supervisor, par, cb);
	      };
	    });
	  }

	  Aff.EMPTY       = EMPTY;
	  Aff.Pure        = AffCtr(PURE);
	  Aff.Throw       = AffCtr(THROW);
	  Aff.Catch       = AffCtr(CATCH);
	  Aff.Sync        = AffCtr(SYNC);
	  Aff.Async       = AffCtr(ASYNC);
	  Aff.Bind        = AffCtr(BIND);
	  Aff.Bracket     = AffCtr(BRACKET);
	  Aff.Fork        = AffCtr(FORK);
	  Aff.Seq         = AffCtr(SEQ);
	  Aff.ParMap      = AffCtr(MAP);
	  Aff.ParApply    = AffCtr(APPLY);
	  Aff.ParAlt      = AffCtr(ALT);
	  Aff.Fiber       = Fiber;
	  Aff.Supervisor  = Supervisor;
	  Aff.Scheduler   = Scheduler;
	  Aff.nonCanceler = nonCanceler;

	  return Aff;
	}();

	exports._pure = Aff.Pure;

	exports._throwError = Aff.Throw;

	exports._catchError = function (aff) {
	  return function (k) {
	    return Aff.Catch(aff, k);
	  };
	};

	exports._map = function (f) {
	  return function (aff) {
	    if (aff.tag === Aff.Pure.tag) {
	      return Aff.Pure(f(aff._1));
	    } else {
	      return Aff.Bind(aff, function (value) {
	        return Aff.Pure(f(value));
	      });
	    }
	  };
	};

	exports._bind = function (aff) {
	  return function (k) {
	    return Aff.Bind(aff, k);
	  };
	};

	exports._fork = function (immediate) {
	  return function (aff) {
	    return Aff.Fork(immediate, aff);
	  };
	};

	exports._liftEff = Aff.Sync;

	exports._parAffMap = function (f) {
	  return function (aff) {
	    return Aff.ParMap(f, aff);
	  };
	};

	exports._parAffApply = function (aff1) {
	  return function (aff2) {
	    return Aff.ParApply(aff1, aff2);
	  };
	};

	exports._parAffAlt = function (aff1) {
	  return function (aff2) {
	    return Aff.ParAlt(aff1, aff2);
	  };
	};

	exports.makeAff = Aff.Async;

	exports.generalBracket = function (acquire) {
	  return function (options) {
	    return function (k) {
	      return Aff.Bracket(acquire, options, k);
	    };
	  };
	};

	exports._makeFiber = function (util, aff) {
	  return function () {
	    return Aff.Fiber(util, null, aff);
	  };
	};

	exports._makeSupervisedFiber = function (util, aff) {
	  return function () {
	    var supervisor = Aff.Supervisor(util);
	    return {
	      fiber: Aff.Fiber(util, supervisor, aff),
	      supervisor: supervisor
	    };
	  };
	};

	exports._killAll = function (error, supervisor, cb) {
	  return supervisor.killAll(error, cb);
	};

	exports._delay = function () {
	  function setDelay(n, k) {
	    if (n === 0 && typeof setImmediate !== "undefined") {
	      return setImmediate(k);
	    } else {
	      return setTimeout(k, n);
	    }
	  }

	  function clearDelay(n, t) {
	    if (n === 0 && typeof clearImmediate !== "undefined") {
	      return clearImmediate(t);
	    } else {
	      return clearTimeout(t);
	    }
	  }

	  return function (right, ms) {
	    return Aff.Async(function (cb) {
	      return function () {
	        var timer = setDelay(ms, cb(right()));
	        return function () {
	          return Aff.Sync(function () {
	            return right(clearDelay(ms, timer));
	          });
	        };
	      };
	    });
	  };
	}();

	exports._sequential = Aff.Seq;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../~/timers-browserify/main.js */ 124).setImmediate, __webpack_require__(/*! ./../../~/timers-browserify/main.js */ 124).clearImmediate))

/***/ }),
/* 124 */
/*!*************************************!*\
  !*** ./~/timers-browserify/main.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
	            (typeof self !== "undefined" && self) ||
	            window;
	var apply = Function.prototype.apply;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(scope, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// setimmediate attaches itself to the global object
	__webpack_require__(/*! setimmediate */ 125);
	// On some exotic environments, it's not clear which object `setimmediate` was
	// able to install onto.  Search each possibility in the same order as the
	// `setimmediate` library.
	exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
	                       (typeof global !== "undefined" && global.setImmediate) ||
	                       (this && this.setImmediate);
	exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
	                         (typeof global !== "undefined" && global.clearImmediate) ||
	                         (this && this.clearImmediate);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 125 */
/*!****************************************!*\
  !*** ./~/setimmediate/setImmediate.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";

	    if (global.setImmediate) {
	        return;
	    }

	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;

	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }

	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }

	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }

	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }

	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }

	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }

	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };

	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }

	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }

	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };

	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }

	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }

	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }

	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();

	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();

	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();

	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();

	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }

	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(/*! ./../process/browser.js */ 126)))

/***/ }),
/* 126 */
/*!******************************!*\
  !*** ./~/process/browser.js ***!
  \******************************/
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 127 */
/*!*****************************************************!*\
  !*** ./output/Control.Monad.Eff.Exception/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 128);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var $$try = function (action) {
	    return $foreign.catchException(function ($0) {
	        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
	    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
	};
	var $$throw = function ($1) {
	    return $foreign.throwException($foreign.error($1));
	};
	var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var showError = new Data_Show.Show($foreign.showErrorImpl);
	module.exports = {
	    stack: stack,
	    "throw": $$throw,
	    "try": $$try,
	    showError: showError,
	    error: $foreign.error,
	    message: $foreign.message,
	    name: $foreign.name,
	    throwException: $foreign.throwException,
	    catchException: $foreign.catchException
	};


/***/ }),
/* 128 */
/*!*******************************************************!*\
  !*** ./output/Control.Monad.Eff.Exception/foreign.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.showErrorImpl = function (err) {
	  return err.stack || err.toString();
	};

	exports.error = function (msg) {
	  return new Error(msg);
	};

	exports.message = function (e) {
	  return e.message;
	};

	exports.name = function (e) {
	  return e.name || "Error";
	};

	exports.stackImpl = function (just) {
	  return function (nothing) {
	    return function (e) {
	      return e.stack ? just(e.stack) : nothing;
	    };
	  };
	};

	exports.throwException = function (e) {
	  return function () {
	    throw e;
	  };
	};

	exports.catchException = function (c) {
	  return function (t) {
	    return function () {
	      try {
	        return t();
	      } catch (e) {
	        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
	          return c(e)();
	        } else {
	          return c(new Error(e.toString()))();
	        }
	      }
	    };
	  };
	};


/***/ }),
/* 129 */
/*!*************************************************!*\
  !*** ./output/Data.Function.Uncurried/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 130);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var runFn1 = function (f) {
	    return f;
	};
	var mkFn1 = function (f) {
	    return f;
	};
	module.exports = {
	    mkFn1: mkFn1,
	    runFn1: runFn1,
	    mkFn0: $foreign.mkFn0,
	    mkFn2: $foreign.mkFn2,
	    mkFn3: $foreign.mkFn3,
	    mkFn4: $foreign.mkFn4,
	    mkFn5: $foreign.mkFn5,
	    mkFn6: $foreign.mkFn6,
	    mkFn7: $foreign.mkFn7,
	    mkFn8: $foreign.mkFn8,
	    mkFn9: $foreign.mkFn9,
	    mkFn10: $foreign.mkFn10,
	    runFn0: $foreign.runFn0,
	    runFn2: $foreign.runFn2,
	    runFn3: $foreign.runFn3,
	    runFn4: $foreign.runFn4,
	    runFn5: $foreign.runFn5,
	    runFn6: $foreign.runFn6,
	    runFn7: $foreign.runFn7,
	    runFn8: $foreign.runFn8,
	    runFn9: $foreign.runFn9,
	    runFn10: $foreign.runFn10
	};


/***/ }),
/* 130 */
/*!***************************************************!*\
  !*** ./output/Data.Function.Uncurried/foreign.js ***!
  \***************************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Data.Function.Uncurried

	exports.mkFn0 = function (fn) {
	  return function () {
	    return fn({});
	  };
	};

	exports.mkFn2 = function (fn) {
	  /* jshint maxparams: 2 */
	  return function (a, b) {
	    return fn(a)(b);
	  };
	};

	exports.mkFn3 = function (fn) {
	  /* jshint maxparams: 3 */
	  return function (a, b, c) {
	    return fn(a)(b)(c);
	  };
	};

	exports.mkFn4 = function (fn) {
	  /* jshint maxparams: 4 */
	  return function (a, b, c, d) {
	    return fn(a)(b)(c)(d);
	  };
	};

	exports.mkFn5 = function (fn) {
	  /* jshint maxparams: 5 */
	  return function (a, b, c, d, e) {
	    return fn(a)(b)(c)(d)(e);
	  };
	};

	exports.mkFn6 = function (fn) {
	  /* jshint maxparams: 6 */
	  return function (a, b, c, d, e, f) {
	    return fn(a)(b)(c)(d)(e)(f);
	  };
	};

	exports.mkFn7 = function (fn) {
	  /* jshint maxparams: 7 */
	  return function (a, b, c, d, e, f, g) {
	    return fn(a)(b)(c)(d)(e)(f)(g);
	  };
	};

	exports.mkFn8 = function (fn) {
	  /* jshint maxparams: 8 */
	  return function (a, b, c, d, e, f, g, h) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h);
	  };
	};

	exports.mkFn9 = function (fn) {
	  /* jshint maxparams: 9 */
	  return function (a, b, c, d, e, f, g, h, i) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
	  };
	};

	exports.mkFn10 = function (fn) {
	  /* jshint maxparams: 10 */
	  return function (a, b, c, d, e, f, g, h, i, j) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
	  };
	};

	exports.runFn0 = function (fn) {
	  return fn();
	};

	exports.runFn2 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return fn(a, b);
	    };
	  };
	};

	exports.runFn3 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return fn(a, b, c);
	      };
	    };
	  };
	};

	exports.runFn4 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return fn(a, b, c, d);
	        };
	      };
	    };
	  };
	};

	exports.runFn5 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return fn(a, b, c, d, e);
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn6 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return fn(a, b, c, d, e, f);
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn7 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return fn(a, b, c, d, e, f, g);
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn8 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return fn(a, b, c, d, e, f, g, h);
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn9 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return fn(a, b, c, d, e, f, g, h, i);
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn10 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return function (j) {
	                      return fn(a, b, c, d, e, f, g, h, i, j);
	                    };
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};


/***/ }),
/* 131 */
/*!********************************************!*\
  !*** ./output/Data.Time.Duration/index.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Generic = __webpack_require__(/*! ../Data.Generic */ 132);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Seconds = function (x) {
	    return x;
	};
	var Minutes = function (x) {
	    return x;
	};
	var Milliseconds = function (x) {
	    return x;
	};
	var Hours = function (x) {
	    return x;
	};
	var Days = function (x) {
	    return x;
	};
	var Duration = function (fromDuration, toDuration) {
	    this.fromDuration = fromDuration;
	    this.toDuration = toDuration;
	};
	var toDuration = function (dict) {
	    return dict.toDuration;
	};
	var showSeconds = new Data_Show.Show(function (v) {
	    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showMinutes = new Data_Show.Show(function (v) {
	    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showMilliseconds = new Data_Show.Show(function (v) {
	    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showHours = new Data_Show.Show(function (v) {
	    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showDays = new Data_Show.Show(function (v) {
	    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var semiringSeconds = Data_Semiring.semiringNumber;
	var semiringMinutes = Data_Semiring.semiringNumber;
	var semiringMilliseconds = Data_Semiring.semiringNumber;
	var semiringHours = Data_Semiring.semiringNumber;
	var semiringDays = Data_Semiring.semiringNumber;
	var ringSeconds = Data_Ring.ringNumber;
	var ringMinutes = Data_Ring.ringNumber;
	var ringMilliseconds = Data_Ring.ringNumber;
	var ringHours = Data_Ring.ringNumber;
	var ringDays = Data_Ring.ringNumber;
	var ordSeconds = Data_Ord.ordNumber;
	var ordMinutes = Data_Ord.ordNumber;
	var ordMilliseconds = Data_Ord.ordNumber;
	var ordHours = Data_Ord.ordNumber;
	var ordDays = Data_Ord.ordNumber;
	var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Seconds);
	var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Minutes);
	var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Milliseconds);
	var newtypeHours = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Hours);
	var newtypeDays = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Days);
	var genericSeconds = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
	        sigConstructor: "Data.Time.Duration.Seconds",
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericMinutes = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
	        sigConstructor: "Data.Time.Duration.Minutes",
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericMilliseconds = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
	        sigConstructor: "Data.Time.Duration.Milliseconds",
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericHours = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
	        sigConstructor: "Data.Time.Duration.Hours",
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericDays = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
	        sigConstructor: "Data.Time.Duration.Days",
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var fromDuration = function (dict) {
	    return dict.fromDuration;
	};
	var eqSeconds = Data_Eq.eqNumber;
	var eqMinutes = Data_Eq.eqNumber;
	var eqMilliseconds = Data_Eq.eqNumber;
	var eqHours = Data_Eq.eqNumber;
	var eqDays = Data_Eq.eqNumber;
	var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
	    return v * 1000.0;
	}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
	    return v / 1000.0;
	}));
	var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
	    return v * 60000.0;
	}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
	    return v / 60000.0;
	}));
	var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
	var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
	    return v * 3600000.0;
	}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
	    return v / 3600000.0;
	}));
	var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
	    return v * 8.64e7;
	}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
	    return v / 8.64e7;
	}));
	var convertDuration = function (dictDuration) {
	    return function (dictDuration1) {
	        return function ($80) {
	            return toDuration(dictDuration1)(fromDuration(dictDuration)($80));
	        };
	    };
	};
	module.exports = {
	    fromDuration: fromDuration,
	    toDuration: toDuration,
	    Milliseconds: Milliseconds,
	    Seconds: Seconds,
	    Minutes: Minutes,
	    Hours: Hours,
	    Days: Days,
	    Duration: Duration,
	    convertDuration: convertDuration,
	    newtypeMilliseconds: newtypeMilliseconds,
	    genericMilliseconds: genericMilliseconds,
	    eqMilliseconds: eqMilliseconds,
	    ordMilliseconds: ordMilliseconds,
	    semiringMilliseconds: semiringMilliseconds,
	    ringMilliseconds: ringMilliseconds,
	    showMilliseconds: showMilliseconds,
	    newtypeSeconds: newtypeSeconds,
	    genericSeconds: genericSeconds,
	    eqSeconds: eqSeconds,
	    ordSeconds: ordSeconds,
	    semiringSeconds: semiringSeconds,
	    ringSeconds: ringSeconds,
	    showSeconds: showSeconds,
	    newtypeMinutes: newtypeMinutes,
	    genericMinutes: genericMinutes,
	    eqMinutes: eqMinutes,
	    ordMinutes: ordMinutes,
	    semiringMinutes: semiringMinutes,
	    ringMinutes: ringMinutes,
	    showMinutes: showMinutes,
	    newtypeHours: newtypeHours,
	    genericHours: genericHours,
	    eqHours: eqHours,
	    ordHours: ordHours,
	    semiringHours: semiringHours,
	    ringHours: ringHours,
	    showHours: showHours,
	    newtypeDays: newtypeDays,
	    genericDays: genericDays,
	    eqDays: eqDays,
	    ordDays: ordDays,
	    semiringDays: semiringDays,
	    ringDays: ringDays,
	    showDays: showDays,
	    durationMilliseconds: durationMilliseconds,
	    durationSeconds: durationSeconds,
	    durationMinutes: durationMinutes,
	    durationHours: durationHours,
	    durationDays: durationDays
	};


/***/ }),
/* 132 */
/*!**************************************!*\
  !*** ./output/Data.Generic/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 133);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Array = __webpack_require__(/*! ../Data.Array */ 134);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_String = __webpack_require__(/*! ../Data.String */ 150);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Type_Proxy = __webpack_require__(/*! ../Type.Proxy */ 154);
	var SProd = (function () {
	    function SProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SProd.create = function (value0) {
	        return function (value1) {
	            return new SProd(value0, value1);
	        };
	    };
	    return SProd;
	})();
	var SRecord = (function () {
	    function SRecord(value0) {
	        this.value0 = value0;
	    };
	    SRecord.create = function (value0) {
	        return new SRecord(value0);
	    };
	    return SRecord;
	})();
	var SNumber = (function () {
	    function SNumber(value0) {
	        this.value0 = value0;
	    };
	    SNumber.create = function (value0) {
	        return new SNumber(value0);
	    };
	    return SNumber;
	})();
	var SBoolean = (function () {
	    function SBoolean(value0) {
	        this.value0 = value0;
	    };
	    SBoolean.create = function (value0) {
	        return new SBoolean(value0);
	    };
	    return SBoolean;
	})();
	var SInt = (function () {
	    function SInt(value0) {
	        this.value0 = value0;
	    };
	    SInt.create = function (value0) {
	        return new SInt(value0);
	    };
	    return SInt;
	})();
	var SString = (function () {
	    function SString(value0) {
	        this.value0 = value0;
	    };
	    SString.create = function (value0) {
	        return new SString(value0);
	    };
	    return SString;
	})();
	var SChar = (function () {
	    function SChar(value0) {
	        this.value0 = value0;
	    };
	    SChar.create = function (value0) {
	        return new SChar(value0);
	    };
	    return SChar;
	})();
	var SArray = (function () {
	    function SArray(value0) {
	        this.value0 = value0;
	    };
	    SArray.create = function (value0) {
	        return new SArray(value0);
	    };
	    return SArray;
	})();
	var SUnit = (function () {
	    function SUnit() {

	    };
	    SUnit.value = new SUnit();
	    return SUnit;
	})();
	var SigProd = (function () {
	    function SigProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SigProd.create = function (value0) {
	        return function (value1) {
	            return new SigProd(value0, value1);
	        };
	    };
	    return SigProd;
	})();
	var SigRecord = (function () {
	    function SigRecord(value0) {
	        this.value0 = value0;
	    };
	    SigRecord.create = function (value0) {
	        return new SigRecord(value0);
	    };
	    return SigRecord;
	})();
	var SigNumber = (function () {
	    function SigNumber() {

	    };
	    SigNumber.value = new SigNumber();
	    return SigNumber;
	})();
	var SigBoolean = (function () {
	    function SigBoolean() {

	    };
	    SigBoolean.value = new SigBoolean();
	    return SigBoolean;
	})();
	var SigInt = (function () {
	    function SigInt() {

	    };
	    SigInt.value = new SigInt();
	    return SigInt;
	})();
	var SigString = (function () {
	    function SigString() {

	    };
	    SigString.value = new SigString();
	    return SigString;
	})();
	var SigChar = (function () {
	    function SigChar() {

	    };
	    SigChar.value = new SigChar();
	    return SigChar;
	})();
	var SigArray = (function () {
	    function SigArray(value0) {
	        this.value0 = value0;
	    };
	    SigArray.create = function (value0) {
	        return new SigArray(value0);
	    };
	    return SigArray;
	})();
	var SigUnit = (function () {
	    function SigUnit() {

	    };
	    SigUnit.value = new SigUnit();
	    return SigUnit;
	})();
	var Generic = function (fromSpine, toSignature, toSpine) {
	    this.fromSpine = fromSpine;
	    this.toSignature = toSignature;
	    this.toSpine = toSpine;
	};
	var toSpine = function (dict) {
	    return dict.toSpine;
	};
	var toSignature = function (dict) {
	    return dict.toSignature;
	};
	var showSuspended = function (dictShow) {
	    return function (e) {
	        return "\\_ -> " + Data_Show.show(dictShow)(e(Data_Unit.unit));
	    };
	};
	var showArray = function (v) {
	    return function (v1) {
	        if (v1.length === 0) {
	            return "[]";
	        };
	        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(v)(v1)) + " ]");
	    };
	};
	var showGenericSpine = new Data_Show.Show(function (v) {
	    if (v instanceof SUnit) {
	        return "SUnit";
	    };
	    if (v instanceof SChar) {
	        return "SChar " + Data_Show.show(Data_Show.showChar)(v.value0);
	    };
	    if (v instanceof SString) {
	        return "SString " + Data_Show.show(Data_Show.showString)(v.value0);
	    };
	    if (v instanceof SBoolean) {
	        return "SBoolean " + Data_Show.show(Data_Show.showBoolean)(v.value0);
	    };
	    if (v instanceof SNumber) {
	        return "SNumber " + Data_Show.show(Data_Show.showNumber)(v.value0);
	    };
	    if (v instanceof SInt) {
	        return "SInt " + Data_Show.show(Data_Show.showInt)(v.value0);
	    };
	    if (v instanceof SArray) {
	        return "SArray " + showArray(showSuspended(showGenericSpine))(v.value0);
	    };
	    if (v instanceof SProd) {
	        return "SProd " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + showArray(showSuspended(showGenericSpine))(v.value1)));
	    };
	    if (v instanceof SRecord) {
	        var showElt = function (v1) {
	            return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "{ recLabel: ", Data_Show.show(Data_Show.showString)(v1.recLabel), ", recValue: ", showSuspended(showGenericSpine)(v1.recValue), " }" ]);
	        };
	        return "SRecord " + showArray(showElt)(v.value0);
	    };
	    throw new Error("Failed pattern match at Data.Generic line 270, column 1 - line 270, column 47: " + [ v.constructor.name ]);
	});
	var orderingToInt = function (v) {
	    if (v instanceof Data_Ordering.EQ) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.LT) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return -1 | 0;
	    };
	    throw new Error("Failed pattern match at Data.Generic line 538, column 17 - line 541, column 10: " + [ v.constructor.name ]);
	};
	var genericVoid = new Generic(function (v) {
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return new SigProd("Data.Void.Void", [  ]);
	}, Data_Void.absurd);
	var genericUnit = new Generic(function (v) {
	    if (v instanceof SUnit) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigUnit.value;
	}, function (v) {
	    return SUnit.value;
	});
	var genericString = new Generic(function (v) {
	    if (v instanceof SString) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigString.value;
	}, SString.create);
	var genericOrdering = new Generic(function (v) {
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return new SigProd("Data.Ordering.Ordering", [ {
	        sigConstructor: "Data.Ordering.LT",
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.EQ",
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.GT",
	        sigValues: [  ]
	    } ]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new SProd("Data.Ordering.LT", [  ]);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new SProd("Data.Ordering.EQ", [  ]);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new SProd("Data.Ordering.GT", [  ]);
	    };
	    throw new Error("Failed pattern match at Data.Generic line 218, column 13 - line 221, column 38: " + [ v.constructor.name ]);
	});
	var genericNumber = new Generic(function (v) {
	    if (v instanceof SNumber) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigNumber.value;
	}, SNumber.create);
	var genericInt = new Generic(function (v) {
	    if (v instanceof SInt) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigInt.value;
	}, SInt.create);
	var genericChar = new Generic(function (v) {
	    if (v instanceof SChar) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigChar.value;
	}, SChar.create);
	var genericBool = new Generic(function (v) {
	    if (v instanceof SBoolean) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigBoolean.value;
	}, SBoolean.create);
	var fromSpine = function (dict) {
	    return dict.fromSpine;
	};
	var force = function (f) {
	    return f(Data_Unit.unit);
	};
	var genericArray = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SArray) {
	            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($310) {
	                return fromSpine(dictGeneric)(force($310));
	            })(v.value0);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var lowerProxy = function (v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigArray(function (v) {
	            return toSignature(dictGeneric)(lowerProxy(x));
	        });
	    }, function ($311) {
	        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	            return function (v) {
	                return toSpine(dictGeneric)(x);
	            };
	        })($311));
	    });
	};
	var genericEither = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
	            };
	            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v["value1"][0])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var rproxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            var lproxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            return new SigProd("Data.Either.Either", [ {
	                sigConstructor: "Data.Either.Left",
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(lproxy(x));
	                } ]
	            }, {
	                sigConstructor: "Data.Either.Right",
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric1)(rproxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new SProd("Data.Either.Left", [ function (v1) {
	                    return toSpine(dictGeneric)(v.value0);
	                } ]);
	            };
	            if (v instanceof Data_Either.Right) {
	                return new SProd("Data.Either.Right", [ function (v1) {
	                    return toSpine(dictGeneric1)(v.value0);
	                } ]);
	            };
	            throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: " + [ v.constructor.name ]);
	        });
	    };
	};
	var genericIdentity = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v["value1"][0])));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var iproxy = function (v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigProd("Data.Identity.Identity", [ {
	            sigConstructor: "Data.Identity.Identity",
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(iproxy(x));
	            } ]
	        } ]);
	    }, function (v) {
	        return new SProd("Data.Identity.Identity", [ function (v1) {
	            return toSpine(dictGeneric)(v);
	        } ]);
	    });
	};
	var genericList = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
	            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.Cons.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(genericList(dictGeneric))(force(v["value1"][1])));
	        };
	        if (v instanceof SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_List_Types.Nil.value);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var headProxy = function (v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigProd("Data.List.Types.List", [ {
	            sigConstructor: "Data.List.Types.Cons",
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(headProxy(x));
	            }, function (v) {
	                return toSignature(genericList(dictGeneric))(x);
	            } ]
	        }, {
	            sigConstructor: "Data.List.Types.Nil",
	            sigValues: [  ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Data_List_Types.Cons) {
	            return new SProd("Data.List.Types.Cons", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }, function (v1) {
	                return toSpine(genericList(dictGeneric))(v.value1);
	            } ]);
	        };
	        if (v instanceof Data_List_Types.Nil) {
	            return new SProd("Data.List.Types.Nil", [  ]);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 116, column 1 - line 116, column 58: " + [ v.constructor.name ]);
	    });
	};
	var genericMaybe = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
	        };
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var mbProxy = function (v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigProd("Data.Maybe.Maybe", [ {
	            sigConstructor: "Data.Maybe.Just",
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(mbProxy(x));
	            } ]
	        }, {
	            sigConstructor: "Data.Maybe.Nothing",
	            sigValues: [  ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Just) {
	            return new SProd("Data.Maybe.Just", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            } ]);
	        };
	        if (v instanceof Data_Maybe.Nothing) {
	            return new SProd("Data.Maybe.Nothing", [  ]);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: " + [ v.constructor.name ]);
	    });
	};
	var genericNonEmpty = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v["value1"][0]))))(fromSpine(dictGeneric)(force(v["value1"][1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var tailProxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            var headProxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            return new SigProd("Data.NonEmpty.NonEmpty", [ {
	                sigConstructor: "Data.NonEmpty.NonEmpty",
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric1)(headProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric)(tailProxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
	                return toSpine(dictGeneric1)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric)(v.value1);
	            } ]);
	        });
	    };
	};
	var genericNonEmptyList = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.List.Types.NonEmptyList" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.NonEmptyList)(fromSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(force(v["value1"][0])));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var listProxy = function (v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigProd("Data.List.Types.NonEmptyList", [ {
	            sigConstructor: "Data.List.Types.NonEmptyList",
	            sigValues: [ function (v) {
	                return toSignature(genericList(dictGeneric))(listProxy(x));
	            } ]
	        } ]);
	    }, function (v) {
	        return new SProd("Data.List.Types.NonEmptyList", [ function (v1) {
	            return toSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(v);
	        } ]);
	    });
	};
	var genericShowPrec = function (v) {
	    return function (v1) {
	        if (v1 instanceof SProd) {
	            if (Data_Array["null"](v1.value1)) {
	                return v1.value0;
	            };
	            if (Data_Boolean.otherwise) {
	                var showParen = function (v2) {
	                    return function (x) {
	                        if (!v2) {
	                            return x;
	                        };
	                        if (v2) {
	                            return "(" + (x + ")");
	                        };
	                        throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
	                    };
	                };
	                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                    return genericShowPrec(11)(force(x));
	                })(v1.value1))));
	            };
	        };
	        if (v1 instanceof SRecord) {
	            var showLabelPart = function (x) {
	                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
	            };
	            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
	        };
	        if (v1 instanceof SInt) {
	            return Data_Show.show(Data_Show.showInt)(v1.value0);
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Show.show(Data_Show.showNumber)(v1.value0);
	        };
	        if (v1 instanceof SString) {
	            return Data_Show.show(Data_Show.showString)(v1.value0);
	        };
	        if (v1 instanceof SChar) {
	            return Data_Show.show(Data_Show.showChar)(v1.value0);
	        };
	        if (v1 instanceof SArray) {
	            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                return genericShowPrec(0)(force(x));
	            })(v1.value0)) + "]");
	        };
	        if (v1 instanceof SUnit) {
	            return "unit";
	        };
	        throw new Error("Failed pattern match at Data.Generic line 460, column 1 - line 460, column 49: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var gShow = function (dictGeneric) {
	    return function ($312) {
	        return genericShowPrec(0)(toSpine(dictGeneric)($312));
	    };
	};
	var genericTuple = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(dictGeneric1)(force(v["value1"][1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var sndProxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            var fstProxy = function (v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            return new SigProd("Data.Tuple.Tuple", [ {
	                sigConstructor: "Data.Tuple.Tuple",
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(fstProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric1)(sndProxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            return new SProd("Data.Tuple.Tuple", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric1)(v.value1);
	            } ]);
	        });
	    };
	};
	var isValidSpine = function (v) {
	    return function (v1) {
	        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
	            return true;
	        };
	        if (v instanceof SigNumber && v1 instanceof SNumber) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SArray) {
	            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($313) {
	                return isValidSpine(force(v.value0))(force($313));
	            })(v1.value0);
	        };
	        if (v instanceof SigProd && v1 instanceof SProd) {
	            var v2 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                return alt.sigConstructor === v1.value0;
	            })(v.value1);
	            if (v2 instanceof Data_Maybe.Nothing) {
	                return false;
	            };
	            if (v2 instanceof Data_Maybe.Just) {
	                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
	                    return function (spine) {
	                        return isValidSpine(force(sig))(force(spine));
	                    };
	                })(v2.value0.sigValues)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.Generic line 438, column 3 - line 444, column 15: " + [ v2.constructor.name ]);
	        };
	        if (v instanceof SigRecord && v1 instanceof SRecord) {
	            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
	                return function (val) {
	                    return isValidSpine(force(sig.recValue))(force(val.recValue));
	                };
	            })(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v.value0))(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v1.value0)));
	        };
	        if (v instanceof SigUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	};
	var showSignature = function (sig) {
	    var needsParen = function (s) {
	        if (s instanceof SigProd) {
	            return true;
	        };
	        if (s instanceof SigRecord) {
	            return true;
	        };
	        if (s instanceof SigNumber) {
	            return false;
	        };
	        if (s instanceof SigBoolean) {
	            return false;
	        };
	        if (s instanceof SigInt) {
	            return false;
	        };
	        if (s instanceof SigString) {
	            return false;
	        };
	        if (s instanceof SigChar) {
	            return false;
	        };
	        if (s instanceof SigArray) {
	            return true;
	        };
	        if (s instanceof SigUnit) {
	            return false;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 403, column 18 - line 412, column 21: " + [ s.constructor.name ]);
	    };
	    var paren = function (s) {
	        if (needsParen(s)) {
	            return "(" + (showSignature(s) + ")");
	        };
	        if (Data_Boolean.otherwise) {
	            return showSignature(s);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 399, column 3 - line 401, column 34: " + [ s.constructor.name ]);
	    };
	    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
	        if (sig instanceof SigProd) {
	            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
	        };
	        if (sig instanceof SigRecord) {
	            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
	        };
	        if (sig instanceof SigNumber) {
	            return [ "SigNumber" ];
	        };
	        if (sig instanceof SigBoolean) {
	            return [ "SigBoolean" ];
	        };
	        if (sig instanceof SigInt) {
	            return [ "SigInt" ];
	        };
	        if (sig instanceof SigString) {
	            return [ "SigString" ];
	        };
	        if (sig instanceof SigChar) {
	            return [ "SigChar" ];
	        };
	        if (sig instanceof SigArray) {
	            return [ "SigArray ", paren(force(sig.value0)) ];
	        };
	        if (sig instanceof SigUnit) {
	            return [ "SigUnit" ];
	        };
	        throw new Error("Failed pattern match at Data.Generic line 386, column 10 - line 396, column 27: " + [ sig.constructor.name ]);
	    })());
	};
	var showLabel = function (l) {
	    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
	};
	var showDataConstructor = function (dc) {
	    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($314) {
	        return showSignature(force($314));
	    })(dc.sigValues) + " }")));
	};
	var showGenericSignature = new Data_Show.Show(showSignature);
	var eqThunk = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)(force(x))(force(y));
	        };
	    };
	};
	var eqRecordSigs = function (dictEq) {
	    return function (arr1) {
	        return function (arr2) {
	            var labelCompare = function (r1) {
	                return function (r2) {
	                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
	                };
	            };
	            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
	            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
	            var doCmp = function (x) {
	                return function (y) {
	                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
	                };
	            };
	            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
	        };
	    };
	};
	var eqGenericSpine = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var gEq = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	var eqGenericSignature = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SigProd && v1 instanceof SigProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
	        };
	        if (v instanceof SigRecord && v1 instanceof SigRecord) {
	            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigNumber && v1 instanceof SigNumber) {
	            return true;
	        };
	        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SigInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SigString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SigChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SigArray) {
	            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigUnit && v1 instanceof SigUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var eqDataConstructor = function (p1) {
	    return function (p2) {
	        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
	    };
	};
	var compareThunk = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
	        };
	    };
	};
	var ordGenericSpine = new Data_Ord.Ord(function () {
	    return eqGenericSpine;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            var v2 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	            if (v2 instanceof Data_Ordering.EQ) {
	                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
	            };
	            return v2;
	        };
	        if (v instanceof SProd) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SProd) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            var go = function (x) {
	                return function (y) {
	                    var v2 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
	                    if (v2 instanceof Data_Ordering.EQ) {
	                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
	                    };
	                    return orderingToInt(v2);
	                };
	            };
	            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
	        };
	        if (v instanceof SRecord) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SRecord) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
	        };
	        if (v instanceof SInt) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SInt) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
	        };
	        if (v instanceof SBoolean) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	        };
	        if (v instanceof SString) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SString) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
	        };
	        if (v instanceof SChar) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SChar) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
	        };
	        if (v instanceof SArray) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SArray) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 303, column 1 - line 303, column 45: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var gCompare = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	module.exports = {
	    Generic: Generic,
	    toSpine: toSpine,
	    toSignature: toSignature,
	    fromSpine: fromSpine,
	    SProd: SProd,
	    SRecord: SRecord,
	    SNumber: SNumber,
	    SBoolean: SBoolean,
	    SInt: SInt,
	    SString: SString,
	    SChar: SChar,
	    SArray: SArray,
	    SUnit: SUnit,
	    SigProd: SigProd,
	    SigRecord: SigRecord,
	    SigNumber: SigNumber,
	    SigBoolean: SigBoolean,
	    SigInt: SigInt,
	    SigString: SigString,
	    SigChar: SigChar,
	    SigArray: SigArray,
	    SigUnit: SigUnit,
	    showDataConstructor: showDataConstructor,
	    showSignature: showSignature,
	    isValidSpine: isValidSpine,
	    gShow: gShow,
	    gEq: gEq,
	    gCompare: gCompare,
	    genericNumber: genericNumber,
	    genericInt: genericInt,
	    genericString: genericString,
	    genericChar: genericChar,
	    genericBool: genericBool,
	    genericArray: genericArray,
	    genericUnit: genericUnit,
	    genericVoid: genericVoid,
	    genericTuple: genericTuple,
	    genericList: genericList,
	    genericNonEmptyList: genericNonEmptyList,
	    genericMaybe: genericMaybe,
	    genericEither: genericEither,
	    genericIdentity: genericIdentity,
	    genericOrdering: genericOrdering,
	    genericNonEmpty: genericNonEmpty,
	    showGenericSpine: showGenericSpine,
	    eqGenericSpine: eqGenericSpine,
	    ordGenericSpine: ordGenericSpine,
	    eqGenericSignature: eqGenericSignature,
	    showGenericSignature: showGenericSignature
	};


/***/ }),
/* 133 */
/*!****************************************!*\
  !*** ./output/Data.Generic/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Data.Generic

	exports.zipAll = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      for (var i = 0; i < l; i++) {
	        if (!f(xs[i])(ys[i])) {
	          return false;
	        }
	      }
	      return true;
	    };
	  };
	};

	exports.zipCompare = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var o = f(xs[i])(ys[i]);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};


/***/ }),
/* 134 */
/*!************************************!*\
  !*** ./output/Data.Array/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 135);
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_ST = __webpack_require__(/*! ../Control.Monad.ST */ 92);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Array_ST = __webpack_require__(/*! ../Data.Array.ST */ 136);
	var Data_Array_ST_Iterator = __webpack_require__(/*! ../Data.Array.ST.Iterator */ 138);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
	var updateAtIndices = function (dictFoldable) {
	    return function (us) {
	        return function (xs) {
	            return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
	                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(Data_Tuple.uncurry(Data_Array_ST.pokeSTArray(res)))(us);
	            })(xs));
	        };
	    };
	};
	var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unsafeIndex = function (dictPartial) {
	    return $foreign.unsafeIndexImpl;
	};
	var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (xs) {
	        return new Data_Maybe.Just({
	            head: x,
	            tail: xs
	        });
	    };
	});
	var toUnfoldable = function (dictUnfoldable) {
	    return function (xs) {
	        var len = $foreign.length(xs);
	        var f = function (i) {
	            if (i < len) {
	                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Maybe.Nothing.value;
	            };
	            throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: " + [ i.constructor.name ]);
	        };
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
	    };
	};
	var takeEnd = function (n) {
	    return function (xs) {
	        return $foreign.drop($foreign.length(xs) - n | 0)(xs);
	    };
	};
	var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
	    return function (xs) {
	        return new Data_Maybe.Just(xs);
	    };
	});
	var sortBy = function (comp) {
	    return function (xs) {
	        var comp$prime = function (x) {
	            return function (y) {
	                var v = comp(x)(y);
	                if (v instanceof Data_Ordering.GT) {
	                    return 1;
	                };
	                if (v instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if (v instanceof Data_Ordering.LT) {
	                    return -1 | 0;
	                };
	                throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
	            };
	        };
	        return $foreign.sortImpl(comp$prime)(xs);
	    };
	};
	var sortWith = function (dictOrd) {
	    return function (f) {
	        return sortBy(Data_Ord.comparing(dictOrd)(f));
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var singleton = function (a) {
	    return [ a ];
	};
	var $$null = function (xs) {
	    return $foreign.length(xs) === 0;
	};
	var nubBy = function (eq) {
	    return function (xs) {
	        var v = uncons(xs);
	        if (v instanceof Data_Maybe.Just) {
	            return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
	                return !eq(v.value0.head)(y);
	            })(v.value0.tail)));
	        };
	        if (v instanceof Data_Maybe.Nothing) {
	            return [  ];
	        };
	        throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: " + [ v.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var modifyAtIndices = function (dictFoldable) {
	    return function (is) {
	        return function (f) {
	            return function (xs) {
	                return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
	                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(function (i) {
	                        return Data_Array_ST.modifySTArray(res)(i)(f);
	                    })(is);
	                })(xs));
	            };
	        };
	    };
	};
	var mapWithIndex = function (f) {
	    return function (xs) {
	        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
	    };
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
	        };
	    };
	};
	var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var init = function (xs) {
	    if ($$null(xs)) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (Data_Boolean.otherwise) {
	        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
	    };
	    throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
	};
	var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var last = function (xs) {
	    return index(xs)($foreign.length(xs) - 1 | 0);
	};
	var unsnoc = function (xs) {
	    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	        return function (v1) {
	            return {
	                init: v,
	                last: v1
	            };
	        };
	    })(init(xs)))(last(xs));
	};
	var modifyAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                return updateAt(i)(f(x))(xs);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	var span = function (p) {
	    return function (arr) {
	        var go = function ($copy_i) {
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(i) {
	                var v = index(arr)(i);
	                if (v instanceof Data_Maybe.Just) {
	                    var $64 = p(v.value0);
	                    if ($64) {
	                        $copy_i = i + 1 | 0;
	                        return;
	                    };
	                    $tco_done = true;
	                    return new Data_Maybe.Just(i);
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    $tco_done = true;
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.Array line 830, column 5 - line 832, column 25: " + [ v.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($copy_i);
	            };
	            return $tco_result;
	        };
	        var breakIndex = go(0);
	        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
	            return {
	                init: [  ],
	                rest: arr
	            };
	        };
	        if (breakIndex instanceof Data_Maybe.Just) {
	            return {
	                init: $foreign.slice(0)(breakIndex.value0)(arr),
	                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
	            };
	        };
	        if (breakIndex instanceof Data_Maybe.Nothing) {
	            return {
	                init: arr,
	                rest: [  ]
	            };
	        };
	        throw new Error("Failed pattern match at Data.Array line 817, column 3 - line 823, column 30: " + [ breakIndex.constructor.name ]);
	    };
	};
	var takeWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).init;
	    };
	};
	var unzip = function (xs) {
	    return Control_Monad_ST.pureST(function __do() {
	        var v = Data_Array_ST.emptySTArray();
	        var v1 = Data_Array_ST.emptySTArray();
	        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
	            return index(xs)(v2);
	        })();
	        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
	            return function __do() {
	                Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v)(v3.value0))();
	                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v1)(v3.value1))();
	            };
	        })();
	        var v3 = Data_Array_ST.unsafeFreeze(v)();
	        var v4 = Data_Array_ST.unsafeFreeze(v1)();
	        return new Data_Tuple.Tuple(v3, v4);
	    });
	};
	var head = function (xs) {
	    return index(xs)(0);
	};
	var groupBy = function (op) {
	    return function (xs) {
	        return Control_Monad_ST.pureST(function __do() {
	            var v = Data_Array_ST.emptySTArray();
	            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
	                return index(xs)(v1);
	            })();
	            Data_Array_ST_Iterator.iterate(v1)(function (x) {
	                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
	                    var v2 = Data_Array_ST.emptySTArray();
	                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
	                    var v3 = Data_Array_ST.unsafeFreeze(v2)();
	                    return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
	                });
	            })();
	            return Data_Array_ST.unsafeFreeze(v)();
	        });
	    };
	};
	var group = function (dictEq) {
	    return function (xs) {
	        return groupBy(Data_Eq.eq(dictEq))(xs);
	    };
	};
	var group$prime = function (dictOrd) {
	    return function ($93) {
	        return group(dictOrd.Eq0())(sort(dictOrd)($93));
	    };
	};
	var fromFoldable = function (dictFoldable) {
	    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
	};
	var foldRecM = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (array) {
	                var go = function (res) {
	                    return function (i) {
	                        if (i >= $foreign.length(array)) {
	                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
	                        };
	                        if (Data_Boolean.otherwise) {
	                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
	                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
	                                    a: v,
	                                    b: i + 1 | 0
	                                }));
	                            });
	                        };
	                        throw new Error("Failed pattern match at Data.Array line 1057, column 3 - line 1061, column 42: " + [ res.constructor.name, i.constructor.name ]);
	                    };
	                };
	                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
	            };
	        };
	    };
	};
	var foldM = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return $foreign["uncons'"](function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(a);
	            })(function (b) {
	                return function (bs) {
	                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
	                        return foldM(dictMonad)(f)(a$prime)(bs);
	                    });
	                };
	            });
	        };
	    };
	};
	var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var insertBy = function (cmp) {
	    return function (x) {
	        return function (ys) {
	            var i = Data_Maybe.maybe(0)(function (v) {
	                return v + 1 | 0;
	            })(findLastIndex(function (y) {
	                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
	            })(ys));
	            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var intersectBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return $foreign.filter(function (x) {
	                return Data_Maybe.isJust(findIndex(eq(x))(ys));
	            })(xs);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).rest;
	    };
	};
	var dropEnd = function (n) {
	    return function (xs) {
	        return $foreign.take($foreign.length(xs) - n | 0)(xs);
	    };
	};
	var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2.length === 0) {
	                return [  ];
	            };
	            return Data_Maybe.maybe(v2)(function (i) {
	                return Data_Maybe.fromJust()(deleteAt(i)(v2));
	            })(findIndex(v(v1))(v2));
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
	var mapMaybe = function (f) {
	    return concatMap(function ($94) {
	        return Data_Maybe.maybe([  ])(singleton)(f($94));
	    });
	};
	var filterA = function (dictApplicative) {
	    return function (p) {
	        return function ($95) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
	                if (v.value1) {
	                    return new Data_Maybe.Just(v.value0);
	                };
	                return Data_Maybe.Nothing.value;
	            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
	                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
	            })($95));
	        };
	    };
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                var v = f(x);
	                if (v instanceof Data_Maybe.Nothing) {
	                    return deleteAt(i)(xs);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return updateAt(i)(v.value0)(xs);
	                };
	                throw new Error("Failed pattern match at Data.Array line 540, column 10 - line 542, column 32: " + [ v.constructor.name ]);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	module.exports = {
	    fromFoldable: fromFoldable,
	    toUnfoldable: toUnfoldable,
	    singleton: singleton,
	    some: some,
	    many: many,
	    "null": $$null,
	    insert: insert,
	    insertBy: insertBy,
	    head: head,
	    last: last,
	    tail: tail,
	    init: init,
	    uncons: uncons,
	    unsnoc: unsnoc,
	    index: index,
	    elemIndex: elemIndex,
	    elemLastIndex: elemLastIndex,
	    findIndex: findIndex,
	    findLastIndex: findLastIndex,
	    insertAt: insertAt,
	    deleteAt: deleteAt,
	    updateAt: updateAt,
	    updateAtIndices: updateAtIndices,
	    modifyAt: modifyAt,
	    modifyAtIndices: modifyAtIndices,
	    alterAt: alterAt,
	    concatMap: concatMap,
	    filterA: filterA,
	    mapMaybe: mapMaybe,
	    catMaybes: catMaybes,
	    mapWithIndex: mapWithIndex,
	    sort: sort,
	    sortBy: sortBy,
	    sortWith: sortWith,
	    takeEnd: takeEnd,
	    takeWhile: takeWhile,
	    dropEnd: dropEnd,
	    dropWhile: dropWhile,
	    span: span,
	    group: group,
	    "group'": group$prime,
	    groupBy: groupBy,
	    nub: nub,
	    nubBy: nubBy,
	    union: union,
	    unionBy: unionBy,
	    "delete": $$delete,
	    deleteBy: deleteBy,
	    difference: difference,
	    intersect: intersect,
	    intersectBy: intersectBy,
	    zipWithA: zipWithA,
	    zip: zip,
	    unzip: unzip,
	    foldM: foldM,
	    foldRecM: foldRecM,
	    unsafeIndex: unsafeIndex,
	    range: $foreign.range,
	    replicate: $foreign.replicate,
	    length: $foreign.length,
	    cons: $foreign.cons,
	    snoc: $foreign.snoc,
	    reverse: $foreign.reverse,
	    concat: $foreign.concat,
	    filter: $foreign.filter,
	    partition: $foreign.partition,
	    slice: $foreign.slice,
	    take: $foreign.take,
	    drop: $foreign.drop,
	    zipWith: $foreign.zipWith
	};


/***/ }),
/* 135 */
/*!**************************************!*\
  !*** ./output/Data.Array/foreign.js ***!
  \**************************************/
/***/ (function(module, exports) {

	"use strict";

	//------------------------------------------------------------------------------
	// Array creation --------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.range = function (start) {
	  return function (end) {
	    var step = start > end ? -1 : 1;
	    var result = new Array(step * (end - start) + 1);
	    var i = start, n = 0;
	    while (i !== end) {
	      result[n++] = i;
	      i += step;
	    }
	    result[n] = i;
	    return result;
	  };
	};

	var replicate = function (count) {
	  return function (value) {
	    if (count < 1) {
	      return [];
	    }
	    var result = new Array(count);
	    return result.fill(value);
	  };
	};

	var replicatePolyfill = function (count) {
	  return function (value) {
	    var result = [];
	    var n = 0;
	    for (var i = 0; i < count; i++) {
	      result[n++] = value;
	    }
	    return result;
	  };
	};

	// In browsers that have Array.prototype.fill we use it, as it's faster.
	exports.replicate = typeof Array.prototype.fill === "function" ?
	    replicate :
	    replicatePolyfill;

	exports.fromFoldableImpl = (function () {
	  function Cons(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  }
	  var emptyList = {};

	  function curryCons(head) {
	    return function (tail) {
	      return new Cons(head, tail);
	    };
	  }

	  function listToArray(list) {
	    var result = [];
	    var count = 0;
	    var xs = list;
	    while (xs !== emptyList) {
	      result[count++] = xs.head;
	      xs = xs.tail;
	    }
	    return result;
	  }

	  return function (foldr) {
	    return function (xs) {
	      return listToArray(foldr(curryCons)(emptyList)(xs));
	    };
	  };
	})();

	//------------------------------------------------------------------------------
	// Array size ------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.length = function (xs) {
	  return xs.length;
	};

	//------------------------------------------------------------------------------
	// Extending arrays ------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.cons = function (e) {
	  return function (l) {
	    return [e].concat(l);
	  };
	};

	exports.snoc = function (l) {
	  return function (e) {
	    var l1 = l.slice();
	    l1.push(e);
	    return l1;
	  };
	};

	//------------------------------------------------------------------------------
	// Non-indexed reads -----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports["uncons'"] = function (empty) {
	  return function (next) {
	    return function (xs) {
	      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Indexed operations ----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.indexImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
	      };
	    };
	  };
	};

	exports.findIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = 0, l = xs.length; i < l; i++) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports.findLastIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = xs.length - 1; i >= 0; i--) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports._insertAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i > l.length) return nothing;
	          var l1 = l.slice();
	          l1.splice(i, 0, a);
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	exports._deleteAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (l) {
	        if (i < 0 || i >= l.length) return nothing;
	        var l1 = l.slice();
	        l1.splice(i, 1);
	        return just(l1);
	      };
	    };
	  };
	};

	exports._updateAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i >= l.length) return nothing;
	          var l1 = l.slice();
	          l1[i] = a;
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Transformations -------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.reverse = function (l) {
	  return l.slice().reverse();
	};

	exports.concat = function (xss) {
	  if (xss.length <= 10000) {
	    // This method is faster, but it crashes on big arrays.
	    // So we use it when can and fallback to simple variant otherwise.
	    return Array.prototype.concat.apply([], xss);
	  }

	  var result = [];
	  for (var i = 0, l = xss.length; i < l; i++) {
	    var xs = xss[i];
	    for (var j = 0, m = xs.length; j < m; j++) {
	      result.push(xs[j]);
	    }
	  }
	  return result;
	};

	exports.filter = function (f) {
	  return function (xs) {
	    return xs.filter(f);
	  };
	};

	exports.partition = function (f) {
	  return function (xs) {
	    var yes = [];
	    var no  = [];
	    for (var i = 0; i < xs.length; i++) {
	      var x = xs[i];
	      if (f(x))
	        yes.push(x);
	      else
	        no.push(x);
	    }
	    return { yes: yes, no: no };
	  };
	};

	//------------------------------------------------------------------------------
	// Sorting ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.sortImpl = function (f) {
	  return function (l) {
	    return l.slice().sort(function (x, y) {
	      return f(x)(y);
	    });
	  };
	};

	//------------------------------------------------------------------------------
	// Subarrays -------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.slice = function (s) {
	  return function (e) {
	    return function (l) {
	      return l.slice(s, e);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (l) {
	    return n < 1 ? [] : l.slice(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (l) {
	    return n < 1 ? l : l.slice(n);
	  };
	};

	//------------------------------------------------------------------------------
	// Zipping ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.zipWith = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      var result = new Array(l);
	      for (var i = 0; i < l; i++) {
	        result[i] = f(xs[i])(ys[i]);
	      }
	      return result;
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Partial ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.unsafeIndexImpl = function (xs) {
	  return function (n) {
	    return xs[n];
	  };
	};


/***/ }),
/* 136 */
/*!***************************************!*\
  !*** ./output/Data.Array.ST/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 137);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_ST = __webpack_require__(/*! ../Control.Monad.ST */ 92);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var unsafeThaw = function ($7) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($7);
	};
	var unsafeFreeze = function ($8) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($8);
	};
	var thaw = $foreign.copyImpl;
	var withArray = function (f) {
	    return function (xs) {
	        return function __do() {
	            var v = thaw(xs)();
	            var v1 = f(v)();
	            return unsafeFreeze(v)();
	        };
	    };
	};
	var pushSTArray = function (arr) {
	    return function (a) {
	        return $foreign.pushAllSTArray(arr)([ a ]);
	    };
	};
	var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var modifySTArray = function (xs) {
	    return function (i) {
	        return function (f) {
	            return function __do() {
	                var v = peekSTArray(xs)(i)();
	                if (v instanceof Data_Maybe.Just) {
	                    return $foreign.pokeSTArray(xs)(i)(f(v.value0))();
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    return false;
	                };
	                throw new Error("Failed pattern match at Data.Array.ST line 127, column 3 - line 129, column 26: " + [ v.constructor.name ]);
	            };
	        };
	    };
	};
	var freeze = $foreign.copyImpl;
	module.exports = {
	    withArray: withArray,
	    peekSTArray: peekSTArray,
	    pushSTArray: pushSTArray,
	    modifySTArray: modifySTArray,
	    freeze: freeze,
	    thaw: thaw,
	    unsafeFreeze: unsafeFreeze,
	    unsafeThaw: unsafeThaw,
	    runSTArray: $foreign.runSTArray,
	    emptySTArray: $foreign.emptySTArray,
	    pokeSTArray: $foreign.pokeSTArray,
	    pushAllSTArray: $foreign.pushAllSTArray,
	    spliceSTArray: $foreign.spliceSTArray,
	    toAssocArray: $foreign.toAssocArray
	};


/***/ }),
/* 137 */
/*!*****************************************!*\
  !*** ./output/Data.Array.ST/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.runSTArray = function (f) {
	  return f;
	};

	exports.emptySTArray = function () {
	  return [];
	};

	exports.peekSTArrayImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return function () {
	          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
	        };
	      };
	    };
	  };
	};

	exports.pokeSTArray = function (xs) {
	  return function (i) {
	    return function (a) {
	      return function () {
	        var ret = i >= 0 && i < xs.length;
	        if (ret) xs[i] = a;
	        return ret;
	      };
	    };
	  };
	};

	exports.pushAllSTArray = function (xs) {
	  return function (as) {
	    return function () {
	      return xs.push.apply(xs, as);
	    };
	  };
	};

	exports.spliceSTArray = function (xs) {
	  return function (i) {
	    return function (howMany) {
	      return function (bs) {
	        return function () {
	          return xs.splice.apply(xs, [i, howMany].concat(bs));
	        };
	      };
	    };
	  };
	};

	exports.copyImpl = function (xs) {
	  return function () {
	    return xs.slice();
	  };
	};

	exports.toAssocArray = function (xs) {
	  return function () {
	    var n = xs.length;
	    var as = new Array(n);
	    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
	    return as;
	  };
	};


/***/ }),
/* 138 */
/*!************************************************!*\
  !*** ./output/Data.Array.ST.Iterator/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_ST = __webpack_require__(/*! ../Control.Monad.ST */ 92);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Array_ST = __webpack_require__(/*! ../Data.Array.ST */ 136);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Iterator = (function () {
	    function Iterator(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Iterator.create = function (value0) {
	        return function (value1) {
	            return new Iterator(value0, value1);
	        };
	    };
	    return Iterator;
	})();
	var peek = function (v) {
	    return function __do() {
	        var v1 = Control_Monad_ST.readSTRef(v.value1)();
	        return v.value0(v1);
	    };
	};
	var next = function (v) {
	    return function __do() {
	        var v1 = Control_Monad_ST.readSTRef(v.value1)();
	        var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
	            return v2 + 1 | 0;
	        })();
	        return v.value0(v1);
	    };
	};
	var pushWhile = function (p) {
	    return function (iter) {
	        return function (array) {
	            return function __do() {
	                var v = Control_Monad_ST.newSTRef(false)();
	                while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
	                    (function __do() {
	                        var v1 = peek(iter)();
	                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
	                            var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
	                            return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
	                        };
	                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
	                    })();
	                };
	                return {};
	            };
	        };
	    };
	};
	var pushAll = pushWhile(Data_Function["const"](true));
	var iterator = function (f) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
	};
	var iterate = function (iter) {
	    return function (f) {
	        return function __do() {
	            var v = Control_Monad_ST.newSTRef(false)();
	            while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
	                (function __do() {
	                    var v1 = next(iter)();
	                    if (v1 instanceof Data_Maybe.Just) {
	                        return f(v1.value0)();
	                    };
	                    if (v1 instanceof Data_Maybe.Nothing) {
	                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
	                    };
	                    throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
	                })();
	            };
	            return {};
	        };
	    };
	};
	var exhausted = function ($27) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(peek($27));
	};
	module.exports = {
	    iterator: iterator,
	    iterate: iterate,
	    next: next,
	    peek: peek,
	    exhausted: exhausted,
	    pushWhile: pushWhile,
	    pushAll: pushAll
	};


/***/ }),
/* 139 */
/*!***************************************!*\
  !*** ./output/Data.NonEmpty/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_FoldableWithIndex = __webpack_require__(/*! ../Data.FoldableWithIndex */ 140);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_FunctorWithIndex = __webpack_require__(/*! ../Data.FunctorWithIndex */ 141);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semigroup_Foldable = __webpack_require__(/*! ../Data.Semigroup.Foldable */ 143);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_TraversableWithIndex = __webpack_require__(/*! ../Data.TraversableWithIndex */ 144);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Data_Unfoldable1 = __webpack_require__(/*! ../Data.Unfoldable1 */ 147);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var NonEmpty = (function () {
	    function NonEmpty(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    NonEmpty.create = function (value0) {
	        return function (value1) {
	            return new NonEmpty(value0, value1);
	        };
	    };
	    return NonEmpty;
	})();
	var unfoldable1NonEmpty = function (dictUnfoldable) {
	    return new Data_Unfoldable1.Unfoldable1(function (f) {
	        return function (b) {
	            return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
	        };
	    });
	};
	var tail = function (v) {
	    return v.value1;
	};
	var singleton = function (dictPlus) {
	    return function (a) {
	        return new NonEmpty(a, Control_Plus.empty(dictPlus));
	    };
	};
	var showNonEmpty = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var oneOf = function (dictAlternative) {
	    return function (v) {
	        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
	    };
	};
	var head = function (v) {
	    return v.value0;
	};
	var functorNonEmpty = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
	        };
	    });
	};
	var functorWithIndex = function (dictFunctorWithIndex) {
	    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
	        return functorNonEmpty(dictFunctorWithIndex.Functor0());
	    }, function (f) {
	        return function (v) {
	            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($140) {
	                return f(Data_Maybe.Just.create($140));
	            })(v.value1));
	        };
	    });
	};
	var fromNonEmpty = function (f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var foldl1 = function (dictFoldable) {
	    return function (f) {
	        return function (v) {
	            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
	        };
	    };
	};
	var foldableNonEmpty = function (dictFoldable) {
	    return new Data_Foldable.Foldable(function (dictMonoid) {
	        return function (f) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
	            };
	        };
	    });
	};
	var foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {
	    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
	        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
	    }, function (dictMonoid) {
	        return function (f) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($141) {
	                    return f(Data_Maybe.Just.create($141));
	                })(v.value1));
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($142) {
	                    return f(Data_Maybe.Just.create($142));
	                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($143) {
	                    return f(Data_Maybe.Just.create($143));
	                })(b)(v.value1));
	            };
	        };
	    });
	};
	var traversableNonEmpty = function (dictTraversable) {
	    return new Data_Traversable.Traversable(function () {
	        return foldableNonEmpty(dictTraversable.Foldable1());
	    }, function () {
	        return functorNonEmpty(dictTraversable.Functor0());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
	        };
	    }, function (dictApplicative) {
	        return function (f) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
	            };
	        };
	    });
	};
	var traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {
	    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
	        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
	    }, function () {
	        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
	    }, function () {
	        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
	    }, function (dictApplicative) {
	        return function (f) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($144) {
	                    return f(Data_Maybe.Just.create($144));
	                })(v.value1));
	            };
	        };
	    });
	};
	var foldable1NonEmpty = function (dictFoldable) {
	    return new Data_Semigroup_Foldable.Foldable1(function () {
	        return foldableNonEmpty(dictFoldable);
	    }, function (dictSemigroup) {
	        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    }, function (dictSemigroup) {
	        return function (f) {
	            return function (v) {
	                return Data_Foldable.foldl(dictFoldable)(function (s) {
	                    return function (a1) {
	                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
	                    };
	                })(f(v.value0))(v.value1);
	            };
	        };
	    });
	};
	var foldMap1 = function (dictSemigroup) {
	    return function (dictFoldable) {
	        return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
	    };
	};
	var fold1 = function (dictSemigroup) {
	    return function (dictFoldable) {
	        return Data_Semigroup_Foldable.fold1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
	    };
	};
	var eq1NonEmpty = function (dictEq1) {
	    return new Data_Eq.Eq1(function (dictEq) {
	        return function (v) {
	            return function (v1) {
	                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq1)(dictEq)(v.value1)(v1.value1);
	            };
	        };
	    });
	};
	var eqNonEmpty = function (dictEq1) {
	    return function (dictEq) {
	        return new Data_Eq.Eq(Data_Eq.eq1(eq1NonEmpty(dictEq1))(dictEq));
	    };
	};
	var ord1NonEmpty = function (dictOrd1) {
	    return new Data_Ord.Ord1(function () {
	        return eq1NonEmpty(dictOrd1.Eq10());
	    }, function (dictOrd) {
	        return function (v) {
	            return function (v1) {
	                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                if (v2 instanceof Data_Ordering.EQ) {
	                    return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value1)(v1.value1);
	                };
	                return v2;
	            };
	        };
	    });
	};
	var ordNonEmpty = function (dictOrd1) {
	    return function (dictOrd) {
	        return new Data_Ord.Ord(function () {
	            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
	        }, Data_Ord.compare1(ord1NonEmpty(dictOrd1))(dictOrd));
	    };
	};
	module.exports = {
	    NonEmpty: NonEmpty,
	    singleton: singleton,
	    foldl1: foldl1,
	    foldMap1: foldMap1,
	    fold1: fold1,
	    fromNonEmpty: fromNonEmpty,
	    oneOf: oneOf,
	    head: head,
	    tail: tail,
	    showNonEmpty: showNonEmpty,
	    eqNonEmpty: eqNonEmpty,
	    eq1NonEmpty: eq1NonEmpty,
	    ordNonEmpty: ordNonEmpty,
	    ord1NonEmpty: ord1NonEmpty,
	    functorNonEmpty: functorNonEmpty,
	    functorWithIndex: functorWithIndex,
	    foldableNonEmpty: foldableNonEmpty,
	    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
	    traversableNonEmpty: traversableNonEmpty,
	    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
	    foldable1NonEmpty: foldable1NonEmpty,
	    unfoldable1NonEmpty: unfoldable1NonEmpty
	};


/***/ }),
/* 140 */
/*!************************************************!*\
  !*** ./output/Data.FoldableWithIndex/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_FunctorWithIndex = __webpack_require__(/*! ../Data.FunctorWithIndex */ 141);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Endo = __webpack_require__(/*! ../Data.Monoid.Endo */ 76);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Tuple = (function () {
	    function Tuple(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tuple.create = function (value0) {
	        return function (value1) {
	            return new Tuple(value0, value1);
	        };
	    };
	    return Tuple;
	})();
	var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
	    this.Foldable0 = Foldable0;
	    this.foldMapWithIndex = foldMapWithIndex;
	    this.foldlWithIndex = foldlWithIndex;
	    this.foldrWithIndex = foldrWithIndex;
	};
	var foldrWithIndex = function (dict) {
	    return dict.foldrWithIndex;
	};
	var traverseWithIndex_ = function (dictApplicative) {
	    return function (dictFoldableWithIndex) {
	        return function (f) {
	            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
	                return function ($41) {
	                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($41));
	                };
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var forWithIndex_ = function (dictApplicative) {
	    return function (dictFoldableWithIndex) {
	        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
	    };
	};
	var foldlWithIndex = function (dict) {
	    return dict.foldlWithIndex;
	};
	var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
	});
	var foldableWithIndexMaybe = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableMaybe;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
	});
	var foldableWithIndexLast = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableLast;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
	});
	var foldableWithIndexFirst = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableFirst;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
	});
	var foldableWithIndexDual = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableDual;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
	});
	var foldableWithIndexDisj = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableDisj;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
	});
	var foldableWithIndexConj = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableConj;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
	});
	var foldableWithIndexAdditive = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableAdditive;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
	    };
	}, function (f) {
	    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
	}, function (f) {
	    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
	});
	var foldWithIndexM = function (dictFoldableWithIndex) {
	    return function (dictMonad) {
	        return function (f) {
	            return function (a0) {
	                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
	                    return function (ma) {
	                        return function (b) {
	                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
	                        };
	                    };
	                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
	            };
	        };
	    };
	};
	var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
	    return function (dictMonoid) {
	        return function (f) {
	            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
	                return function (x) {
	                    return function (acc) {
	                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
	                    };
	                };
	            })(Data_Monoid.mempty(dictMonoid));
	        };
	    };
	};
	var foldableWithIndexArray = new FoldableWithIndex(function () {
	    return Data_Foldable.foldableArray;
	}, function (dictMonoid) {
	    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
	}, function (f) {
	    return function (z) {
	        return function ($42) {
	            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
	                return function (v) {
	                    return f(v.value0)(y)(v.value1);
	                };
	            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($42));
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function ($43) {
	            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
	                return function (y) {
	                    return f(v.value0)(v.value1)(y);
	                };
	            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($43));
	        };
	    };
	});
	var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
	    return function (dictMonoid) {
	        return function (f) {
	            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
	                return function (acc) {
	                    return function (x) {
	                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
	                    };
	                };
	            })(Data_Monoid.mempty(dictMonoid));
	        };
	    };
	};
	var foldMapWithIndex = function (dict) {
	    return dict.foldMapWithIndex;
	};
	var foldlWithIndexDefault = function (dictFoldableWithIndex) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (i) {
	                    return function ($44) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($44)));
	                    };
	                })(xs)))(u);
	            };
	        };
	    };
	};
	var foldrWithIndexDefault = function (dictFoldableWithIndex) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(function (i) {
	                    return function ($45) {
	                        return Data_Monoid_Endo.Endo(c(i)($45));
	                    };
	                })(xs))(u);
	            };
	        };
	    };
	};
	var surroundMapWithIndex = function (dictFoldableWithIndex) {
	    return function (dictSemigroup) {
	        return function (d) {
	            return function (t) {
	                return function (f) {
	                    var joined = function (i) {
	                        return function (a) {
	                            return function (m) {
	                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
	                            };
	                        };
	                    };
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
	                };
	            };
	        };
	    };
	};
	var findWithIndex = function (dictFoldableWithIndex) {
	    return function (p) {
	        var go = function (i) {
	            return function (v) {
	                return function (v1) {
	                    if (v instanceof Data_Maybe.Nothing && p(i)(v1)) {
	                        return new Data_Maybe.Just(v1);
	                    };
	                    return v;
	                };
	            };
	        };
	        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var anyWithIndex = function (dictFoldableWithIndex) {
	    return function (dictHeytingAlgebra) {
	        return function (t) {
	            return function ($46) {
	                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
	                    return function ($47) {
	                        return Data_Monoid_Disj.Disj(t(i)($47));
	                    };
	                })($46));
	            };
	        };
	    };
	};
	var allWithIndex = function (dictFoldableWithIndex) {
	    return function (dictHeytingAlgebra) {
	        return function (t) {
	            return function ($48) {
	                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
	                    return function ($49) {
	                        return Data_Monoid_Conj.Conj(t(i)($49));
	                    };
	                })($48));
	            };
	        };
	    };
	};
	module.exports = {
	    FoldableWithIndex: FoldableWithIndex,
	    foldrWithIndex: foldrWithIndex,
	    foldlWithIndex: foldlWithIndex,
	    foldMapWithIndex: foldMapWithIndex,
	    foldrWithIndexDefault: foldrWithIndexDefault,
	    foldlWithIndexDefault: foldlWithIndexDefault,
	    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
	    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
	    foldWithIndexM: foldWithIndexM,
	    traverseWithIndex_: traverseWithIndex_,
	    forWithIndex_: forWithIndex_,
	    surroundMapWithIndex: surroundMapWithIndex,
	    allWithIndex: allWithIndex,
	    anyWithIndex: anyWithIndex,
	    findWithIndex: findWithIndex,
	    foldableWithIndexArray: foldableWithIndexArray,
	    foldableWithIndexMaybe: foldableWithIndexMaybe,
	    foldableWithIndexFirst: foldableWithIndexFirst,
	    foldableWithIndexLast: foldableWithIndexLast,
	    foldableWithIndexAdditive: foldableWithIndexAdditive,
	    foldableWithIndexDual: foldableWithIndexDual,
	    foldableWithIndexDisj: foldableWithIndexDisj,
	    foldableWithIndexConj: foldableWithIndexConj,
	    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
	};


/***/ }),
/* 141 */
/*!***********************************************!*\
  !*** ./output/Data.FunctorWithIndex/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 142);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var FunctorWithIndex = function (Functor0, mapWithIndex) {
	    this.Functor0 = Functor0;
	    this.mapWithIndex = mapWithIndex;
	};
	var mapWithIndex = function (dict) {
	    return dict.mapWithIndex;
	};
	var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
	    return Data_Monoid_Multiplicative.functorMultiplicative;
	}, function (f) {
	    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
	});
	var functorWithIndexMaybe = new FunctorWithIndex(function () {
	    return Data_Maybe.functorMaybe;
	}, function (f) {
	    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
	});
	var functorWithIndexLast = new FunctorWithIndex(function () {
	    return Data_Maybe_Last.functorLast;
	}, function (f) {
	    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
	});
	var functorWithIndexFirst = new FunctorWithIndex(function () {
	    return Data_Maybe_First.functorFirst;
	}, function (f) {
	    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
	});
	var functorWithIndexDual = new FunctorWithIndex(function () {
	    return Data_Monoid_Dual.functorDual;
	}, function (f) {
	    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
	});
	var functorWithIndexDisj = new FunctorWithIndex(function () {
	    return Data_Monoid_Disj.functorDisj;
	}, function (f) {
	    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
	});
	var functorWithIndexConj = new FunctorWithIndex(function () {
	    return Data_Monoid_Conj.functorConj;
	}, function (f) {
	    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
	});
	var functorWithIndexArray = new FunctorWithIndex(function () {
	    return Data_Functor.functorArray;
	}, $foreign.mapWithIndexArray);
	var functorWithIndexAdditive = new FunctorWithIndex(function () {
	    return Data_Monoid_Additive.functorAdditive;
	}, function (f) {
	    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
	});
	module.exports = {
	    FunctorWithIndex: FunctorWithIndex,
	    mapWithIndex: mapWithIndex,
	    functorWithIndexArray: functorWithIndexArray,
	    functorWithIndexMaybe: functorWithIndexMaybe,
	    functorWithIndexFirst: functorWithIndexFirst,
	    functorWithIndexLast: functorWithIndexLast,
	    functorWithIndexAdditive: functorWithIndexAdditive,
	    functorWithIndexDual: functorWithIndexDual,
	    functorWithIndexConj: functorWithIndexConj,
	    functorWithIndexDisj: functorWithIndexDisj,
	    functorWithIndexMultiplicative: functorWithIndexMultiplicative
	};


/***/ }),
/* 142 */
/*!*************************************************!*\
  !*** ./output/Data.FunctorWithIndex/foreign.js ***!
  \*************************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.mapWithIndexArray = function (f) {
	  return function (xs) {
	    var l = xs.length;
	    var result = Array(l);
	    for (var i = 0; i < l; i++) {
	      result[i] = f(i)(xs[i]);
	    }
	    return result;
	  };
	};


/***/ }),
/* 143 */
/*!*************************************************!*\
  !*** ./output/Data.Semigroup.Foldable/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Act = function (x) {
	    return x;
	};
	var Foldable1 = function (Foldable0, fold1, foldMap1) {
	    this.Foldable0 = Foldable0;
	    this.fold1 = fold1;
	    this.foldMap1 = foldMap1;
	};
	var semigroupAct = function (dictApply) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Control_Apply.applySecond(dictApply)(v)(v1);
	        };
	    });
	};
	var getAct = function (v) {
	    return v;
	};
	var foldMap1 = function (dict) {
	    return dict.foldMap1;
	};
	var traverse1_ = function (dictFoldable1) {
	    return function (dictApply) {
	        return function (f) {
	            return function (t) {
	                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($28) {
	                    return Act(f($28));
	                })(t)));
	            };
	        };
	    };
	};
	var for1_ = function (dictFoldable1) {
	    return function (dictApply) {
	        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
	    };
	};
	var sequence1_ = function (dictFoldable1) {
	    return function (dictApply) {
	        return traverse1_(dictFoldable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var fold1Default = function (dictFoldable1) {
	    return function (dictSemigroup) {
	        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var foldableDual = new Foldable1(function () {
	    return Data_Foldable.foldableDual;
	}, function (dictSemigroup) {
	    return fold1Default(foldableDual)(dictSemigroup);
	}, function (dictSemigroup) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	});
	var foldableMultiplicative = new Foldable1(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function (dictSemigroup) {
	    return fold1Default(foldableMultiplicative)(dictSemigroup);
	}, function (dictSemigroup) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	});
	var fold1 = function (dict) {
	    return dict.fold1;
	};
	var foldMap1Default = function (dictFoldable1) {
	    return function (dictFunctor) {
	        return function (dictSemigroup) {
	            return function (f) {
	                return function ($29) {
	                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($29));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Foldable1: Foldable1,
	    foldMap1: foldMap1,
	    fold1: fold1,
	    traverse1_: traverse1_,
	    for1_: for1_,
	    sequence1_: sequence1_,
	    foldMap1Default: foldMap1Default,
	    fold1Default: fold1Default,
	    foldableDual: foldableDual,
	    foldableMultiplicative: foldableMultiplicative
	};


/***/ }),
/* 144 */
/*!***************************************************!*\
  !*** ./output/Data.TraversableWithIndex/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_FoldableWithIndex = __webpack_require__(/*! ../Data.FoldableWithIndex */ 140);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_FunctorWithIndex = __webpack_require__(/*! ../Data.FunctorWithIndex */ 141);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Traversable_Accum = __webpack_require__(/*! ../Data.Traversable.Accum */ 81);
	var Data_Traversable_Accum_Internal = __webpack_require__(/*! ../Data.Traversable.Accum.Internal */ 82);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
	    this.FoldableWithIndex1 = FoldableWithIndex1;
	    this.FunctorWithIndex0 = FunctorWithIndex0;
	    this.Traversable2 = Traversable2;
	    this.traverseWithIndex = traverseWithIndex;
	};
	var traverseWithIndexDefault = function (dictTraversableWithIndex) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function ($17) {
	                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($17));
	            };
	        };
	    };
	};
	var traverseWithIndex = function (dict) {
	    return dict.traverseWithIndex;
	};
	var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
	}, function () {
	    return Data_Traversable.traversableMultiplicative;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexMaybe = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexMaybe;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexMaybe;
	}, function () {
	    return Data_Traversable.traversableMaybe;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexLast = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexLast;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexLast;
	}, function () {
	    return Data_Traversable.traversableLast;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexFirst = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexFirst;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexFirst;
	}, function () {
	    return Data_Traversable.traversableFirst;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexDual = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexDual;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexDual;
	}, function () {
	    return Data_Traversable.traversableDual;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexDisj = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexDisj;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexDisj;
	}, function () {
	    return Data_Traversable.traversableDisj;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexConj = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexConj;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexConj;
	}, function () {
	    return Data_Traversable.traversableConj;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var traversableWithIndexArray = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexArray;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexArray;
	}, function () {
	    return Data_Traversable.traversableArray;
	}, function (dictApplicative) {
	    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
	});
	var traversableWithIndexAdditive = new TraversableWithIndex(function () {
	    return Data_FoldableWithIndex.foldableWithIndexAdditive;
	}, function () {
	    return Data_FunctorWithIndex.functorWithIndexAdditive;
	}, function () {
	    return Data_Traversable.traversableAdditive;
	}, function (dictApplicative) {
	    return function (f) {
	        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
	    };
	});
	var mapAccumRWithIndex = function (dictTraversableWithIndex) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
	                    return function (a) {
	                        return function (s) {
	                            return f(i)(s)(a);
	                        };
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanrWithIndex = function (dictTraversableWithIndex) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
	                    return function (b) {
	                        return function (a) {
	                            var b$prime = f(i)(a)(b);
	                            return {
	                                accum: b$prime,
	                                value: b$prime
	                            };
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var mapAccumLWithIndex = function (dictTraversableWithIndex) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
	                    return function (a) {
	                        return function (s) {
	                            return f(i)(s)(a);
	                        };
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanlWithIndex = function (dictTraversableWithIndex) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
	                    return function (b) {
	                        return function (a) {
	                            var b$prime = f(i)(b)(a);
	                            return {
	                                accum: b$prime,
	                                value: b$prime
	                            };
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var forWithIndex = function (dictApplicative) {
	    return function (dictTraversableWithIndex) {
	        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
	    };
	};
	module.exports = {
	    TraversableWithIndex: TraversableWithIndex,
	    traverseWithIndex: traverseWithIndex,
	    traverseWithIndexDefault: traverseWithIndexDefault,
	    forWithIndex: forWithIndex,
	    scanlWithIndex: scanlWithIndex,
	    mapAccumLWithIndex: mapAccumLWithIndex,
	    scanrWithIndex: scanrWithIndex,
	    mapAccumRWithIndex: mapAccumRWithIndex,
	    traversableWithIndexArray: traversableWithIndexArray,
	    traversableWithIndexMaybe: traversableWithIndexMaybe,
	    traversableWithIndexFirst: traversableWithIndexFirst,
	    traversableWithIndexLast: traversableWithIndexLast,
	    traversableWithIndexAdditive: traversableWithIndexAdditive,
	    traversableWithIndexDual: traversableWithIndexDual,
	    traversableWithIndexConj: traversableWithIndexConj,
	    traversableWithIndexDisj: traversableWithIndexDisj,
	    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
	};


/***/ }),
/* 145 */
/*!*****************************************!*\
  !*** ./output/Data.Unfoldable/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 146);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unfoldable = function (unfoldr) {
	    this.unfoldr = unfoldr;
	};
	var unfoldr = function (dict) {
	    return dict.unfoldr;
	};
	var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
	var replicate = function (dictUnfoldable) {
	    return function (n) {
	        return function (v) {
	            var step = function (i) {
	                var $9 = i <= 0;
	                if ($9) {
	                    return Data_Maybe.Nothing.value;
	                };
	                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
	            };
	            return unfoldr(dictUnfoldable)(step)(n);
	        };
	    };
	};
	var replicateA = function (dictApplicative) {
	    return function (dictUnfoldable) {
	        return function (dictTraversable) {
	            return function (n) {
	                return function (m) {
	                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
	                };
	            };
	        };
	    };
	};
	var singleton = function (dictUnfoldable) {
	    return replicate(dictUnfoldable)(1);
	};
	var range = function (dictUnfoldable) {
	    return function (start) {
	        return function (end) {
	            return unfoldr(dictUnfoldable)(function (i) {
	                var $10 = i <= end;
	                if ($10) {
	                    return new Data_Maybe.Just(Data_Tuple.Tuple.create(i)(i + 1 | 0));
	                };
	                return Data_Maybe.Nothing.value;
	            })(start);
	        };
	    };
	};
	var none = function (dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
	};
	var fromMaybe = function (dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(function (b) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
	    });
	};
	module.exports = {
	    Unfoldable: Unfoldable,
	    unfoldr: unfoldr,
	    replicate: replicate,
	    replicateA: replicateA,
	    none: none,
	    singleton: singleton,
	    range: range,
	    fromMaybe: fromMaybe,
	    unfoldableArray: unfoldableArray
	};


/***/ }),
/* 146 */
/*!*******************************************!*\
  !*** ./output/Data.Unfoldable/foreign.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.unfoldrArrayImpl = function (isNothing) {
	  return function (fromJust) {
	    return function (fst) {
	      return function (snd) {
	        return function (f) {
	          return function (b) {
	            var result = [];
	            var value = b;
	            while (true) { // eslint-disable-line no-constant-condition
	              var maybe = f(value);
	              if (isNothing(maybe)) return result;
	              var tuple = fromJust(maybe);
	              result.push(fst(tuple));
	              value = snd(tuple);
	            }
	          };
	        };
	      };
	    };
	  };
	};


/***/ }),
/* 147 */
/*!******************************************!*\
  !*** ./output/Data.Unfoldable1/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup_Traversable = __webpack_require__(/*! ../Data.Semigroup.Traversable */ 148);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unfoldable1 = function (unfoldr1) {
	    this.unfoldr1 = unfoldr1;
	};
	var unfoldr1 = function (dict) {
	    return dict.unfoldr1;
	};
	var replicate1 = function (dictUnfoldable1) {
	    return function (n) {
	        return function (v) {
	            var step = function (i) {
	                if (i <= 0) {
	                    return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
	                };
	                throw new Error("Failed pattern match at Data.Unfoldable1 line 33, column 5 - line 33, column 39: " + [ i.constructor.name ]);
	            };
	            return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
	        };
	    };
	};
	var replicate1A = function (dictApply) {
	    return function (dictUnfoldable1) {
	        return function (dictTraversable1) {
	            return function (n) {
	                return function (m) {
	                    return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
	                };
	            };
	        };
	    };
	};
	var singleton = function (dictUnfoldable1) {
	    return replicate1(dictUnfoldable1)(1);
	};
	var range = function (dictUnfoldable1) {
	    return function (start) {
	        return function (end) {
	            var go = function (delta) {
	                return function (i) {
	                    var i$prime = i + delta | 0;
	                    return new Data_Tuple.Tuple(i, (function () {
	                        var $7 = i === end;
	                        if ($7) {
	                            return Data_Maybe.Nothing.value;
	                        };
	                        return new Data_Maybe.Just(i$prime);
	                    })());
	                };
	            };
	            var delta = (function () {
	                var $8 = end >= start;
	                if ($8) {
	                    return 1;
	                };
	                return -1 | 0;
	            })();
	            return unfoldr1(dictUnfoldable1)(go(delta))(start);
	        };
	    };
	};
	module.exports = {
	    Unfoldable1: Unfoldable1,
	    unfoldr1: unfoldr1,
	    replicate1: replicate1,
	    replicate1A: replicate1A,
	    singleton: singleton,
	    range: range
	};


/***/ }),
/* 148 */
/*!****************************************************!*\
  !*** ./output/Data.Semigroup.Traversable/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Semigroup_Foldable = __webpack_require__(/*! ../Data.Semigroup.Foldable */ 143);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
	    this.Foldable10 = Foldable10;
	    this.Traversable1 = Traversable1;
	    this.sequence1 = sequence1;
	    this.traverse1 = traverse1;
	};
	var traverse1 = function (dict) {
	    return dict.traverse1;
	};
	var sequence1Default = function (dictTraversable1) {
	    return function (dictApply) {
	        return traverse1(dictTraversable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var sequence1 = function (dict) {
	    return dict.sequence1;
	};
	var traverse1Default = function (dictTraversable1) {
	    return function (dictApply) {
	        return function (f) {
	            return function (ta) {
	                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
	            };
	        };
	    };
	};
	module.exports = {
	    sequence1: sequence1,
	    traverse1: traverse1,
	    Traversable1: Traversable1,
	    traverse1Default: traverse1Default,
	    sequence1Default: sequence1Default
	};


/***/ }),
/* 149 */
/*!*****************************************!*\
  !*** ./output/Data.List.Types/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_FoldableWithIndex = __webpack_require__(/*! ../Data.FoldableWithIndex */ 140);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_FunctorWithIndex = __webpack_require__(/*! ../Data.FunctorWithIndex */ 141);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semigroup_Foldable = __webpack_require__(/*! ../Data.Semigroup.Foldable */ 143);
	var Data_Semigroup_Traversable = __webpack_require__(/*! ../Data.Semigroup.Traversable */ 148);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_TraversableWithIndex = __webpack_require__(/*! ../Data.TraversableWithIndex */ 144);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Nil = (function () {
	    function Nil() {

	    };
	    Nil.value = new Nil();
	    return Nil;
	})();
	var Cons = (function () {
	    function Cons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Cons.create = function (value0) {
	        return function (value1) {
	            return new Cons(value0, value1);
	        };
	    };
	    return Cons;
	})();
	var NonEmptyList = function (x) {
	    return x;
	};
	var toList = function (v) {
	    return new Cons(v.value0, v.value1);
	};
	var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, NonEmptyList);
	var nelCons = function (a) {
	    return function (v) {
	        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
	    };
	};
	var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldl(foldableList)(function (acc) {
	            return function ($158) {
	                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	}, function (f) {
	    var go = function ($copy_b) {
	        return function ($copy_v) {
	            var $tco_var_b = $copy_b;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(b, v) {
	                if (v instanceof Nil) {
	                    $tco_done = true;
	                    return b;
	                };
	                if (v instanceof Cons) {
	                    $tco_var_b = f(b)(v.value0);
	                    $copy_v = v.value1;
	                    return;
	                };
	                throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_b, $copy_v);
	            };
	            return $tco_result;
	        };
	    };
	    return go;
	}, function (f) {
	    return function (b) {
	        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
	        return function ($159) {
	            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
	        };
	    };
	});
	var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
	var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
	    return foldableList;
	}, function (dictMonoid) {
	    return function (f) {
	        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
	            return function (acc) {
	                return function ($160) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($160));
	                };
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	}, function (f) {
	    return function (acc) {
	        return function ($161) {
	            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
	                return function (a) {
	                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
	                };
	            })(new Data_Tuple.Tuple(0, acc))($161));
	        };
	    };
	}, function (f) {
	    return function (b) {
	        return function (xs) {
	            var v = (function () {
	                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
	                    return function (a) {
	                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
	                    };
	                });
	                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
	            })();
	            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
	                return function (a) {
	                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
	                };
	            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
	        };
	    };
	});
	var functorList = new Data_Functor.Functor(function (f) {
	    return Data_Foldable.foldr(foldableList)(function (x) {
	        return function (acc) {
	            return new Cons(f(x), acc);
	        };
	    })(Nil.value);
	});
	var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
	var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
	    return functorList;
	}, function (f) {
	    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
	        return function (x) {
	            return function (acc) {
	                return new Cons(f(i)(x), acc);
	            };
	        };
	    })(Nil.value);
	});
	var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
	    return function (ys) {
	        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
	    };
	});
	var monoidList = new Data_Monoid.Monoid(function () {
	    return semigroupList;
	}, Nil.value);
	var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
	    return function (as$prime) {
	        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
	    };
	});
	var showList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Nil) {
	            return "Nil";
	        };
	        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
	    });
	};
	var showNonEmptyList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
	    });
	};
	var traversableList = new Data_Traversable.Traversable(function () {
	    return foldableList;
	}, function () {
	    return functorList;
	}, function (dictApplicative) {
	    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	}, function (dictApplicative) {
	    return function (f) {
	        return function ($162) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
	                return function ($163) {
	                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($163));
	                };
	            })(Control_Applicative.pure(dictApplicative)(Nil.value))($162));
	        };
	    };
	});
	var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
	var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
	    return foldableWithIndexList;
	}, function () {
	    return functorWithIndexList;
	}, function () {
	    return traversableList;
	}, function (dictApplicative) {
	    return function (f) {
	        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
	        return function ($164) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
	                return function (acc) {
	                    return function ($165) {
	                        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($165));
	                    };
	                };
	            })(Control_Applicative.pure(dictApplicative)(Nil.value))($164));
	        };
	    };
	});
	var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
	    return function (b) {
	        var go = function ($copy_source) {
	            return function ($copy_memo) {
	                var $tco_var_source = $copy_source;
	                var $tco_done = false;
	                var $tco_result;
	                function $tco_loop(source, memo) {
	                    var v = f(source);
	                    if (v instanceof Data_Maybe.Nothing) {
	                        $tco_done = true;
	                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        $tco_var_source = v.value0.value1;
	                        $copy_memo = new Cons(v.value0.value0, memo);
	                        return;
	                    };
	                    throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: " + [ v.constructor.name ]);
	                };
	                while (!$tco_done) {
	                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
	                };
	                return $tco_result;
	            };
	        };
	        return go(b)(Nil.value);
	    };
	});
	var foldable1NonEmptyList = new Data_Semigroup_Foldable.Foldable1(function () {
	    return foldableNonEmptyList;
	}, function (dictSemigroup) {
	    return function (v) {
	        return Data_Foldable.foldl(foldableList)(Data_Semigroup.append(dictSemigroup))(v.value0)(v.value1);
	    };
	}, function (dictSemigroup) {
	    return function (f) {
	        return function (v) {
	            return Data_Foldable.foldl(foldableList)(function (acc) {
	                return function ($166) {
	                    return Data_Semigroup.append(dictSemigroup)(acc)(f($166));
	                };
	            })(f(v.value0))(v.value1);
	        };
	    };
	});
	var extendNonEmptyList = new Control_Extend.Extend(function () {
	    return functorNonEmptyList;
	}, function (f) {
	    return function (v) {
	        var go = function (a) {
	            return function (v1) {
	                return {
	                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
	                    acc: new Cons(a, v1.acc)
	                };
	            };
	        };
	        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
	            val: Nil.value,
	            acc: Nil.value
	        })(v.value1)).val);
	    };
	});
	var extendList = new Control_Extend.Extend(function () {
	    return functorList;
	}, function (f) {
	    return function (v) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            var go = function (a$prime) {
	                return function (v1) {
	                    var acc$prime = new Cons(a$prime, v1.acc);
	                    return {
	                        val: new Cons(f(acc$prime), v1.val),
	                        acc: acc$prime
	                    };
	                };
	            };
	            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
	                val: Nil.value,
	                acc: Nil.value
	            })(v.value1)).val);
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 145, column 1 - line 145, column 35: " + [ f.constructor.name, v.constructor.name ]);
	    };
	});
	var eq1List = new Data_Eq.Eq1(function (dictEq) {
	    return function (xs) {
	        return function (ys) {
	            var go = function ($copy_v) {
	                return function ($copy_v1) {
	                    return function ($copy_v2) {
	                        var $tco_var_v = $copy_v;
	                        var $tco_var_v1 = $copy_v1;
	                        var $tco_done = false;
	                        var $tco_result;
	                        function $tco_loop(v, v1, v2) {
	                            if (!v2) {
	                                $tco_done = true;
	                                return false;
	                            };
	                            if (v instanceof Nil && v1 instanceof Nil) {
	                                $tco_done = true;
	                                return v2;
	                            };
	                            if (v instanceof Cons && v1 instanceof Cons) {
	                                $tco_var_v = v.value1;
	                                $tco_var_v1 = v1.value1;
	                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
	                                return;
	                            };
	                            $tco_done = true;
	                            return false;
	                        };
	                        while (!$tco_done) {
	                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
	                        };
	                        return $tco_result;
	                    };
	                };
	            };
	            return go(xs)(ys)(true);
	        };
	    };
	});
	var eqList = function (dictEq) {
	    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
	};
	var eqNonEmptyList = function (dictEq) {
	    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
	};
	var ord1List = new Data_Ord.Ord1(function () {
	    return eq1List;
	}, function (dictOrd) {
	    return function (xs) {
	        return function (ys) {
	            var go = function ($copy_v) {
	                return function ($copy_v1) {
	                    var $tco_var_v = $copy_v;
	                    var $tco_done = false;
	                    var $tco_result;
	                    function $tco_loop(v, v1) {
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            $tco_done = true;
	                            return Data_Ordering.EQ.value;
	                        };
	                        if (v instanceof Nil) {
	                            $tco_done = true;
	                            return Data_Ordering.LT.value;
	                        };
	                        if (v1 instanceof Nil) {
	                            $tco_done = true;
	                            return Data_Ordering.GT.value;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                            if (v2 instanceof Data_Ordering.EQ) {
	                                $tco_var_v = v.value1;
	                                $copy_v1 = v1.value1;
	                                return;
	                            };
	                            $tco_done = true;
	                            return v2;
	                        };
	                        throw new Error("Failed pattern match at Data.List.Types line 55, column 5 - line 55, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	                    };
	                    while (!$tco_done) {
	                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
	                    };
	                    return $tco_result;
	                };
	            };
	            return go(xs)(ys);
	        };
	    };
	});
	var ordList = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqList(dictOrd.Eq0());
	    }, Data_Ord.compare1(ord1List)(dictOrd));
	};
	var ordNonEmptyList = function (dictOrd) {
	    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
	};
	var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
	    return extendNonEmptyList;
	}, function (v) {
	    return v.value0;
	});
	var applyList = new Control_Apply.Apply(function () {
	    return functorList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var applyNonEmptyList = new Control_Apply.Apply(function () {
	    return functorNonEmptyList;
	}, function (v) {
	    return function (v1) {
	        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
	    };
	});
	var bindList = new Control_Bind.Bind(function () {
	    return applyList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 31: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindNonEmptyList = new Control_Bind.Bind(function () {
	    return applyNonEmptyList;
	}, function (v) {
	    return function (f) {
	        var v1 = f(v.value0);
	        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($167) {
	            return toList(f($167));
	        })));
	    };
	});
	var applicativeList = new Control_Applicative.Applicative(function () {
	    return applyList;
	}, function (a) {
	    return new Cons(a, Nil.value);
	});
	var monadList = new Control_Monad.Monad(function () {
	    return applicativeList;
	}, function () {
	    return bindList;
	});
	var altNonEmptyList = new Control_Alt.Alt(function () {
	    return functorNonEmptyList;
	}, Data_Semigroup.append(semigroupNonEmptyList));
	var altList = new Control_Alt.Alt(function () {
	    return functorList;
	}, Data_Semigroup.append(semigroupList));
	var plusList = new Control_Plus.Plus(function () {
	    return altList;
	}, Nil.value);
	var alternativeList = new Control_Alternative.Alternative(function () {
	    return applicativeList;
	}, function () {
	    return plusList;
	});
	var monadZeroList = new Control_MonadZero.MonadZero(function () {
	    return alternativeList;
	}, function () {
	    return monadList;
	});
	var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
	    return monadZeroList;
	});
	var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
	    return applyNonEmptyList;
	}, function ($168) {
	    return NonEmptyList(Data_NonEmpty.singleton(plusList)($168));
	});
	var monadNonEmptyList = new Control_Monad.Monad(function () {
	    return applicativeNonEmptyList;
	}, function () {
	    return bindNonEmptyList;
	});
	var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
	    return foldable1NonEmptyList;
	}, function () {
	    return traversableNonEmptyList;
	}, function (dictApply) {
	    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.id(Control_Category.categoryFn));
	}, function (dictApply) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
	                return function ($169) {
	                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($169));
	                };
	            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
	                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
	            });
	        };
	    };
	});
	module.exports = {
	    Nil: Nil,
	    Cons: Cons,
	    NonEmptyList: NonEmptyList,
	    toList: toList,
	    nelCons: nelCons,
	    showList: showList,
	    eqList: eqList,
	    eq1List: eq1List,
	    ordList: ordList,
	    ord1List: ord1List,
	    semigroupList: semigroupList,
	    monoidList: monoidList,
	    functorList: functorList,
	    functorWithIndexList: functorWithIndexList,
	    foldableList: foldableList,
	    foldableWithIndexList: foldableWithIndexList,
	    unfoldableList: unfoldableList,
	    traversableList: traversableList,
	    traversableWithIndexList: traversableWithIndexList,
	    applyList: applyList,
	    applicativeList: applicativeList,
	    bindList: bindList,
	    monadList: monadList,
	    altList: altList,
	    plusList: plusList,
	    alternativeList: alternativeList,
	    monadZeroList: monadZeroList,
	    monadPlusList: monadPlusList,
	    extendList: extendList,
	    newtypeNonEmptyList: newtypeNonEmptyList,
	    eqNonEmptyList: eqNonEmptyList,
	    ordNonEmptyList: ordNonEmptyList,
	    showNonEmptyList: showNonEmptyList,
	    functorNonEmptyList: functorNonEmptyList,
	    applyNonEmptyList: applyNonEmptyList,
	    applicativeNonEmptyList: applicativeNonEmptyList,
	    bindNonEmptyList: bindNonEmptyList,
	    monadNonEmptyList: monadNonEmptyList,
	    altNonEmptyList: altNonEmptyList,
	    extendNonEmptyList: extendNonEmptyList,
	    comonadNonEmptyList: comonadNonEmptyList,
	    semigroupNonEmptyList: semigroupNonEmptyList,
	    foldableNonEmptyList: foldableNonEmptyList,
	    traversableNonEmptyList: traversableNonEmptyList,
	    foldable1NonEmptyList: foldable1NonEmptyList,
	    traversable1NonEmptyList: traversable1NonEmptyList
	};


/***/ }),
/* 150 */
/*!*************************************!*\
  !*** ./output/Data.String/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 151);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_String_Unsafe = __webpack_require__(/*! ../Data.String.Unsafe */ 152);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Replacement = function (x) {
	    return x;
	};
	var Pattern = function (x) {
	    return x;
	};
	var uncons = function (v) {
	    if (v === "") {
	        return Data_Maybe.Nothing.value;
	    };
	    return new Data_Maybe.Just({
	        head: Data_String_Unsafe.charAt(0)(v),
	        tail: $foreign.drop(1)(v)
	    });
	};
	var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var takeWhile = function (p) {
	    return function (s) {
	        return $foreign.take($foreign.count(p)(s))(s);
	    };
	};
	var takeRight = function (i) {
	    return function (s) {
	        return $foreign.drop($foreign.length(s) - i | 0)(s);
	    };
	};
	var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var showReplacement = new Data_Show.Show(function (v) {
	    return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
	});
	var showPattern = new Data_Show.Show(function (v) {
	    return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
	});
	var $$null = function (s) {
	    return s === "";
	};
	var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Replacement);
	var newtypePattern = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Pattern);
	var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripSuffix = function (v) {
	    return function (str) {
	        var v1 = lastIndexOf(v)(str);
	        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
	            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripPrefix = function (v) {
	    return function (str) {
	        var v1 = indexOf(v)(str);
	        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
	            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var eqReplacement = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordReplacement = new Data_Ord.Ord(function () {
	    return eqReplacement;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var eqPattern = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordPattern = new Data_Ord.Ord(function () {
	    return eqPattern;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var dropWhile = function (p) {
	    return function (s) {
	        return $foreign.drop($foreign.count(p)(s))(s);
	    };
	};
	var dropRight = function (i) {
	    return function (s) {
	        return $foreign.take($foreign.length(s) - i | 0)(s);
	    };
	};
	var contains = function (pat) {
	    return function ($48) {
	        return Data_Maybe.isJust(indexOf(pat)($48));
	    };
	};
	var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	module.exports = {
	    Pattern: Pattern,
	    Replacement: Replacement,
	    charAt: charAt,
	    charCodeAt: charCodeAt,
	    toChar: toChar,
	    contains: contains,
	    indexOf: indexOf,
	    "indexOf'": indexOf$prime,
	    lastIndexOf: lastIndexOf,
	    "lastIndexOf'": lastIndexOf$prime,
	    "null": $$null,
	    uncons: uncons,
	    localeCompare: localeCompare,
	    takeRight: takeRight,
	    takeWhile: takeWhile,
	    dropRight: dropRight,
	    dropWhile: dropWhile,
	    stripPrefix: stripPrefix,
	    stripSuffix: stripSuffix,
	    splitAt: splitAt,
	    eqPattern: eqPattern,
	    ordPattern: ordPattern,
	    newtypePattern: newtypePattern,
	    showPattern: showPattern,
	    eqReplacement: eqReplacement,
	    ordReplacement: ordReplacement,
	    newtypeReplacement: newtypeReplacement,
	    showReplacement: showReplacement,
	    fromCharArray: $foreign.fromCharArray,
	    length: $foreign.length,
	    singleton: $foreign.singleton,
	    replace: $foreign.replace,
	    replaceAll: $foreign.replaceAll,
	    take: $foreign.take,
	    drop: $foreign.drop,
	    count: $foreign.count,
	    split: $foreign.split,
	    toCharArray: $foreign.toCharArray,
	    toLower: $foreign.toLower,
	    toUpper: $foreign.toUpper,
	    trim: $foreign.trim,
	    joinWith: $foreign.joinWith
	};


/***/ }),
/* 151 */
/*!***************************************!*\
  !*** ./output/Data.String/foreign.js ***!
  \***************************************/
/***/ (function(module, exports) {

	"use strict";

	exports._charAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports.singleton = function (c) {
	  return c;
	};

	exports._charCodeAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports._toChar = function (just) {
	  return function (nothing) {
	    return function (s) {
	      return s.length === 1 ? just(s) : nothing;
	    };
	  };
	};

	exports.fromCharArray = function (a) {
	  return a.join("");
	};

	exports._indexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.indexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_indexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.indexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports._lastIndexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.lastIndexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_lastIndexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.lastIndexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports.length = function (s) {
	  return s.length;
	};

	exports._localeCompare = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (s1) {
	        return function (s2) {
	          var result = s1.localeCompare(s2);
	          return result < 0 ? lt : result > 0 ? gt : eq;
	        };
	      };
	    };
	  };
	};

	exports.replace = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(s1, s2);
	    };
	  };
	};

	exports.replaceAll = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (s) {
	    return s.substr(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (s) {
	    return s.substring(n);
	  };
	};

	exports.count = function (p) {
	  return function (s) {
	    var i = 0;
	    while (i < s.length && p(s.charAt(i))) i++;
	    return i;
	  };
	};

	exports.split = function (sep) {
	  return function (s) {
	    return s.split(sep);
	  };
	};

	exports._splitAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ?
	               just({ before: s.substring(0, i), after: s.substring(i) }) :
	               nothing;
	      };
	    };
	  };
	};

	exports.toCharArray = function (s) {
	  return s.split("");
	};

	exports.toLower = function (s) {
	  return s.toLowerCase();
	};

	exports.toUpper = function (s) {
	  return s.toUpperCase();
	};

	exports.trim = function (s) {
	  return s.trim();
	};

	exports.joinWith = function (s) {
	  return function (xs) {
	    return xs.join(s);
	  };
	};


/***/ }),
/* 152 */
/*!********************************************!*\
  !*** ./output/Data.String.Unsafe/index.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 153);
	module.exports = {
	    "char": $foreign["char"],
	    charAt: $foreign.charAt,
	    charCodeAt: $foreign.charCodeAt
	};


/***/ }),
/* 153 */
/*!**********************************************!*\
  !*** ./output/Data.String.Unsafe/foreign.js ***!
  \**********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.charCodeAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charCodeAt(i);
	    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
	  };
	};

	exports.charAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charAt(i);
	    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
	  };
	};

	exports.char = function (s) {
	  if (s.length === 1) return s.charAt(0);
	  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
	};


/***/ }),
/* 154 */
/*!************************************!*\
  !*** ./output/Type.Proxy/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Proxy3 = (function () {
	    function Proxy3() {

	    };
	    Proxy3.value = new Proxy3();
	    return Proxy3;
	})();
	var Proxy2 = (function () {
	    function Proxy2() {

	    };
	    Proxy2.value = new Proxy2();
	    return Proxy2;
	})();
	var $$Proxy = (function () {
	    function $$Proxy() {

	    };
	    $$Proxy.value = new $$Proxy();
	    return $$Proxy;
	})();
	var showProxy3 = new Data_Show.Show(function (v) {
	    return "Proxy3";
	});
	var showProxy2 = new Data_Show.Show(function (v) {
	    return "Proxy2";
	});
	var showProxy = new Data_Show.Show(function (v) {
	    return "Proxy";
	});
	var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	}, Proxy3.value, Proxy3.value);
	var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	}, Proxy2.value, Proxy2.value);
	var semiringProxy = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	}, $$Proxy.value, $$Proxy.value);
	var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	});
	var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	});
	var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	});
	var ringProxy3 = new Data_Ring.Ring(function () {
	    return semiringProxy3;
	}, function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	});
	var ringProxy2 = new Data_Ring.Ring(function () {
	    return semiringProxy2;
	}, function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	});
	var ringProxy = new Data_Ring.Ring(function () {
	    return semiringProxy;
	}, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	});
	var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	}, Proxy3.value, function (v) {
	    return function (v1) {
	        return Proxy3.value;
	    };
	}, function (v) {
	    return Proxy3.value;
	}, Proxy3.value);
	var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	}, Proxy2.value, function (v) {
	    return function (v1) {
	        return Proxy2.value;
	    };
	}, function (v) {
	    return Proxy2.value;
	}, Proxy2.value);
	var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	}, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	}, $$Proxy.value, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	}, function (v) {
	    return $$Proxy.value;
	}, $$Proxy.value);
	var functorProxy = new Data_Functor.Functor(function (f) {
	    return function (m) {
	        return $$Proxy.value;
	    };
	});
	var eqProxy3 = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return true;
	    };
	});
	var ordProxy3 = new Data_Ord.Ord(function () {
	    return eqProxy3;
	}, function (x) {
	    return function (y) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var eqProxy2 = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return true;
	    };
	});
	var ordProxy2 = new Data_Ord.Ord(function () {
	    return eqProxy2;
	}, function (x) {
	    return function (y) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var eqProxy = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return true;
	    };
	});
	var ordProxy = new Data_Ord.Ord(function () {
	    return eqProxy;
	}, function (x) {
	    return function (y) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
	    return Control_Bind.bind(dictBind);
	});
	var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
	    return Control_Bind.bind(dictBind);
	});
	var discardProxy = new Control_Bind.Discard(function (dictBind) {
	    return Control_Bind.bind(dictBind);
	});
	var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
	    return ringProxy3;
	});
	var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
	    return ringProxy2;
	});
	var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
	    return ringProxy;
	});
	var boundedProxy3 = new Data_Bounded.Bounded(function () {
	    return ordProxy3;
	}, Proxy3.value, Proxy3.value);
	var boundedProxy2 = new Data_Bounded.Bounded(function () {
	    return ordProxy2;
	}, Proxy2.value, Proxy2.value);
	var boundedProxy = new Data_Bounded.Bounded(function () {
	    return ordProxy;
	}, $$Proxy.value, $$Proxy.value);
	var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
	    return heytingAlgebraProxy3;
	});
	var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
	    return heytingAlgebraProxy2;
	});
	var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
	    return heytingAlgebraProxy;
	});
	var applyProxy = new Control_Apply.Apply(function () {
	    return functorProxy;
	}, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	});
	var bindProxy = new Control_Bind.Bind(function () {
	    return applyProxy;
	}, function (v) {
	    return function (v1) {
	        return $$Proxy.value;
	    };
	});
	var applicativeProxy = new Control_Applicative.Applicative(function () {
	    return applyProxy;
	}, function (v) {
	    return $$Proxy.value;
	});
	var monadProxy = new Control_Monad.Monad(function () {
	    return applicativeProxy;
	}, function () {
	    return bindProxy;
	});
	module.exports = {
	    "Proxy": $$Proxy,
	    Proxy2: Proxy2,
	    Proxy3: Proxy3,
	    eqProxy: eqProxy,
	    functorProxy: functorProxy,
	    ordProxy: ordProxy,
	    applicativeProxy: applicativeProxy,
	    applyProxy: applyProxy,
	    bindProxy: bindProxy,
	    booleanAlgebraProxy: booleanAlgebraProxy,
	    boundedProxy: boundedProxy,
	    commutativeRingProxy: commutativeRingProxy,
	    discardProxy: discardProxy,
	    heytingAlgebraProxy: heytingAlgebraProxy,
	    monadProxy: monadProxy,
	    ringProxy: ringProxy,
	    semigroupProxy: semigroupProxy,
	    semiringProxy: semiringProxy,
	    showProxy: showProxy,
	    eqProxy2: eqProxy2,
	    ordProxy2: ordProxy2,
	    booleanAlgebraProxy2: booleanAlgebraProxy2,
	    boundedProxy2: boundedProxy2,
	    commutativeRingProxy2: commutativeRingProxy2,
	    discardProxy2: discardProxy2,
	    heytingAlgebraProxy2: heytingAlgebraProxy2,
	    ringProxy2: ringProxy2,
	    semigroupProxy2: semigroupProxy2,
	    semiringProxy2: semiringProxy2,
	    showProxy2: showProxy2,
	    eqProxy3: eqProxy3,
	    ordProxy3: ordProxy3,
	    booleanAlgebraProxy3: booleanAlgebraProxy3,
	    boundedProxy3: boundedProxy3,
	    commutativeRingProxy3: commutativeRingProxy3,
	    discardProxy3: discardProxy3,
	    heytingAlgebraProxy3: heytingAlgebraProxy3,
	    ringProxy3: ringProxy3,
	    semigroupProxy3: semigroupProxy3,
	    semiringProxy3: semiringProxy3,
	    showProxy3: showProxy3
	};


/***/ }),
/* 155 */
/*!*****************************!*\
  !*** ./output/DOM/index.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	module.exports = {};


/***/ }),
/* 156 */
/*!**********************************!*\
  !*** ./output/DOM.HTML/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 157);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_HTML_Types = __webpack_require__(/*! ../DOM.HTML.Types */ 158);
	module.exports = {
	    window: $foreign.window
	};


/***/ }),
/* 157 */
/*!************************************!*\
  !*** ./output/DOM.HTML/foreign.js ***!
  \************************************/
/***/ (function(module, exports) {

	/* global window */
	"use strict";

	exports.window = function () {
	  return window;
	};


/***/ }),
/* 158 */
/*!****************************************!*\
  !*** ./output/DOM.HTML.Types/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 159);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var DOM_Event_Types = __webpack_require__(/*! ../DOM.Event.Types */ 160);
	var DOM_Node_Types = __webpack_require__(/*! ../DOM.Node.Types */ 174);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Foreign = __webpack_require__(/*! ../Data.Foreign */ 162);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var readHTMLVideoElement = Data_Foreign.unsafeReadTagged("HTMLVideoElement");
	var readHTMLUListElement = Data_Foreign.unsafeReadTagged("HTMLUListElement");
	var readHTMLTrackElement = Data_Foreign.unsafeReadTagged("HTMLTrackElement");
	var readHTMLTitleElement = Data_Foreign.unsafeReadTagged("HTMLTitleElement");
	var readHTMLTimeElement = Data_Foreign.unsafeReadTagged("HTMLTimeElement");
	var readHTMLTextAreaElement = Data_Foreign.unsafeReadTagged("HTMLTextAreaElement");
	var readHTMLTemplateElement = Data_Foreign.unsafeReadTagged("HTMLTemplateElement");
	var readHTMLTableSectionElement = Data_Foreign.unsafeReadTagged("HTMLTableSectionElement");
	var readHTMLTableRowElement = Data_Foreign.unsafeReadTagged("HTMLTableRowElement");
	var readHTMLTableHeaderCellElement = Data_Foreign.unsafeReadTagged("HTMLTableHeaderCellElement");
	var readHTMLTableElement = Data_Foreign.unsafeReadTagged("HTMLTableElement");
	var readHTMLTableDataCellElement = Data_Foreign.unsafeReadTagged("HTMLTableDataCellElement");
	var readHTMLTableColElement = Data_Foreign.unsafeReadTagged("HTMLTableColElement");
	var readHTMLTableCellElement = Data_Foreign.unsafeReadTagged("HTMLTableCellElement");
	var readHTMLTableCaptionElement = Data_Foreign.unsafeReadTagged("HTMLTableCaptionElement");
	var readHTMLStyleElement = Data_Foreign.unsafeReadTagged("HTMLStyleElement");
	var readHTMLSpanElement = Data_Foreign.unsafeReadTagged("HTMLSpanElement");
	var readHTMLSourceElement = Data_Foreign.unsafeReadTagged("HTMLSourceElement");
	var readHTMLSelectElement = Data_Foreign.unsafeReadTagged("HTMLSelectElement");
	var readHTMLScriptElement = Data_Foreign.unsafeReadTagged("HTMLScriptElement");
	var readHTMLQuoteElement = Data_Foreign.unsafeReadTagged("HTMLQuoteElement");
	var readHTMLProgressElement = Data_Foreign.unsafeReadTagged("HTMLProgressElement");
	var readHTMLPreElement = Data_Foreign.unsafeReadTagged("HTMLPreElement");
	var readHTMLParamElement = Data_Foreign.unsafeReadTagged("HTMLParamElement");
	var readHTMLParagraphElement = Data_Foreign.unsafeReadTagged("HTMLParagraphElement");
	var readHTMLOutputElement = Data_Foreign.unsafeReadTagged("HTMLOutputElement");
	var readHTMLOptionElement = Data_Foreign.unsafeReadTagged("HTMLOptionElement");
	var readHTMLOptGroupElement = Data_Foreign.unsafeReadTagged("HTMLOptGroupElement");
	var readHTMLObjectElement = Data_Foreign.unsafeReadTagged("HTMLObjectElement");
	var readHTMLOListElement = Data_Foreign.unsafeReadTagged("HTMLOListElement");
	var readHTMLModElement = Data_Foreign.unsafeReadTagged("HTMLModElement");
	var readHTMLMeterElement = Data_Foreign.unsafeReadTagged("HTMLMeterElement");
	var readHTMLMetaElement = Data_Foreign.unsafeReadTagged("HTMLMetaElement");
	var readHTMLMediaElement = Data_Foreign.unsafeReadTagged("HTMLMediaElement");
	var readHTMLMapElement = Data_Foreign.unsafeReadTagged("HTMLMapElement");
	var readHTMLLinkElement = Data_Foreign.unsafeReadTagged("HTMLLinkElement");
	var readHTMLLegendElement = Data_Foreign.unsafeReadTagged("HTMLLegendElement");
	var readHTMLLabelElement = Data_Foreign.unsafeReadTagged("HTMLLabelElement");
	var readHTMLLIElement = Data_Foreign.unsafeReadTagged("HTMLLIElement");
	var readHTMLKeygenElement = Data_Foreign.unsafeReadTagged("HTMLKeygenElement");
	var readHTMLInputElement = Data_Foreign.unsafeReadTagged("HTMLInputElement");
	var readHTMLImageElement = Data_Foreign.unsafeReadTagged("HTMLImageElement");
	var readHTMLIFrameElement = Data_Foreign.unsafeReadTagged("HTMLIFrameElement");
	var readHTMLHtmlElement = Data_Foreign.unsafeReadTagged("HTMLHtmlElement");
	var readHTMLHeadingElement = Data_Foreign.unsafeReadTagged("HTMLHeadingElement");
	var readHTMLHeadElement = Data_Foreign.unsafeReadTagged("HTMLHeadElement");
	var readHTMLHRElement = Data_Foreign.unsafeReadTagged("HTMLHRElement");
	var readHTMLFormElement = Data_Foreign.unsafeReadTagged("HTMLFormElement");
	var readHTMLFieldSetElement = Data_Foreign.unsafeReadTagged("HTMLFieldSetElement");
	var readHTMLEmbedElement = Data_Foreign.unsafeReadTagged("HTMLEmbedElement");
	var readHTMLElement = $foreign._readHTMLElement(function ($0) {
	    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))));
	})(function ($1) {
	    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
	});
	var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
	var readHTMLDivElement = Data_Foreign.unsafeReadTagged("HTMLDivElement");
	var readHTMLDataListElement = Data_Foreign.unsafeReadTagged("HTMLDataListElement");
	var readHTMLDataElement = Data_Foreign.unsafeReadTagged("HTMLDataElement");
	var readHTMLDListElement = Data_Foreign.unsafeReadTagged("HTMLDListElement");
	var readHTMLCanvasElement = Data_Foreign.unsafeReadTagged("HTMLCanvasElement");
	var readHTMLButtonElement = Data_Foreign.unsafeReadTagged("HTMLButtonElement");
	var readHTMLBodyElement = Data_Foreign.unsafeReadTagged("HTMLBodyElement");
	var readHTMLBaseElement = Data_Foreign.unsafeReadTagged("HTMLBaseElement");
	var readHTMLBRElement = Data_Foreign.unsafeReadTagged("HTMLBRElement");
	var readHTMLAudioElement = Data_Foreign.unsafeReadTagged("HTMLAudioElement");
	var readHTMLAreaElement = Data_Foreign.unsafeReadTagged("HTMLAreaElement");
	var readHTMLAnchorElement = Data_Foreign.unsafeReadTagged("HTMLAnchorElement");
	var htmlVideoElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlUListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTrackElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTitleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTimeElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTextAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTemplateElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableSectionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableRowElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableHeaderCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableDataCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableColElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCellElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCaptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlStyleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSpanElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSourceElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSelectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlScriptElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlQuoteElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlProgressElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlPreElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParamElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParagraphElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOutputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptGroupElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlObjectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlModElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMeterElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMetaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMediaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMapElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLinkElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLegendElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLabelElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLIElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlKeygenElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlInputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlImageElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlIFrameElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHtmlElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadingElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFormElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFieldSetElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlEmbedElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
	var htmlDivElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlCanvasElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlButtonElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBodyElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBaseElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAudioElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAnchorElementToHTMLHyperlinkElementUtils = Unsafe_Coerce.unsafeCoerce;
	var htmlAnchorElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    windowToEventTarget: windowToEventTarget,
	    htmlDocumentToDocument: htmlDocumentToDocument,
	    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode,
	    htmlDocumentToParentNode: htmlDocumentToParentNode,
	    htmlDocumentToNode: htmlDocumentToNode,
	    htmlDocumentToEventTarget: htmlDocumentToEventTarget,
	    readHTMLDocument: readHTMLDocument,
	    htmlElementToElement: htmlElementToElement,
	    htmlElementToParentNode: htmlElementToParentNode,
	    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode,
	    htmlElementToNode: htmlElementToNode,
	    htmlElementToEventTarget: htmlElementToEventTarget,
	    readHTMLElement: readHTMLElement,
	    htmlHtmlElementToHTMLElement: htmlHtmlElementToHTMLElement,
	    readHTMLHtmlElement: readHTMLHtmlElement,
	    htmlHeadElementToHTMLElement: htmlHeadElementToHTMLElement,
	    readHTMLHeadElement: readHTMLHeadElement,
	    htmlTitleElementToHTMLElement: htmlTitleElementToHTMLElement,
	    readHTMLTitleElement: readHTMLTitleElement,
	    htmlBaseElementToHTMLElement: htmlBaseElementToHTMLElement,
	    readHTMLBaseElement: readHTMLBaseElement,
	    htmlLinkElementToHTMLElement: htmlLinkElementToHTMLElement,
	    readHTMLLinkElement: readHTMLLinkElement,
	    htmlMetaElementToHTMLElement: htmlMetaElementToHTMLElement,
	    readHTMLMetaElement: readHTMLMetaElement,
	    htmlStyleElementToHTMLElement: htmlStyleElementToHTMLElement,
	    readHTMLStyleElement: readHTMLStyleElement,
	    htmlBodyElementToHTMLElement: htmlBodyElementToHTMLElement,
	    readHTMLBodyElement: readHTMLBodyElement,
	    htmlHeadingElementToHTMLElement: htmlHeadingElementToHTMLElement,
	    readHTMLHeadingElement: readHTMLHeadingElement,
	    htmlParagraphElementToHTMLElement: htmlParagraphElementToHTMLElement,
	    readHTMLParagraphElement: readHTMLParagraphElement,
	    htmlHRElementToHTMLElement: htmlHRElementToHTMLElement,
	    readHTMLHRElement: readHTMLHRElement,
	    htmlPreElementToHTMLElement: htmlPreElementToHTMLElement,
	    readHTMLPreElement: readHTMLPreElement,
	    htmlQuoteElementToHTMLElement: htmlQuoteElementToHTMLElement,
	    readHTMLQuoteElement: readHTMLQuoteElement,
	    htmlOListElementToHTMLElement: htmlOListElementToHTMLElement,
	    readHTMLOListElement: readHTMLOListElement,
	    htmlUListElementToHTMLElement: htmlUListElementToHTMLElement,
	    readHTMLUListElement: readHTMLUListElement,
	    htmlLIElementToHTMLElement: htmlLIElementToHTMLElement,
	    readHTMLLIElement: readHTMLLIElement,
	    htmlDListElementToHTMLElement: htmlDListElementToHTMLElement,
	    readHTMLDListElement: readHTMLDListElement,
	    htmlDivElementToHTMLElement: htmlDivElementToHTMLElement,
	    readHTMLDivElement: readHTMLDivElement,
	    htmlAnchorElementToHTMLElement: htmlAnchorElementToHTMLElement,
	    readHTMLAnchorElement: readHTMLAnchorElement,
	    htmlAnchorElementToHTMLHyperlinkElementUtils: htmlAnchorElementToHTMLHyperlinkElementUtils,
	    htmlDataElementToHTMLElement: htmlDataElementToHTMLElement,
	    readHTMLDataElement: readHTMLDataElement,
	    htmlTimeElementToHTMLElement: htmlTimeElementToHTMLElement,
	    readHTMLTimeElement: readHTMLTimeElement,
	    htmlSpanElementToHTMLElement: htmlSpanElementToHTMLElement,
	    readHTMLSpanElement: readHTMLSpanElement,
	    htmlBRElementToHTMLElement: htmlBRElementToHTMLElement,
	    readHTMLBRElement: readHTMLBRElement,
	    htmlModElementToHTMLElement: htmlModElementToHTMLElement,
	    readHTMLModElement: readHTMLModElement,
	    htmlImageElementToHTMLElement: htmlImageElementToHTMLElement,
	    readHTMLImageElement: readHTMLImageElement,
	    htmlIFrameElementToHTMLElement: htmlIFrameElementToHTMLElement,
	    readHTMLIFrameElement: readHTMLIFrameElement,
	    htmlEmbedElementToHTMLElement: htmlEmbedElementToHTMLElement,
	    readHTMLEmbedElement: readHTMLEmbedElement,
	    htmlObjectElementToHTMLElement: htmlObjectElementToHTMLElement,
	    readHTMLObjectElement: readHTMLObjectElement,
	    htmlParamElementToHTMLElement: htmlParamElementToHTMLElement,
	    readHTMLParamElement: readHTMLParamElement,
	    htmlMediaElementToHTMLElement: htmlMediaElementToHTMLElement,
	    readHTMLMediaElement: readHTMLMediaElement,
	    htmlAudioElementToHTMLMediaElement: htmlAudioElementToHTMLMediaElement,
	    readHTMLAudioElement: readHTMLAudioElement,
	    htmlVideoElementToHTMLMediaElement: htmlVideoElementToHTMLMediaElement,
	    readHTMLVideoElement: readHTMLVideoElement,
	    htmlSourceElementToHTMLElement: htmlSourceElementToHTMLElement,
	    readHTMLSourceElement: readHTMLSourceElement,
	    htmlTrackElementToHTMLElement: htmlTrackElementToHTMLElement,
	    readHTMLTrackElement: readHTMLTrackElement,
	    htmlMapElementToHTMLElement: htmlMapElementToHTMLElement,
	    readHTMLMapElement: readHTMLMapElement,
	    htmlAreaElementToHTMLElement: htmlAreaElementToHTMLElement,
	    readHTMLAreaElement: readHTMLAreaElement,
	    htmlTableElementToHTMLElement: htmlTableElementToHTMLElement,
	    readHTMLTableElement: readHTMLTableElement,
	    htmlTableCaptionElementToHTMLElement: htmlTableCaptionElementToHTMLElement,
	    readHTMLTableCaptionElement: readHTMLTableCaptionElement,
	    htmlTableColElementToHTMLElement: htmlTableColElementToHTMLElement,
	    readHTMLTableColElement: readHTMLTableColElement,
	    htmlTableSectionElementToHTMLElement: htmlTableSectionElementToHTMLElement,
	    readHTMLTableSectionElement: readHTMLTableSectionElement,
	    htmlTableRowElementToHTMLElement: htmlTableRowElementToHTMLElement,
	    readHTMLTableRowElement: readHTMLTableRowElement,
	    htmlTableCellElementToHTMLElement: htmlTableCellElementToHTMLElement,
	    readHTMLTableCellElement: readHTMLTableCellElement,
	    htmlTableDataCellElementToHTMLTableCellElement: htmlTableDataCellElementToHTMLTableCellElement,
	    readHTMLTableDataCellElement: readHTMLTableDataCellElement,
	    htmlTableHeaderCellElementToHTMLTableCellElement: htmlTableHeaderCellElementToHTMLTableCellElement,
	    readHTMLTableHeaderCellElement: readHTMLTableHeaderCellElement,
	    htmlFormElementToHTMLElement: htmlFormElementToHTMLElement,
	    readHTMLFormElement: readHTMLFormElement,
	    htmlLabelElementToHTMLElement: htmlLabelElementToHTMLElement,
	    readHTMLLabelElement: readHTMLLabelElement,
	    htmlInputElementToHTMLElement: htmlInputElementToHTMLElement,
	    readHTMLInputElement: readHTMLInputElement,
	    htmlButtonElementToHTMLElement: htmlButtonElementToHTMLElement,
	    readHTMLButtonElement: readHTMLButtonElement,
	    htmlSelectElementToHTMLElement: htmlSelectElementToHTMLElement,
	    readHTMLSelectElement: readHTMLSelectElement,
	    htmlDataListElementToHTMLElement: htmlDataListElementToHTMLElement,
	    readHTMLDataListElement: readHTMLDataListElement,
	    htmlOptGroupElementToHTMLElement: htmlOptGroupElementToHTMLElement,
	    readHTMLOptGroupElement: readHTMLOptGroupElement,
	    htmlOptionElementToHTMLElement: htmlOptionElementToHTMLElement,
	    readHTMLOptionElement: readHTMLOptionElement,
	    htmlTextAreaElementToHTMLElement: htmlTextAreaElementToHTMLElement,
	    readHTMLTextAreaElement: readHTMLTextAreaElement,
	    htmlKeygenElementToHTMLElement: htmlKeygenElementToHTMLElement,
	    readHTMLKeygenElement: readHTMLKeygenElement,
	    htmlOutputElementToHTMLElement: htmlOutputElementToHTMLElement,
	    readHTMLOutputElement: readHTMLOutputElement,
	    htmlProgressElementToHTMLElement: htmlProgressElementToHTMLElement,
	    readHTMLProgressElement: readHTMLProgressElement,
	    htmlMeterElementToHTMLElement: htmlMeterElementToHTMLElement,
	    readHTMLMeterElement: readHTMLMeterElement,
	    htmlFieldSetElementToHTMLElement: htmlFieldSetElementToHTMLElement,
	    readHTMLFieldSetElement: readHTMLFieldSetElement,
	    htmlLegendElementToHTMLElement: htmlLegendElementToHTMLElement,
	    readHTMLLegendElement: readHTMLLegendElement,
	    htmlScriptElementToHTMLElement: htmlScriptElementToHTMLElement,
	    readHTMLScriptElement: readHTMLScriptElement,
	    htmlTemplateElementToHTMLElement: htmlTemplateElementToHTMLElement,
	    readHTMLTemplateElement: readHTMLTemplateElement,
	    htmlCanvasElementToHTMLElement: htmlCanvasElementToHTMLElement,
	    readHTMLCanvasElement: readHTMLCanvasElement
	};


/***/ }),
/* 159 */
/*!******************************************!*\
  !*** ./output/DOM.HTML.Types/foreign.js ***!
  \******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports._readHTMLElement = function (failure) {
	  return function (success) {
	    return function (value) {
	      var tag = Object.prototype.toString.call(value);
	      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
	        return success(value);
	      } else {
	        return failure(tag);
	      }
	    };
	  };
	};


/***/ }),
/* 160 */
/*!*****************************************!*\
  !*** ./output/DOM.Event.Types/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 161);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foreign = __webpack_require__(/*! ../Data.Foreign */ 162);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var EventType = function (x) {
	    return x;
	};
	var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
	var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
	var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
	var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
	var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
	var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
	var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
	var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
	var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
	var readEventTarget = function ($3) {
	    return Data_Newtype.wrap(Control_Monad_Except_Trans.newtypeExceptT)(Data_Newtype.wrap(Data_Identity.newtypeIdentity)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($4) {
	        return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.ForeignError.create($4));
	    })($foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create)($3))));
	};
	var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
	var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
	var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
	var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var popStateEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var ordEventType = Data_Ord.ordString;
	var newtypeEventType = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, EventType);
	var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var eqEventType = Data_Eq.eqString;
	var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var clipboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    EventType: EventType,
	    readEventTarget: readEventTarget,
	    customEventToEvent: customEventToEvent,
	    readCustomEvent: readCustomEvent,
	    uiEventToEvent: uiEventToEvent,
	    readUIEvent: readUIEvent,
	    focusEventToEvent: focusEventToEvent,
	    readFocusEvent: readFocusEvent,
	    mouseEventToEvent: mouseEventToEvent,
	    readMouseEvent: readMouseEvent,
	    wheelEventToEvent: wheelEventToEvent,
	    readWheelEvent: readWheelEvent,
	    touchEventToEvent: touchEventToEvent,
	    readTouchEvent: readTouchEvent,
	    inputEventToEvent: inputEventToEvent,
	    readInputEvent: readInputEvent,
	    keyboardEventToEvent: keyboardEventToEvent,
	    readKeyboardEvent: readKeyboardEvent,
	    compositionEventToEvent: compositionEventToEvent,
	    readCompositionEvent: readCompositionEvent,
	    popStateEventToEvent: popStateEventToEvent,
	    readPopStateEvent: readPopStateEvent,
	    progressEventToEvent: progressEventToEvent,
	    readProgressEvent: readProgressEvent,
	    clipboardEventToEvent: clipboardEventToEvent,
	    readClipboardEvent: readClipboardEvent,
	    newtypeEventType: newtypeEventType,
	    eqEventType: eqEventType,
	    ordEventType: ordEventType
	};


/***/ }),
/* 161 */
/*!*******************************************!*\
  !*** ./output/DOM.Event.Types/foreign.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	/* global EventTarget */
	"use strict";

	exports._readEventTarget = function (left) {
	  return function (right) {
	    return function (foreign) {
	      return foreign instanceof EventTarget ? right(foreign) : left("Value is not an EventTarget");
	    };
	  };
	};


/***/ }),
/* 162 */
/*!**************************************!*\
  !*** ./output/Data.Foreign/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 163);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Except = __webpack_require__(/*! ../Control.Monad.Except */ 32);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Int = __webpack_require__(/*! ../Data.Int */ 164);
	var Data_List_NonEmpty = __webpack_require__(/*! ../Data.List.NonEmpty */ 172);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_String = __webpack_require__(/*! ../Data.String */ 150);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var ForeignError = (function () {
	    function ForeignError(value0) {
	        this.value0 = value0;
	    };
	    ForeignError.create = function (value0) {
	        return new ForeignError(value0);
	    };
	    return ForeignError;
	})();
	var TypeMismatch = (function () {
	    function TypeMismatch(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    TypeMismatch.create = function (value0) {
	        return function (value1) {
	            return new TypeMismatch(value0, value1);
	        };
	    };
	    return TypeMismatch;
	})();
	var ErrorAtIndex = (function () {
	    function ErrorAtIndex(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtIndex.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtIndex(value0, value1);
	        };
	    };
	    return ErrorAtIndex;
	})();
	var ErrorAtProperty = (function () {
	    function ErrorAtProperty(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtProperty.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtProperty(value0, value1);
	        };
	    };
	    return ErrorAtProperty;
	})();
	var JSONError = (function () {
	    function JSONError(value0) {
	        this.value0 = value0;
	    };
	    JSONError.create = function (value0) {
	        return new JSONError(value0);
	    };
	    return JSONError;
	})();
	var showForeignError = new Data_Show.Show(function (v) {
	    if (v instanceof ForeignError) {
	        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
	    };
	    if (v instanceof ErrorAtIndex) {
	        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
	    };
	    if (v instanceof ErrorAtProperty) {
	        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
	    };
	    if (v instanceof JSONError) {
	        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
	    };
	    if (v instanceof TypeMismatch) {
	        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
	});
	var renderForeignError = function (v) {
	    if (v instanceof ForeignError) {
	        return v.value0;
	    };
	    if (v instanceof ErrorAtIndex) {
	        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof ErrorAtProperty) {
	        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof JSONError) {
	        return "JSON error: " + v.value0;
	    };
	    if (v instanceof TypeMismatch) {
	        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 74, column 1 - line 74, column 45: " + [ v.constructor.name ]);
	};
	var readUndefined = function (value) {
	    if ($foreign.isUndefined(value)) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
	    };
	    if (Data_Boolean.otherwise) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 155, column 1 - line 155, column 46: " + [ value.constructor.name ]);
	};
	var readNullOrUndefined = function (value) {
	    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
	    };
	    if (Data_Boolean.otherwise) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 160, column 1 - line 160, column 52: " + [ value.constructor.name ]);
	};
	var readNull = function (value) {
	    if ($foreign.isNull(value)) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
	    };
	    if (Data_Boolean.otherwise) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 150, column 41: " + [ value.constructor.name ]);
	};
	var fail = function ($121) {
	    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
	};
	var readArray = function (value) {
	    if ($foreign.isArray(value)) {
	        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
	    };
	    if (Data_Boolean.otherwise) {
	        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
	};
	var unsafeReadTagged = function (tag) {
	    return function (value) {
	        if ($foreign.tagOf(value) === tag) {
	            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
	        };
	        if (Data_Boolean.otherwise) {
	            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
	        };
	        throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
	    };
	};
	var readBoolean = unsafeReadTagged("Boolean");
	var readNumber = unsafeReadTagged("Number");
	var readInt = function (value) {
	    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
	    var fromNumber = function ($122) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
	    };
	    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
	};
	var readString = unsafeReadTagged("String");
	var readChar = function (value) {
	    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
	    var fromString = function ($123) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($123));
	    };
	    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
	};
	var eqForeignError = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof ForeignError && y instanceof ForeignError) {
	            return x.value0 === y.value0;
	        };
	        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
	            return x.value0 === y.value0 && x.value1 === y.value1;
	        };
	        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
	            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
	            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof JSONError && y instanceof JSONError) {
	            return x.value0 === y.value0;
	        };
	        return false;
	    };
	});
	var ordForeignError = new Data_Ord.Ord(function () {
	    return eqForeignError;
	}, function (x) {
	    return function (y) {
	        if (x instanceof ForeignError && y instanceof ForeignError) {
	            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	        };
	        if (x instanceof ForeignError) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof ForeignError) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
	            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	            if (v instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if (v instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
	        };
	        if (x instanceof TypeMismatch) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof TypeMismatch) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
	            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
	            if (v instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if (v instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtIndex) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof ErrorAtIndex) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
	            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	            if (v instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if (v instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtProperty) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof ErrorAtProperty) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof JSONError && y instanceof JSONError) {
	            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	        };
	        throw new Error("Failed pattern match at Data.Foreign line 62, column 8 - line 62, column 52: " + [ x.constructor.name, y.constructor.name ]);
	    };
	});
	module.exports = {
	    ForeignError: ForeignError,
	    TypeMismatch: TypeMismatch,
	    ErrorAtIndex: ErrorAtIndex,
	    ErrorAtProperty: ErrorAtProperty,
	    JSONError: JSONError,
	    renderForeignError: renderForeignError,
	    unsafeReadTagged: unsafeReadTagged,
	    readString: readString,
	    readChar: readChar,
	    readBoolean: readBoolean,
	    readNumber: readNumber,
	    readInt: readInt,
	    readArray: readArray,
	    readNull: readNull,
	    readUndefined: readUndefined,
	    readNullOrUndefined: readNullOrUndefined,
	    fail: fail,
	    eqForeignError: eqForeignError,
	    ordForeignError: ordForeignError,
	    showForeignError: showForeignError,
	    toForeign: $foreign.toForeign,
	    unsafeFromForeign: $foreign.unsafeFromForeign,
	    typeOf: $foreign.typeOf,
	    tagOf: $foreign.tagOf,
	    isNull: $foreign.isNull,
	    isUndefined: $foreign.isUndefined,
	    isArray: $foreign.isArray
	};


/***/ }),
/* 163 */
/*!****************************************!*\
  !*** ./output/Data.Foreign/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.toForeign = function (value) {
	  return value;
	};

	exports.unsafeFromForeign = function (value) {
	  return value;
	};

	exports.typeOf = function (value) {
	  return typeof value;
	};

	exports.tagOf = function (value) {
	  return Object.prototype.toString.call(value).slice(8, -1);
	};

	exports.isNull = function (value) {
	  return value === null;
	};

	exports.isUndefined = function (value) {
	  return value === undefined;
	};

	exports.isArray = Array.isArray || function (value) {
	  return Object.prototype.toString.call(value) === "[object Array]";
	};


/***/ }),
/* 164 */
/*!**********************************!*\
  !*** ./output/Data.Int/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 165);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_DivisionRing = __webpack_require__(/*! ../Data.DivisionRing */ 52);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Field = __webpack_require__(/*! ../Data.Field */ 55);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Int_Bits = __webpack_require__(/*! ../Data.Int.Bits */ 166);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Global = __webpack_require__(/*! ../Global */ 168);
	var $$Math = __webpack_require__(/*! ../Math */ 170);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Radix = function (x) {
	    return x;
	};
	var Even = (function () {
	    function Even() {

	    };
	    Even.value = new Even();
	    return Even;
	})();
	var Odd = (function () {
	    function Odd() {

	    };
	    Odd.value = new Odd();
	    return Odd;
	})();
	var showParity = new Data_Show.Show(function (v) {
	    if (v instanceof Even) {
	        return "Even";
	    };
	    if (v instanceof Odd) {
	        return "Odd";
	    };
	    throw new Error("Failed pattern match at Data.Int line 110, column 1 - line 110, column 35: " + [ v.constructor.name ]);
	});
	var radix = function (n) {
	    if (n >= 2 && n <= 36) {
	        return new Data_Maybe.Just(n);
	    };
	    if (Data_Boolean.otherwise) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Int line 193, column 1 - line 193, column 28: " + [ n.constructor.name ]);
	};
	var odd = function (x) {
	    return (x & 1) !== 0;
	};
	var octal = 8;
	var hexadecimal = 16;
	var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var fromString = fromStringAs(10);
	var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unsafeClamp = function (x) {
	    if (x === Global.infinity) {
	        return 0;
	    };
	    if (x === -Global.infinity) {
	        return 0;
	    };
	    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
	        return Data_Bounded.top(Data_Bounded.boundedInt);
	    };
	    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
	        return Data_Bounded.bottom(Data_Bounded.boundedInt);
	    };
	    if (Data_Boolean.otherwise) {
	        return Data_Maybe.fromMaybe(0)(fromNumber(x));
	    };
	    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
	};
	var round = function ($23) {
	    return unsafeClamp($$Math.round($23));
	};
	var floor = function ($24) {
	    return unsafeClamp($$Math.floor($24));
	};
	var even = function (x) {
	    return (x & 1) === 0;
	};
	var parity = function (n) {
	    var $14 = even(n);
	    if ($14) {
	        return Even.value;
	    };
	    return Odd.value;
	};
	var eqParity = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof Even && y instanceof Even) {
	            return true;
	        };
	        if (x instanceof Odd && y instanceof Odd) {
	            return true;
	        };
	        return false;
	    };
	});
	var ordParity = new Data_Ord.Ord(function () {
	    return eqParity;
	}, function (x) {
	    return function (y) {
	        if (x instanceof Even && y instanceof Even) {
	            return Data_Ordering.EQ.value;
	        };
	        if (x instanceof Even) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof Even) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof Odd && y instanceof Odd) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at Data.Int line 108, column 8 - line 108, column 40: " + [ x.constructor.name, y.constructor.name ]);
	    };
	});
	var semiringParity = new Data_Semiring.Semiring(function (x) {
	    return function (y) {
	        var $19 = Data_Eq.eq(eqParity)(x)(y);
	        if ($19) {
	            return Even.value;
	        };
	        return Odd.value;
	    };
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Odd && v1 instanceof Odd) {
	            return Odd.value;
	        };
	        return Even.value;
	    };
	}, Odd.value, Even.value);
	var ringParity = new Data_Ring.Ring(function () {
	    return semiringParity;
	}, Data_Semiring.add(semiringParity));
	var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
	    return ringParity;
	}, Control_Category.id(Control_Category.categoryFn));
	var decimal = 10;
	var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
	    return ringParity;
	});
	var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
	    return commutativeRingParity;
	}, function (v) {
	    if (v instanceof Even) {
	        return 0;
	    };
	    if (v instanceof Odd) {
	        return 1;
	    };
	    throw new Error("Failed pattern match at Data.Int line 130, column 1 - line 130, column 53: " + [ v.constructor.name ]);
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	}, function (v) {
	    return function (v1) {
	        return Even.value;
	    };
	});
	var fieldParity = new Data_Field.Field(function () {
	    return euclideanRingParity;
	});
	var ceil = function ($25) {
	    return unsafeClamp($$Math.ceil($25));
	};
	var boundedParity = new Data_Bounded.Bounded(function () {
	    return ordParity;
	}, Even.value, Odd.value);
	var binary = 2;
	var base36 = 36;
	module.exports = {
	    fromNumber: fromNumber,
	    ceil: ceil,
	    floor: floor,
	    round: round,
	    fromString: fromString,
	    radix: radix,
	    binary: binary,
	    octal: octal,
	    decimal: decimal,
	    hexadecimal: hexadecimal,
	    base36: base36,
	    fromStringAs: fromStringAs,
	    Even: Even,
	    Odd: Odd,
	    parity: parity,
	    even: even,
	    odd: odd,
	    eqParity: eqParity,
	    ordParity: ordParity,
	    showParity: showParity,
	    boundedParity: boundedParity,
	    semiringParity: semiringParity,
	    ringParity: ringParity,
	    commutativeRingParity: commutativeRingParity,
	    euclideanRingParity: euclideanRingParity,
	    divisionRingParity: divisionRingParity,
	    fieldParity: fieldParity,
	    toNumber: $foreign.toNumber,
	    toStringAs: $foreign.toStringAs,
	    pow: $foreign.pow
	};


/***/ }),
/* 165 */
/*!************************************!*\
  !*** ./output/Data.Int/foreign.js ***!
  \************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Data.Int

	exports.fromNumberImpl = function (just) {
	  return function (nothing) {
	    return function (n) {
	      /* jshint bitwise: false */
	      return (n | 0) === n ? just(n) : nothing;
	    };
	  };
	};

	exports.toNumber = function (n) {
	  return n;
	};

	exports.fromStringAsImpl = function (just) {
	  return function (nothing) {
	    return function (radix) {
	      var digits;
	      if (radix < 11) {
	        digits = "[0-" + (radix - 1).toString() + "]";
	      } else if (radix === 11) {
	        digits = "[0-9a]";
	      } else {
	        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
	      }
	      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

	      return function (s) {
	        /* jshint bitwise: false */
	        if (pattern.test(s)) {
	          var i = parseInt(s, radix);
	          return (i | 0) === i ? just(i) : nothing;
	        } else {
	          return nothing;
	        }
	      };
	    };
	  };
	};

	exports.toStringAs = function (radix) {
	  return function (i) {
	    return i.toString(radix);
	  };
	};

	exports.pow = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return Math.pow(x,y) | 0;
	  };
	};


/***/ }),
/* 166 */
/*!***************************************!*\
  !*** ./output/Data.Int.Bits/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 167);
	module.exports = {
	    and: $foreign.and,
	    or: $foreign.or,
	    xor: $foreign.xor,
	    shl: $foreign.shl,
	    shr: $foreign.shr,
	    zshr: $foreign.zshr,
	    complement: $foreign.complement
	};


/***/ }),
/* 167 */
/*!*****************************************!*\
  !*** ./output/Data.Int.Bits/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	// module Data.Int.Bits

	exports.and = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 & n2;
	  };
	};

	exports.or = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 | n2;
	  };
	};

	exports.xor = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 ^ n2;
	  };
	};

	exports.shl = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 << n2;
	  };
	};

	exports.shr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >> n2;
	  };
	};

	exports.zshr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >>> n2;
	  };
	};

	exports.complement = function (n) {
	  /* jshint bitwise: false */
	  return ~n;
	};


/***/ }),
/* 168 */
/*!********************************!*\
  !*** ./output/Global/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 169);
	module.exports = {
	    nan: $foreign.nan,
	    "isNaN": $foreign["isNaN"],
	    infinity: $foreign.infinity,
	    "isFinite": $foreign["isFinite"],
	    readInt: $foreign.readInt,
	    readFloat: $foreign.readFloat,
	    "decodeURI": $foreign["decodeURI"],
	    "encodeURI": $foreign["encodeURI"],
	    "decodeURIComponent": $foreign["decodeURIComponent"],
	    "encodeURIComponent": $foreign["encodeURIComponent"]
	};


/***/ }),
/* 169 */
/*!**********************************!*\
  !*** ./output/Global/foreign.js ***!
  \**********************************/
/***/ (function(module, exports) {

	/* globals exports */
	"use strict";

	// module Global

	exports.nan = NaN;

	exports.isNaN = isNaN;

	exports.infinity = Infinity;

	exports.isFinite = isFinite;

	exports.readInt = function (radix) {
	  return function (n) {
	    return parseInt(n, radix);
	  };
	};

	exports.readFloat = parseFloat;

	exports.decodeURI = decodeURI;
	exports.encodeURI = encodeURI;
	exports.decodeURIComponent = decodeURIComponent;
	exports.encodeURIComponent = encodeURIComponent;


/***/ }),
/* 170 */
/*!******************************!*\
  !*** ./output/Math/index.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 171);
	module.exports = {
	    abs: $foreign.abs,
	    acos: $foreign.acos,
	    asin: $foreign.asin,
	    atan: $foreign.atan,
	    atan2: $foreign.atan2,
	    ceil: $foreign.ceil,
	    cos: $foreign.cos,
	    exp: $foreign.exp,
	    floor: $foreign.floor,
	    log: $foreign.log,
	    max: $foreign.max,
	    min: $foreign.min,
	    pow: $foreign.pow,
	    round: $foreign.round,
	    sin: $foreign.sin,
	    sqrt: $foreign.sqrt,
	    tan: $foreign.tan,
	    trunc: $foreign.trunc,
	    remainder: $foreign.remainder,
	    e: $foreign.e,
	    ln2: $foreign.ln2,
	    ln10: $foreign.ln10,
	    log2e: $foreign.log2e,
	    log10e: $foreign.log10e,
	    pi: $foreign.pi,
	    tau: $foreign.tau,
	    sqrt1_2: $foreign.sqrt1_2,
	    sqrt2: $foreign.sqrt2
	};


/***/ }),
/* 171 */
/*!********************************!*\
  !*** ./output/Math/foreign.js ***!
  \********************************/
/***/ (function(module, exports) {

	"use strict";

	// module Math

	exports.abs = Math.abs;

	exports.acos = Math.acos;

	exports.asin = Math.asin;

	exports.atan = Math.atan;

	exports.atan2 = function (y) {
	  return function (x) {
	    return Math.atan2(y, x);
	  };
	};

	exports.ceil = Math.ceil;

	exports.cos = Math.cos;

	exports.exp = Math.exp;

	exports.floor = Math.floor;

	exports.trunc = Math.trunc || function (n) {
	  return n < 0 ? Math.ceil(n) : Math.floor(n);
	};

	exports.log = Math.log;

	exports.max = function (n1) {
	  return function (n2) {
	    return Math.max(n1, n2);
	  };
	};

	exports.min = function (n1) {
	  return function (n2) {
	    return Math.min(n1, n2);
	  };
	};

	exports.pow = function (n) {
	  return function (p) {
	    return Math.pow(n, p);
	  };
	};

	exports.remainder = function (n) {
	  return function (m) {
	    return n % m;
	  };
	};

	exports.round = Math.round;

	exports.sin = Math.sin;

	exports.sqrt = Math.sqrt;

	exports.tan = Math.tan;

	exports.e = Math.E;

	exports.ln2 = Math.LN2;

	exports.ln10 = Math.LN10;

	exports.log2e = Math.LOG2E;

	exports.log10e = Math.LOG10E;

	exports.pi = Math.PI;

	exports.tau = 2 * Math.PI;

	exports.sqrt1_2 = Math.SQRT1_2;

	exports.sqrt2 = Math.SQRT2;


/***/ }),
/* 172 */
/*!********************************************!*\
  !*** ./output/Data.List.NonEmpty/index.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_List = __webpack_require__(/*! ../Data.List */ 173);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semigroup_Foldable = __webpack_require__(/*! ../Data.Semigroup.Foldable */ 143);
	var Data_Semigroup_Traversable = __webpack_require__(/*! ../Data.Semigroup.Traversable */ 148);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var zipWith = function (f) {
	    return function (v) {
	        return function (v1) {
	            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
	        };
	    };
	};
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var zip = zipWith(Data_Tuple.Tuple.create);
	var wrappedOperation2 = function (name) {
	    return function (f) {
	        return function (v) {
	            return function (v1) {
	                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
	                if (v2 instanceof Data_List_Types.Cons) {
	                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
	                };
	                if (v2 instanceof Data_List_Types.Nil) {
	                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
	                };
	                throw new Error("Failed pattern match at Data.List.NonEmpty line 101, column 3 - line 103, column 81: " + [ v2.constructor.name ]);
	            };
	        };
	    };
	};
	var wrappedOperation = function (name) {
	    return function (f) {
	        return function (v) {
	            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
	            if (v1 instanceof Data_List_Types.Cons) {
	                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
	            };
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
	            };
	            throw new Error("Failed pattern match at Data.List.NonEmpty line 88, column 3 - line 90, column 81: " + [ v1.constructor.name ]);
	        };
	    };
	};
	var updateAt = function (i) {
	    return function (a) {
	        return function (v) {
	            if (i === 0) {
	                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($156) {
	                    return Data_List_Types.NonEmptyList((function (v1) {
	                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
	                    })($156));
	                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
	            };
	            throw new Error("Failed pattern match at Data.List.NonEmpty line 187, column 1 - line 187, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
	        };
	    };
	};
	var unzip = function (ts) {
	    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
	};
	var unsnoc = function (v) {
	    var v1 = Data_List.unsnoc(v.value1);
	    if (v1 instanceof Data_Maybe.Nothing) {
	        return {
	            init: Data_List_Types.Nil.value,
	            last: v.value0
	        };
	    };
	    if (v1 instanceof Data_Maybe.Just) {
	        return {
	            init: new Data_List_Types.Cons(v.value0, v1.value0.init),
	            last: v1.value0.last
	        };
	    };
	    throw new Error("Failed pattern match at Data.List.NonEmpty line 149, column 35 - line 151, column 50: " + [ v1.constructor.name ]);
	};
	var unionBy = function ($157) {
	    return wrappedOperation2("unionBy")(Data_List.unionBy($157));
	};
	var union = function (dictEq) {
	    return wrappedOperation2("union")(Data_List.union(dictEq));
	};
	var uncons = function (v) {
	    return {
	        head: v.value0,
	        tail: v.value1
	    };
	};
	var toList = function (v) {
	    return new Data_List_Types.Cons(v.value0, v.value1);
	};
	var toUnfoldable = function (dictUnfoldable) {
	    return function ($158) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
	                return new Data_Tuple.Tuple(rec.head, rec.tail);
	            })(Data_List.uncons(xs));
	        })(toList($158));
	    };
	};
	var tail = function (v) {
	    return v.value1;
	};
	var sortBy = function ($159) {
	    return wrappedOperation("sortBy")(Data_List.sortBy($159));
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var snoc = function (v) {
	    return function (y) {
	        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
	    };
	};
	var singleton = function ($160) {
	    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
	};
	var reverse = wrappedOperation("reverse")(Data_List.reverse);
	var nubBy = function ($161) {
	    return wrappedOperation("nubBy")(Data_List.nubBy($161));
	};
	var nub = function (dictEq) {
	    return wrappedOperation("nub")(Data_List.nub(dictEq));
	};
	var modifyAt = function (i) {
	    return function (f) {
	        return function (v) {
	            if (i === 0) {
	                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($162) {
	                    return Data_List_Types.NonEmptyList((function (v1) {
	                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
	                    })($162));
	                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
	            };
	            throw new Error("Failed pattern match at Data.List.NonEmpty line 192, column 1 - line 192, column 82: " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
	        };
	    };
	};
	var mapWithIndex = function ($163) {
	    return wrappedOperation("mapWithIndex")(Data_List.mapWithIndex($163));
	};
	var lift = function (f) {
	    return function (v) {
	        return f(new Data_List_Types.Cons(v.value0, v.value1));
	    };
	};
	var mapMaybe = function ($164) {
	    return lift(Data_List.mapMaybe($164));
	};
	var partition = function ($165) {
	    return lift(Data_List.partition($165));
	};
	var span = function ($166) {
	    return lift(Data_List.span($166));
	};
	var take = function ($167) {
	    return lift(Data_List.take($167));
	};
	var takeWhile = function ($168) {
	    return lift(Data_List.takeWhile($168));
	};
	var length = function (v) {
	    return 1 + Data_List.length(v.value1) | 0;
	};
	var last = function (v) {
	    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
	};
	var intersectBy = function ($169) {
	    return wrappedOperation2("intersectBy")(Data_List.intersectBy($169));
	};
	var intersect = function (dictEq) {
	    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
	};
	var insertAt = function (i) {
	    return function (a) {
	        return function (v) {
	            if (i === 0) {
	                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($170) {
	                    return Data_List_Types.NonEmptyList((function (v1) {
	                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
	                    })($170));
	                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
	            };
	            throw new Error("Failed pattern match at Data.List.NonEmpty line 182, column 1 - line 182, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
	        };
	    };
	};
	var init = function (v) {
	    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
	        return new Data_List_Types.Cons(v.value0, v1);
	    })(Data_List.init(v.value1));
	};
	var index = function (v) {
	    return function (i) {
	        if (i === 0) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        if (Data_Boolean.otherwise) {
	            return Data_List.index(v.value1)(i - 1 | 0);
	        };
	        throw new Error("Failed pattern match at Data.List.NonEmpty line 156, column 1 - line 156, column 52: " + [ v.constructor.name, i.constructor.name ]);
	    };
	};
	var head = function (v) {
	    return v.value0;
	};
	var groupBy = function ($171) {
	    return wrappedOperation("groupBy")(Data_List.groupBy($171));
	};
	var group$prime = function (dictOrd) {
	    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
	};
	var group = function (dictEq) {
	    return wrappedOperation("group")(Data_List.group(dictEq));
	};
	var fromList = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
	    };
	    throw new Error("Failed pattern match at Data.List.NonEmpty line 117, column 1 - line 117, column 57: " + [ v.constructor.name ]);
	};
	var fromFoldable = function (dictFoldable) {
	    return function ($172) {
	        return fromList(Data_List.fromFoldable(dictFoldable)($172));
	    };
	};
	var foldM = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return function (v) {
	                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
	                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
	                });
	            };
	        };
	    };
	};
	var findLastIndex = function (f) {
	    return function (v) {
	        var v1 = Data_List.findLastIndex(f)(v.value1);
	        if (v1 instanceof Data_Maybe.Just) {
	            return new Data_Maybe.Just(v1.value0 + 1 | 0);
	        };
	        if (v1 instanceof Data_Maybe.Nothing) {
	            if (f(v.value0)) {
	                return new Data_Maybe.Just(0);
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Maybe.Nothing.value;
	            };
	        };
	        throw new Error("Failed pattern match at Data.List.NonEmpty line 176, column 3 - line 180, column 29: " + [ v1.constructor.name ]);
	    };
	};
	var findIndex = function (f) {
	    return function (v) {
	        if (f(v.value0)) {
	            return new Data_Maybe.Just(0);
	        };
	        if (Data_Boolean.otherwise) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
	                return v1 + 1 | 0;
	            })(Data_List.findIndex(f)(v.value1));
	        };
	        throw new Error("Failed pattern match at Data.List.NonEmpty line 169, column 1 - line 169, column 69: " + [ f.constructor.name, v.constructor.name ]);
	    };
	};
	var filterM = function (dictMonad) {
	    return function ($173) {
	        return lift(Data_List.filterM(dictMonad)($173));
	    };
	};
	var filter = function ($174) {
	    return lift(Data_List.filter($174));
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function ($175) {
	    return lift(Data_List.dropWhile($175));
	};
	var drop = function ($176) {
	    return lift(Data_List.drop($176));
	};
	var cons = function (y) {
	    return function (v) {
	        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
	    };
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
	var concat = function (v) {
	    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.id(Control_Category.categoryFn));
	};
	var catMaybes = lift(Data_List.catMaybes);
	var appendFoldable = function (dictFoldable) {
	    return function (v) {
	        return function (ys) {
	            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
	        };
	    };
	};
	module.exports = {
	    toUnfoldable: toUnfoldable,
	    fromFoldable: fromFoldable,
	    fromList: fromList,
	    toList: toList,
	    singleton: singleton,
	    length: length,
	    cons: cons,
	    snoc: snoc,
	    head: head,
	    last: last,
	    tail: tail,
	    init: init,
	    uncons: uncons,
	    unsnoc: unsnoc,
	    index: index,
	    elemIndex: elemIndex,
	    elemLastIndex: elemLastIndex,
	    findIndex: findIndex,
	    findLastIndex: findLastIndex,
	    insertAt: insertAt,
	    updateAt: updateAt,
	    modifyAt: modifyAt,
	    reverse: reverse,
	    concat: concat,
	    concatMap: concatMap,
	    filter: filter,
	    filterM: filterM,
	    mapMaybe: mapMaybe,
	    catMaybes: catMaybes,
	    appendFoldable: appendFoldable,
	    mapWithIndex: mapWithIndex,
	    sort: sort,
	    sortBy: sortBy,
	    take: take,
	    takeWhile: takeWhile,
	    drop: drop,
	    dropWhile: dropWhile,
	    span: span,
	    group: group,
	    "group'": group$prime,
	    groupBy: groupBy,
	    partition: partition,
	    nub: nub,
	    nubBy: nubBy,
	    union: union,
	    unionBy: unionBy,
	    intersect: intersect,
	    intersectBy: intersectBy,
	    zipWith: zipWith,
	    zipWithA: zipWithA,
	    zip: zip,
	    unzip: unzip,
	    foldM: foldM
	};


/***/ }),
/* 173 */
/*!***********************************!*\
  !*** ./output/Data.List/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_FunctorWithIndex = __webpack_require__(/*! ../Data.FunctorWithIndex */ 141);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Pattern = function (x) {
	    return x;
	};
	var updateAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
	                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(updateAt(v - 1 | 0)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
	    return function (v1) {
	        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
	    };
	})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
	var uncons = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just({
	            head: v.value0,
	            tail: v.value1
	        });
	    };
	    throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
	};
	var toUnfoldable = function (dictUnfoldable) {
	    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
	            return new Data_Tuple.Tuple(rec.head, rec.tail);
	        })(uncons(xs));
	    });
	};
	var tail = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just(v.value1);
	    };
	    throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
	};
	var stripPrefix = function (dictEq) {
	    return function (v) {
	        return function (s) {
	            var go = function (prefix) {
	                return function (input) {
	                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
	                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
	                            a: prefix.value1,
	                            b: input.value1
	                        }));
	                    };
	                    if (prefix instanceof Data_List_Types.Nil) {
	                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
	                    };
	                    return Data_Maybe.Nothing.value;
	                };
	            };
	            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
	        };
	    };
	};
	var span = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
	            var v2 = span(v)(v1.value1);
	            return {
	                init: new Data_List_Types.Cons(v1.value0, v2.init),
	                rest: v2.rest
	            };
	        };
	        return {
	            init: Data_List_Types.Nil.value,
	            rest: v1
	        };
	    };
	};
	var snoc = function (xs) {
	    return function (x) {
	        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
	    };
	};
	var singleton = function (a) {
	    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
	};
	var sortBy = function (cmp) {
	    var merge = function (v) {
	        return function (v1) {
	            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
	                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
	                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
	                };
	            };
	            if (v instanceof Data_List_Types.Nil) {
	                return v1;
	            };
	            if (v1 instanceof Data_List_Types.Nil) {
	                return v;
	            };
	            throw new Error("Failed pattern match at Data.List line 473, column 3 - line 473, column 38: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	    var mergePairs = function (v) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
	            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
	        };
	        return v;
	    };
	    var mergeAll = function ($copy_v) {
	        var $tco_done = false;
	        var $tco_result;
	        function $tco_loop(v) {
	            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
	                $tco_done = true;
	                return v.value0;
	            };
	            $copy_v = mergePairs(v);
	            return;
	        };
	        while (!$tco_done) {
	            $tco_result = $tco_loop($copy_v);
	        };
	        return $tco_result;
	    };
	    var sequences = function (v) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
	            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
	                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
	            };
	            if (Data_Boolean.otherwise) {
	                return ascending(v.value1.value0)(function (v1) {
	                    return new Data_List_Types.Cons(v.value0, v1);
	                })(v.value1.value1);
	            };
	        };
	        return singleton(v);
	    };
	    var descending = function ($copy_a) {
	        return function ($copy_as) {
	            return function ($copy_v) {
	                var $tco_var_a = $copy_a;
	                var $tco_var_as = $copy_as;
	                var $tco_done = false;
	                var $tco_result;
	                function $tco_loop(a, as, v) {
	                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                        $tco_var_a = v.value0;
	                        $tco_var_as = new Data_List_Types.Cons(a, as);
	                        $copy_v = v.value1;
	                        return;
	                    };
	                    $tco_done = true;
	                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
	                };
	                while (!$tco_done) {
	                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
	                };
	                return $tco_result;
	            };
	        };
	    };
	    var ascending = function ($copy_a) {
	        return function ($copy_as) {
	            return function ($copy_v) {
	                var $tco_var_a = $copy_a;
	                var $tco_var_as = $copy_as;
	                var $tco_done = false;
	                var $tco_result;
	                function $tco_loop(a, as, v) {
	                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                        $tco_var_a = v.value0;
	                        $tco_var_as = function (ys) {
	                            return as(new Data_List_Types.Cons(a, ys));
	                        };
	                        $copy_v = v.value1;
	                        return;
	                    };
	                    $tco_done = true;
	                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
	                };
	                while (!$tco_done) {
	                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
	                };
	                return $tco_result;
	            };
	        };
	    };
	    return function ($333) {
	        return mergeAll(sequences($333));
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var showPattern = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
	    });
	};
	var reverse = (function () {
	    var go = function ($copy_acc) {
	        return function ($copy_v) {
	            var $tco_var_acc = $copy_acc;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(acc, v) {
	                if (v instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return acc;
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
	                    $copy_v = v.value1;
	                    return;
	                };
	                throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_acc, $copy_v);
	            };
	            return $tco_result;
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	})();
	var take = (function () {
	    var go = function ($copy_acc) {
	        return function ($copy_v) {
	            return function ($copy_v1) {
	                var $tco_var_acc = $copy_acc;
	                var $tco_var_v = $copy_v;
	                var $tco_done = false;
	                var $tco_result;
	                function $tco_loop(acc, v, v1) {
	                    if (v < 1) {
	                        $tco_done = true;
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Data_List_Types.Nil) {
	                        $tco_done = true;
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Data_List_Types.Cons) {
	                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
	                        $tco_var_v = v - 1 | 0;
	                        $copy_v1 = v1.value1;
	                        return;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 520, column 3 - line 520, column 35: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
	                };
	                while (!$tco_done) {
	                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
	                };
	                return $tco_result;
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	})();
	var takeWhile = function (p) {
	    var go = function ($copy_acc) {
	        return function ($copy_v) {
	            var $tco_var_acc = $copy_acc;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(acc, v) {
	                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
	                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
	                    $copy_v = v.value1;
	                    return;
	                };
	                $tco_done = true;
	                return reverse(acc);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_acc, $copy_v);
	            };
	            return $tco_result;
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var unsnoc = function (lst) {
	    var go = function ($copy_v) {
	        return function ($copy_acc) {
	            var $tco_var_v = $copy_v;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(v, acc) {
	                if (v instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return Data_Maybe.Nothing.value;
	                };
	                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return new Data_Maybe.Just({
	                        revInit: acc,
	                        last: v.value0
	                    });
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    $tco_var_v = v.value1;
	                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
	                    return;
	                };
	                throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_v, $copy_acc);
	            };
	            return $tco_result;
	        };
	    };
	    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
	        return {
	            init: reverse(h.revInit),
	            last: h.last
	        };
	    })(go(lst)(Data_List_Types.Nil.value));
	};
	var zipWith = function (f) {
	    return function (xs) {
	        return function (ys) {
	            var go = function ($copy_v) {
	                return function ($copy_v1) {
	                    return function ($copy_acc) {
	                        var $tco_var_v = $copy_v;
	                        var $tco_var_v1 = $copy_v1;
	                        var $tco_done = false;
	                        var $tco_result;
	                        function $tco_loop(v, v1, acc) {
	                            if (v instanceof Data_List_Types.Nil) {
	                                $tco_done = true;
	                                return acc;
	                            };
	                            if (v1 instanceof Data_List_Types.Nil) {
	                                $tco_done = true;
	                                return acc;
	                            };
	                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
	                                $tco_var_v = v.value1;
	                                $tco_var_v1 = v1.value1;
	                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
	                                return;
	                            };
	                            throw new Error("Failed pattern match at Data.List line 708, column 3 - line 708, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
	                        };
	                        while (!$tco_done) {
	                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
	                        };
	                        return $tco_result;
	                    };
	                };
	            };
	            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
	        };
	    };
	};
	var zip = zipWith(Data_Tuple.Tuple.create);
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var range = function (start) {
	    return function (end) {
	        if (start === end) {
	            return singleton(start);
	        };
	        if (Data_Boolean.otherwise) {
	            var go = function ($copy_s) {
	                return function ($copy_e) {
	                    return function ($copy_step) {
	                        return function ($copy_rest) {
	                            var $tco_var_s = $copy_s;
	                            var $tco_var_e = $copy_e;
	                            var $tco_var_step = $copy_step;
	                            var $tco_done = false;
	                            var $tco_result;
	                            function $tco_loop(s, e, step, rest) {
	                                if (s === e) {
	                                    $tco_done = true;
	                                    return new Data_List_Types.Cons(s, rest);
	                                };
	                                if (Data_Boolean.otherwise) {
	                                    $tco_var_s = s + step | 0;
	                                    $tco_var_e = e;
	                                    $tco_var_step = step;
	                                    $copy_rest = new Data_List_Types.Cons(s, rest);
	                                    return;
	                                };
	                                throw new Error("Failed pattern match at Data.List line 148, column 3 - line 149, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
	                            };
	                            while (!$tco_done) {
	                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
	                            };
	                            return $tco_result;
	                        };
	                    };
	                };
	            };
	            return go(end)(start)((function () {
	                var $219 = start > end;
	                if ($219) {
	                    return 1;
	                };
	                return -1 | 0;
	            })())(Data_List_Types.Nil.value);
	        };
	        throw new Error("Failed pattern match at Data.List line 144, column 1 - line 144, column 32: " + [ start.constructor.name, end.constructor.name ]);
	    };
	};
	var partition = function (p) {
	    return function (xs) {
	        var select = function (x) {
	            return function (v) {
	                var $222 = p(x);
	                if ($222) {
	                    return {
	                        no: v.no,
	                        yes: new Data_List_Types.Cons(x, v.yes)
	                    };
	                };
	                return {
	                    no: new Data_List_Types.Cons(x, v.no),
	                    yes: v.yes
	                };
	            };
	        };
	        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
	            no: Data_List_Types.Nil.value,
	            yes: Data_List_Types.Nil.value
	        })(xs);
	    };
	};
	var $$null = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return true;
	    };
	    return false;
	};
	var newtypePattern = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Pattern);
	var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
	var mapMaybe = function (f) {
	    var go = function ($copy_acc) {
	        return function ($copy_v) {
	            var $tco_var_acc = $copy_acc;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(acc, v) {
	                if (v instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return reverse(acc);
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    var v1 = f(v.value0);
	                    if (v1 instanceof Data_Maybe.Nothing) {
	                        $tco_var_acc = acc;
	                        $copy_v = v.value1;
	                        return;
	                    };
	                    if (v1 instanceof Data_Maybe.Just) {
	                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
	                        $copy_v = v.value1;
	                        return;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 419, column 5 - line 421, column 32: " + [ v1.constructor.name ]);
	                };
	                throw new Error("Failed pattern match at Data.List line 417, column 3 - line 417, column 27: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_acc, $copy_v);
	            };
	            return $tco_result;
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var manyRec = function (dictMonadRec) {
	    return function (dictAlternative) {
	        return function (p) {
	            var go = function (acc) {
	                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
	                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
	                        return new Data_List_Types.Cons(v1, acc);
	                    })(function (v1) {
	                        return reverse(acc);
	                    })(v));
	                });
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
	        };
	    };
	};
	var someRec = function (dictMonadRec) {
	    return function (dictAlternative) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
	        };
	    };
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
	        };
	    };
	};
	var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
	    return function (v) {
	        return acc + 1 | 0;
	    };
	})(0);
	var last = function ($copy_v) {
	    var $tco_done = false;
	    var $tco_result;
	    function $tco_loop(v) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
	            $tco_done = true;
	            return new Data_Maybe.Just(v.value0);
	        };
	        if (v instanceof Data_List_Types.Cons) {
	            $copy_v = v.value1;
	            return;
	        };
	        $tco_done = true;
	        return Data_Maybe.Nothing.value;
	    };
	    while (!$tco_done) {
	        $tco_result = $tco_loop($copy_v);
	    };
	    return $tco_result;
	};
	var insertBy = function (v) {
	    return function (x) {
	        return function (v1) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return singleton(x);
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                var v2 = v(x)(v1.value0);
	                if (v2 instanceof Data_Ordering.GT) {
	                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
	                };
	                return new Data_List_Types.Cons(x, v1);
	            };
	            throw new Error("Failed pattern match at Data.List line 216, column 1 - line 216, column 68: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var insertAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0) {
	                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(insertAt(v - 1 | 0)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var init = function (lst) {
	    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	        return v.init;
	    })(unsnoc(lst));
	};
	var index = function ($copy_v) {
	    return function ($copy_v1) {
	        var $tco_var_v = $copy_v;
	        var $tco_done = false;
	        var $tco_result;
	        function $tco_loop(v, v1) {
	            if (v instanceof Data_List_Types.Nil) {
	                $tco_done = true;
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Data_List_Types.Cons && v1 === 0) {
	                $tco_done = true;
	                return new Data_Maybe.Just(v.value0);
	            };
	            if (v instanceof Data_List_Types.Cons) {
	                $tco_var_v = v.value1;
	                $copy_v1 = v1 - 1 | 0;
	                return;
	            };
	            throw new Error("Failed pattern match at Data.List line 281, column 1 - line 281, column 44: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	        while (!$tco_done) {
	            $tco_result = $tco_loop($tco_var_v, $copy_v1);
	        };
	        return $tco_result;
	    };
	};
	var head = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
	};
	var transpose = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_List_Types.Nil.value;
	    };
	    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
	        return transpose(v.value1);
	    };
	    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
	        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
	    };
	    throw new Error("Failed pattern match at Data.List line 742, column 1 - line 742, column 54: " + [ v.constructor.name ]);
	};
	var groupBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Nil) {
	            return Data_List_Types.Nil.value;
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            var v2 = span(v(v1.value0))(v1.value1);
	            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
	        };
	        throw new Error("Failed pattern match at Data.List line 605, column 1 - line 605, column 80: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var group = function (dictEq) {
	    return groupBy(Data_Eq.eq(dictEq));
	};
	var group$prime = function (dictOrd) {
	    return function ($334) {
	        return group(dictOrd.Eq0())(sort(dictOrd)($334));
	    };
	};
	var fromFoldable = function (dictFoldable) {
	    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
	};
	var foldM = function (dictMonad) {
	    return function (v) {
	        return function (a) {
	            return function (v1) {
	                if (v1 instanceof Data_List_Types.Nil) {
	                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
	                };
	                if (v1 instanceof Data_List_Types.Cons) {
	                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
	                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
	                    });
	                };
	                throw new Error("Failed pattern match at Data.List line 753, column 1 - line 753, column 72: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	};
	var findIndex = function (fn) {
	    var go = function ($copy_v) {
	        return function ($copy_v1) {
	            var $tco_var_v = $copy_v;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(v, v1) {
	                if (v1 instanceof Data_List_Types.Cons) {
	                    if (fn(v1.value0)) {
	                        $tco_done = true;
	                        return new Data_Maybe.Just(v);
	                    };
	                    if (Data_Boolean.otherwise) {
	                        $tco_var_v = v + 1 | 0;
	                        $copy_v1 = v1.value1;
	                        return;
	                    };
	                };
	                if (v1 instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.List line 301, column 3 - line 301, column 35: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_v, $copy_v1);
	            };
	            return $tco_result;
	        };
	    };
	    return go(0);
	};
	var findLastIndex = function (fn) {
	    return function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	            return (length(xs) - 1 | 0) - v | 0;
	        })(findIndex(fn)(reverse(xs)));
	    };
	};
	var filterM = function (dictMonad) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
	                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
	                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
	                            if (v2) {
	                                return new Data_List_Types.Cons(v1.value0, v3);
	                            };
	                            return v3;
	                        })());
	                    });
	                });
	            };
	            throw new Error("Failed pattern match at Data.List line 403, column 1 - line 403, column 75: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var filter = function (p) {
	    var go = function ($copy_acc) {
	        return function ($copy_v) {
	            var $tco_var_acc = $copy_acc;
	            var $tco_done = false;
	            var $tco_result;
	            function $tco_loop(acc, v) {
	                if (v instanceof Data_List_Types.Nil) {
	                    $tco_done = true;
	                    return reverse(acc);
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    if (p(v.value0)) {
	                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
	                        $copy_v = v.value1;
	                        return;
	                    };
	                    if (Data_Boolean.otherwise) {
	                        $tco_var_acc = acc;
	                        $copy_v = v.value1;
	                        return;
	                    };
	                };
	                throw new Error("Failed pattern match at Data.List line 390, column 3 - line 390, column 27: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	            while (!$tco_done) {
	                $tco_result = $tco_loop($tco_var_acc, $copy_v);
	            };
	            return $tco_result;
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var intersectBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            if (v2 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            return filter(function (x) {
	                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
	            })(v1);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var nubBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Nil) {
	            return Data_List_Types.Nil.value;
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
	                return !v(v1.value0)(y);
	            })(v1.value1)));
	        };
	        throw new Error("Failed pattern match at Data.List line 634, column 1 - line 634, column 59: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var eqPattern = function (dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
	        };
	    });
	};
	var ordPattern = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqPattern(dictOrd.Eq0());
	    }, function (x) {
	        return function (y) {
	            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
	        };
	    });
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    var go = function ($copy_v) {
	        var $tco_done = false;
	        var $tco_result;
	        function $tco_loop(v) {
	            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
	                $copy_v = v.value1;
	                return;
	            };
	            $tco_done = true;
	            return v;
	        };
	        while (!$tco_done) {
	            $tco_result = $tco_loop($copy_v);
	        };
	        return $tco_result;
	    };
	    return go;
	};
	var dropEnd = function (n) {
	    return function (xs) {
	        return take(length(xs) - n | 0)(xs);
	    };
	};
	var drop = function ($copy_v) {
	    return function ($copy_v1) {
	        var $tco_var_v = $copy_v;
	        var $tco_done = false;
	        var $tco_result;
	        function $tco_loop(v, v1) {
	            if (v < 1) {
	                $tco_done = true;
	                return v1;
	            };
	            if (v1 instanceof Data_List_Types.Nil) {
	                $tco_done = true;
	                return Data_List_Types.Nil.value;
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                $tco_var_v = v - 1 | 0;
	                $copy_v1 = v1.value1;
	                return;
	            };
	            throw new Error("Failed pattern match at Data.List line 543, column 1 - line 543, column 42: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	        while (!$tco_done) {
	            $tco_result = $tco_loop($tco_var_v, $copy_v1);
	        };
	        return $tco_result;
	    };
	};
	var slice = function (start) {
	    return function (end) {
	        return function (xs) {
	            return take(end - start | 0)(drop(start)(xs));
	        };
	    };
	};
	var takeEnd = function (n) {
	    return function (xs) {
	        return drop(length(xs) - n | 0)(xs);
	    };
	};
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
	                return v2.value1;
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 661, column 1 - line 661, column 67: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var deleteAt = function (v) {
	    return function (v1) {
	        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
	            return new Data_Maybe.Just(v1.value1);
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
	                return new Data_List_Types.Cons(v1.value0, v2);
	            })(deleteAt(v - 1 | 0)(v1.value1));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
	var concat = function (v) {
	    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
	                return Data_Maybe.Just.create((function () {
	                    var v3 = v1(v2.value0);
	                    if (v3 instanceof Data_Maybe.Nothing) {
	                        return v2.value1;
	                    };
	                    if (v3 instanceof Data_Maybe.Just) {
	                        return new Data_List_Types.Cons(v3.value0, v2.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.List line 352, column 3 - line 354, column 23: " + [ v3.constructor.name ]);
	                })());
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(alterAt(v - 1 | 0)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var modifyAt = function (n) {
	    return function (f) {
	        return alterAt(n)(function ($335) {
	            return Data_Maybe.Just.create(f($335));
	        });
	    };
	};
	module.exports = {
	    toUnfoldable: toUnfoldable,
	    fromFoldable: fromFoldable,
	    singleton: singleton,
	    range: range,
	    some: some,
	    someRec: someRec,
	    many: many,
	    manyRec: manyRec,
	    "null": $$null,
	    length: length,
	    snoc: snoc,
	    insert: insert,
	    insertBy: insertBy,
	    head: head,
	    last: last,
	    tail: tail,
	    init: init,
	    uncons: uncons,
	    unsnoc: unsnoc,
	    index: index,
	    elemIndex: elemIndex,
	    elemLastIndex: elemLastIndex,
	    findIndex: findIndex,
	    findLastIndex: findLastIndex,
	    insertAt: insertAt,
	    deleteAt: deleteAt,
	    updateAt: updateAt,
	    modifyAt: modifyAt,
	    alterAt: alterAt,
	    reverse: reverse,
	    concat: concat,
	    concatMap: concatMap,
	    filter: filter,
	    filterM: filterM,
	    mapMaybe: mapMaybe,
	    catMaybes: catMaybes,
	    mapWithIndex: mapWithIndex,
	    sort: sort,
	    sortBy: sortBy,
	    Pattern: Pattern,
	    stripPrefix: stripPrefix,
	    slice: slice,
	    take: take,
	    takeEnd: takeEnd,
	    takeWhile: takeWhile,
	    drop: drop,
	    dropEnd: dropEnd,
	    dropWhile: dropWhile,
	    span: span,
	    group: group,
	    "group'": group$prime,
	    groupBy: groupBy,
	    partition: partition,
	    nub: nub,
	    nubBy: nubBy,
	    union: union,
	    unionBy: unionBy,
	    "delete": $$delete,
	    deleteBy: deleteBy,
	    difference: difference,
	    intersect: intersect,
	    intersectBy: intersectBy,
	    zipWith: zipWith,
	    zipWithA: zipWithA,
	    zip: zip,
	    unzip: unzip,
	    transpose: transpose,
	    foldM: foldM,
	    eqPattern: eqPattern,
	    ordPattern: ordPattern,
	    newtypePattern: newtypePattern,
	    showPattern: showPattern
	};


/***/ }),
/* 174 */
/*!****************************************!*\
  !*** ./output/DOM.Node.Types/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var DOM_Event_Types = __webpack_require__(/*! ../DOM.Event.Types */ 160);
	var DOM_Util_FFI = __webpack_require__(/*! ../DOM.Util.FFI */ 175);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foreign = __webpack_require__(/*! ../Data.Foreign */ 162);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var ElementId = function (x) {
	    return x;
	};
	var textToNode = Unsafe_Coerce.unsafeCoerce;
	var readNode = DOM_Util_FFI.unsafeReadProtoTagged("Node");
	var readElement = DOM_Util_FFI.unsafeReadProtoTagged("Element");
	var readDocument = DOM_Util_FFI.unsafeReadProtoTagged("Document");
	var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
	var oOrdElementId = Data_Ord.ordString;
	var newtypeElementId = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ElementId);
	var eqElementId = Data_Eq.eqString;
	var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNode = Unsafe_Coerce.unsafeCoerce;
	var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
	var commentToNode = Unsafe_Coerce.unsafeCoerce;
	var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    readNode: readNode,
	    readDocument: readDocument,
	    documentToNonElementParentNode: documentToNonElementParentNode,
	    documentToParentNode: documentToParentNode,
	    documentToNode: documentToNode,
	    documentToEventTarget: documentToEventTarget,
	    ElementId: ElementId,
	    readElement: readElement,
	    elementToParentNode: elementToParentNode,
	    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
	    elementToNode: elementToNode,
	    elementToEventTarget: elementToEventTarget,
	    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
	    textToNode: textToNode,
	    commentToNode: commentToNode,
	    processingInstructionToNode: processingInstructionToNode,
	    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
	    documentFragmentToParentNode: documentFragmentToParentNode,
	    documentFragmentToNode: documentFragmentToNode,
	    documentTypeToNode: documentTypeToNode,
	    newtypeElementId: newtypeElementId,
	    eqElementId: eqElementId,
	    oOrdElementId: oOrdElementId
	};


/***/ }),
/* 175 */
/*!**************************************!*\
  !*** ./output/DOM.Util.FFI/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 176);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Except = __webpack_require__(/*! ../Control.Monad.Except */ 32);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ../Control.Monad.Except.Trans */ 83);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Foreign = __webpack_require__(/*! ../Data.Foreign */ 162);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var unsafeReadProtoTagged = function (name) {
	    return $foreign._unsafeReadProtoTagged(name)(function ($0) {
	        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create(name)($0))));
	    })(function ($1) {
	        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
	    });
	};
	module.exports = {
	    unsafeReadProtoTagged: unsafeReadProtoTagged
	};


/***/ }),
/* 176 */
/*!****************************************!*\
  !*** ./output/DOM.Util.FFI/foreign.js ***!
  \****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports._unsafeReadProtoTagged = (function () {
	  var tagOf = function (value) {
	    return Object.prototype.toString.call(value).slice(8, -1);
	  };
	  return function (name) {
	    return function (failure) {
	      return function (success) {
	        return function (value) {
	          var obj = value;
	          while (obj != null) {
	            var proto = Object.getPrototypeOf(obj);
	            var ctor = tagOf(proto);
	            if (ctor === name) {
	              return success(value);
	            } else if (ctor === "Object") {
	              return failure(tagOf(value));
	            }
	            obj = proto;
	          }
	          return failure(tagOf(value));
	        };
	      };
	    };
	  };
	}());


/***/ }),
/* 177 */
/*!*****************************************!*\
  !*** ./output/DOM.HTML.Window/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 178);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_HTML_Types = __webpack_require__(/*! ../DOM.HTML.Types */ 158);
	var DOM_WebStorage_Types = __webpack_require__(/*! ../DOM.WebStorage.Types */ 179);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Nullable = __webpack_require__(/*! ../Data.Nullable */ 180);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var RequestIdleCallbackId = function (x) {
	    return x;
	};
	var RequestAnimationFrameId = function (x) {
	    return x;
	};
	var requestIdleCallback = function (opts) {
	    return function (fn) {
	        return function ($30) {
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(RequestIdleCallbackId)($foreign._requestIdleCallback(opts)(fn)($30));
	        };
	    };
	};
	var requestAnimationFrame = function (fn) {
	    return function ($31) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(RequestAnimationFrameId)($foreign._requestAnimationFrame(fn)($31));
	    };
	};
	var promptDefault = function (msg) {
	    return function (defaultText) {
	        return function (window) {
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._prompt(msg)(defaultText)(window));
	        };
	    };
	};
	var prompt = function (msg) {
	    return function (window) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._prompt(msg)("")(window));
	    };
	};
	var open = function (url$prime) {
	    return function (name) {
	        return function (features) {
	            return function (window) {
	                return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._open(url$prime)(name)(features)(window));
	            };
	        };
	    };
	};
	var newtypeRequestIdleCallbackId = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, RequestIdleCallbackId);
	var newtypeRequestAnimationFrameId = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, RequestAnimationFrameId);
	var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
	    return eqRequestIdleCallbackId;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
	    };
	});
	var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
	    return eqRequestAnimationFrameId;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
	    };
	});
	var cancelIdleCallback = function (idAF) {
	    return $foreign._cancelIdleCallback(Data_Newtype.unwrap(newtypeRequestIdleCallbackId)(idAF));
	};
	var cancelAnimationFrame = function (idAF) {
	    return $foreign._cancelAnimationFrame(Data_Newtype.unwrap(newtypeRequestAnimationFrameId)(idAF));
	};
	module.exports = {
	    open: open,
	    prompt: prompt,
	    promptDefault: promptDefault,
	    requestAnimationFrame: requestAnimationFrame,
	    cancelAnimationFrame: cancelAnimationFrame,
	    requestIdleCallback: requestIdleCallback,
	    cancelIdleCallback: cancelIdleCallback,
	    newtypeRequestAnimationFrameId: newtypeRequestAnimationFrameId,
	    eqRequestAnimationFrameId: eqRequestAnimationFrameId,
	    ordRequestAnimationFrameId: ordRequestAnimationFrameId,
	    newtypeRequestIdleCallbackId: newtypeRequestIdleCallbackId,
	    eqRequestIdleCallbackId: eqRequestIdleCallbackId,
	    ordRequestIdleCallbackId: ordRequestIdleCallbackId,
	    document: $foreign.document,
	    navigator: $foreign.navigator,
	    location: $foreign.location,
	    history: $foreign.history,
	    innerWidth: $foreign.innerWidth,
	    innerHeight: $foreign.innerHeight,
	    alert: $foreign.alert,
	    confirm: $foreign.confirm,
	    moveBy: $foreign.moveBy,
	    moveTo: $foreign.moveTo,
	    outerHeight: $foreign.outerHeight,
	    outerWidth: $foreign.outerWidth,
	    print: $foreign.print,
	    resizeBy: $foreign.resizeBy,
	    resizeTo: $foreign.resizeTo,
	    screenX: $foreign.screenX,
	    screenY: $foreign.screenY,
	    scroll: $foreign.scroll,
	    scrollBy: $foreign.scrollBy,
	    scrollX: $foreign.scrollX,
	    scrollY: $foreign.scrollY,
	    url: $foreign.url,
	    localStorage: $foreign.localStorage,
	    sessionStorage: $foreign.sessionStorage
	};


/***/ }),
/* 178 */
/*!*******************************************!*\
  !*** ./output/DOM.HTML.Window/foreign.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.document = function (window) {
	  return function () {
	    return window.document;
	  };
	};

	exports.navigator = function (window) {
	  return function () {
	    return window.navigator;
	  };
	};

	exports.location = function (window) {
	  return function () {
	    return window.location;
	  };
	};

	exports.history = function(window) {
	  return function() {
	    return window.history;
	  };
	};

	exports.innerWidth = function (window) {
	  return function () {
	    return window.innerWidth;
	  };
	};

	exports.innerHeight = function (window) {
	  return function () {
	    return window.innerHeight;
	  };
	};

	exports.alert = function (str) {
	  return function (window) {
	    return function () {
	      window.alert(str);
	      return {};
	    };
	  };
	};

	exports.confirm = function (str) {
	  return function (window) {
	    return function () {
	      return window.confirm(str);
	    };
	  };
	};

	exports.moveBy = function (xDelta) {
	  return function (yDelta) {
	    return function (window) {
	      return function () {
	        window.moveBy(xDelta, yDelta);
	        return {};
	      };
	    };
	  };
	};

	exports.moveTo = function (width) {
	  return function (height) {
	    return function (window) {
	      return function () {
	        window.moveTo(width, height);
	        return {};
	      };
	    };
	  };
	};

	exports._open = function (url) {
	  return function (name) {
	    return function (features) {
	      return function (window) {
	        return function () {
	          return window.open(url, name, features);
	        };
	      };
	    };
	  };
	};

	exports.outerHeight = function (window) {
	  return function () {
	    return window.outerHeight;
	  };
	};

	exports.outerWidth = function (window) {
	  return function () {
	    return window.outerWidth;
	  };
	};

	exports.print = function (window) {
	  return function () {
	    window.print();
	    return {};
	  };
	};

	exports._prompt = function (str) {
	  return function (defaultText) {
	    return function (window) {
	      return function () {
	        return window.prompt(str, defaultText);
	      };
	    };
	  };
	};

	exports.resizeBy = function (xDelta) {
	  return function (yDelta) {
	    return function (window) {
	      return function () {
	        window.resizeBy(xDelta, yDelta);
	        return {};
	      };
	    };
	  };
	};

	exports.resizeTo = function (width) {
	  return function (height) {
	    return function (window) {
	      return function () {
	        window.resizeTo(width, height);
	        return {};
	      };
	    };
	  };
	};

	exports.screenX = function (window) {
	  return function () {
	    return window.screenX;
	  };
	};

	exports.screenY = function (window) {
	  return function () {
	    return window.screenY;
	  };
	};

	exports.scroll = function (xCoord) {
	  return function (yCoord) {
	    return function (window) {
	      return function () {
	        window.scroll(xCoord, yCoord);
	        return {};
	      };
	    };
	  };
	};

	exports.scrollBy = function (xCoord) {
	  return function (yCoord) {
	    return function (window) {
	      return function () {
	        window.scrollBy(xCoord, yCoord);
	        return {};
	      };
	    };
	  };
	};

	exports.scrollX = function (window) {
	  return function () {
	    return window.scrollX;
	  };
	};

	exports.scrollY = function (window) {
	  return function () {
	    return window.scrollY;
	  };
	};

	exports.url = function (window) {
	  return function () {
	    return window.URL;
	  };
	};

	exports.localStorage = function (window) {
	  return function () {
	    return window.localStorage;
	  };
	};

	exports.sessionStorage = function (window) {
	  return function () {
	    return window.sessionStorage;
	  };
	};

	exports._requestAnimationFrame = function(fn) {
	  return function(window) {
	    return function() {
	      return window.requestAnimationFrame(fn);
	    };
	  };
	};

	exports._cancelAnimationFrame = function(id) {
	  return function(window) {
	    return function() {
	      return window.cancelAnimationFrame(id);
	    };
	  };
	};

	exports._requestIdleCallback = function(opts) {
	  return function(fn) {
	    return function(window) {
	      return function() {
	        return window.requestIdleCallback(fn, opts);
	      };
	    };
	  };
	};

	exports._cancelIdleCallback = function(id) {
	  return function(window) {
	    return function() {
	      return window.cancelIdleCallback(id);
	    };
	  };
	};


/***/ }),
/* 179 */
/*!**********************************************!*\
  !*** ./output/DOM.WebStorage.Types/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Foreign = __webpack_require__(/*! ../Data.Foreign */ 162);
	var readStorage = Data_Foreign.unsafeReadTagged("Storage");
	module.exports = {
	    readStorage: readStorage
	};


/***/ }),
/* 180 */
/*!***************************************!*\
  !*** ./output/Data.Nullable/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 181);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Function_Uncurried = __webpack_require__(/*! ../Data.Function.Uncurried */ 129);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
	var toMaybe = function (n) {
	    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
	};
	var showNullable = function (dictShow) {
	    return new Data_Show.Show(function ($5) {
	        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
	    });
	};
	var eqNullable = function (dictEq) {
	    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
	};
	var ordNullable = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqNullable(dictOrd.Eq0());
	    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
	};
	var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
	    return Data_Eq.eq(eqNullable(dictEq));
	});
	var ord1Nullable = new Data_Ord.Ord1(function () {
	    return eq1Nullable;
	}, function (dictOrd) {
	    return Data_Ord.compare(ordNullable(dictOrd));
	});
	module.exports = {
	    toMaybe: toMaybe,
	    toNullable: toNullable,
	    showNullable: showNullable,
	    eqNullable: eqNullable,
	    eq1Nullable: eq1Nullable,
	    ordNullable: ordNullable,
	    ord1Nullable: ord1Nullable
	};


/***/ }),
/* 181 */
/*!*****************************************!*\
  !*** ./output/Data.Nullable/foreign.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	"use strict";

	exports["null"] = null;

	exports.nullable = function (a, r, f) {
	  return a == null ? r : f(a);
	};

	exports.notNull = function (x) {
	  return x;
	};


/***/ }),
/* 182 */
/*!*********************************************!*\
  !*** ./output/DOM.Node.ParentNode/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 183);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_Node_Types = __webpack_require__(/*! ../DOM.Node.Types */ 174);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Nullable = __webpack_require__(/*! ../Data.Nullable */ 180);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var QuerySelector = function (x) {
	    return x;
	};
	var querySelector = function (qs) {
	    return function ($3) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3));
	    };
	};
	var ordQuerySelector = Data_Ord.ordString;
	var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, QuerySelector);
	var lastElementChild = function ($4) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._lastElementChild($4));
	};
	var firstElementChild = function ($5) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._firstElementChild($5));
	};
	var eqQuerySelector = Data_Eq.eqString;
	module.exports = {
	    firstElementChild: firstElementChild,
	    lastElementChild: lastElementChild,
	    QuerySelector: QuerySelector,
	    querySelector: querySelector,
	    eqQuerySelector: eqQuerySelector,
	    ordQuerySelector: ordQuerySelector,
	    newtypeQuerySelector: newtypeQuerySelector,
	    children: $foreign.children,
	    childElementCount: $foreign.childElementCount,
	    querySelectorAll: $foreign.querySelectorAll
	};


/***/ }),
/* 183 */
/*!***********************************************!*\
  !*** ./output/DOM.Node.ParentNode/foreign.js ***!
  \***********************************************/
/***/ (function(module, exports) {

	"use strict";

	var getEffProp = function (name) {
	  return function (node) {
	    return function () {
	      return node[name];
	    };
	  };
	};

	exports.children = getEffProp("children");

	exports._firstElementChild = getEffProp("firstElementChild");

	exports._lastElementChild = getEffProp("lastElementChild");

	exports.childElementCount = getEffProp("childElementCount");

	exports._querySelector = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelector(selector);
	    };
	  };
	};

	exports.querySelectorAll = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelectorAll(selector);
	    };
	  };
	};


/***/ }),
/* 184 */
/*!*******************************!*\
  !*** ./output/React/index.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 185);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Uncurried = __webpack_require__(/*! ../Control.Monad.Eff.Uncurried */ 349);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Nullable = __webpack_require__(/*! ../Data.Nullable */ 180);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var spec$prime = function (getInitialState) {
	    return function (renderFn) {
	        return {
	            render: renderFn,
	            displayName: "",
	            getInitialState: getInitialState,
	            componentWillMount: function (v) {
	                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	            },
	            componentDidMount: function (v) {
	                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	            },
	            componentWillReceiveProps: function (v) {
	                return function (v1) {
	                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	                };
	            },
	            shouldComponentUpdate: function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(true);
	                    };
	                };
	            },
	            componentWillUpdate: function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	                    };
	                };
	            },
	            componentDidUpdate: function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	                    };
	                };
	            },
	            componentWillUnmount: function (v) {
	                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	            }
	        };
	    };
	};
	var spec = function (state) {
	    return spec$prime(function (v) {
	        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(state);
	    });
	};
	var readRef = function ($$this) {
	    return function (name) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign.readRefImpl($$this)(name));
	    };
	};
	var forceUpdateCb = function ($$this) {
	    return function (m) {
	        return Control_Monad_Eff_Uncurried.runEffFn2($foreign.forceUpdateCbImpl)($$this)(m);
	    };
	};
	var forceUpdate = function ($$this) {
	    return forceUpdateCb($$this)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit));
	};
	var createClassStateless = Unsafe_Coerce.unsafeCoerce;
	var createClassStateless$prime = function (k) {
	    return createClassStateless(function (props) {
	        return k(props)($foreign.childrenToArray(props.children));
	    });
	};
	module.exports = {
	    spec: spec,
	    "spec'": spec$prime,
	    readRef: readRef,
	    forceUpdate: forceUpdate,
	    forceUpdateCb: forceUpdateCb,
	    createClassStateless: createClassStateless,
	    "createClassStateless'": createClassStateless$prime,
	    getProps: $foreign.getProps,
	    getRefs: $foreign.getRefs,
	    writeRef: $foreign.writeRef,
	    getChildren: $foreign.getChildren,
	    readState: $foreign.readState,
	    writeState: $foreign.writeState,
	    writeStateWithCallback: $foreign.writeStateWithCallback,
	    transformState: $foreign.transformState,
	    handle: $foreign.handle,
	    preventDefault: $foreign.preventDefault,
	    stopPropagation: $foreign.stopPropagation,
	    createClass: $foreign.createClass,
	    createElement: $foreign.createElement,
	    createElementDynamic: $foreign.createElementDynamic,
	    createElementTagName: $foreign.createElementTagName,
	    createElementTagNameDynamic: $foreign.createElementTagNameDynamic,
	    createFactory: $foreign.createFactory,
	    childrenToArray: $foreign.childrenToArray
	};


/***/ }),
/* 185 */
/*!*********************************!*\
  !*** ./output/React/foreign.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* global exports */
	"use strict";

	var React = __webpack_require__(/*! react */ 186);
	var createReactClass = __webpack_require__(/*! create-react-class */ 342);

	function getProps(this_) {
	  return function(){
	    return this_.props;
	  };
	}
	exports.getProps = getProps;

	function getRefs(this_) {
	  return function(){
	    return this_.refs;
	  };
	}
	exports.getRefs = getRefs;

	function childrenToArray(children) {
	  var result = [];

	  React.Children.forEach(children, function(child){
	    result.push(child);
	  });

	  return result;
	}
	exports.childrenToArray = childrenToArray;

	function getChildren(this_) {
	  return function(){
	    var children = this_.props.children;

	    var result = childrenToArray(children);

	    return result;
	  };
	}
	exports.getChildren = getChildren;

	function readRefImpl (this_) {
	  return function(name) {
	    return function() {
	      var refs = this_.refs || {};
	      return refs[name];
	    }
	  }
	}
	exports.readRefImpl = readRefImpl;

	function writeRef(this_) {
	  return function(name) {
	    return function(node) {
	      return function() {
	        var refs = this_.refs || {};
	        refs[name] = node;
	        this_.refs = refs;
	        return {};
	      }
	    }
	  }
	}
	exports.writeRef = writeRef;

	function writeState(this_) {
	  return function(state){
	    return function(){
	      this_.setState({
	        state: state
	      });
	      return state;
	    };
	  };
	}
	exports.writeState = writeState;

	function writeStateWithCallback(this_, cb) {
	  return function(state){
	    return function(cb){
	      return function() {
	        this_.setState({
	          state: state
	        }, cb);
	        return state;
	      };
	    };
	  };
	}
	exports.writeStateWithCallback = writeStateWithCallback;

	function readState(this_) {
	  return function(){
	    return this_.state.state;
	  };
	}
	exports.readState = readState;

	function transformState(this_){
	  return function(update){
	    return function(){
	      this_.setState(function(old, props){
	        return {state: update(old.state)};
	      });
	    };
	  };
	}
	exports.transformState = transformState;

	function createClass(spec) {
	  var result = {
	    displayName: spec.displayName,
	    render: function(){
	      return spec.render(this)();
	    },
	    getInitialState: function(){
	      return {
	        state: spec.getInitialState(this)()
	      };
	    },
	    componentWillMount: function(){
	      return spec.componentWillMount(this)();
	    },
	    componentDidMount: function(){
	      return spec.componentDidMount(this)();
	    },
	    componentWillReceiveProps: function(nextProps){
	      return spec.componentWillReceiveProps(this)(nextProps)();
	    },
	    shouldComponentUpdate: function(nextProps, nextState){
	      return spec.shouldComponentUpdate(this)(nextProps)(nextState.state)();
	    },
	    componentWillUpdate: function(nextProps, nextState){
	      return spec.componentWillUpdate(this)(nextProps)(nextState.state)();
	    },
	    componentDidUpdate: function(prevProps, prevState){
	      return spec.componentDidUpdate(this)(prevProps)(prevState.state)();
	    },
	    componentWillUnmount: function(){
	      return spec.componentWillUnmount(this)();
	    }
	  };

	  return createReactClass(result);
	}
	exports.createClass = createClass;

	function forceUpdateCbImpl(this_, cb) {
	  this_.forceUpdate(function() {
	    return cb();
	  });
	  return {};
	};
	exports.forceUpdateCbImpl = forceUpdateCbImpl;

	function handle(f) {
	  return function(e){
	    return f(e)();
	  };
	};
	exports.handle = handle;

	function createElement(class_) {
	  return function(props){
	    return function(children){
	      return React.createElement.apply(React, [class_, props].concat(children));
	    };
	  };
	}
	exports.createElement = createElement;
	exports.createElementTagName = createElement;

	function createElementDynamic(class_) {
	  return function(props) {
	    return function(children){
	      return React.createElement(class_, props, children);
	    };
	  };
	};
	exports.createElementDynamic = createElementDynamic;
	exports.createElementTagNameDynamic = createElementDynamic;

	function createFactory(class_) {
	  return React.createFactory(class_);
	}
	exports.createFactory = createFactory;

	function preventDefault(event) {
	  return function() { return event.preventDefault();}
	};
	exports.preventDefault = preventDefault;

	function stopPropagation(event) {
	  return function() { return event.stopPropagation();}
	};
	exports.stopPropagation = stopPropagation;


/***/ }),
/* 186 */
/*!**************************!*\
  !*** ./~/react/react.js ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(/*! ./lib/React */ 187);


/***/ }),
/* 187 */
/*!******************************!*\
  !*** ./~/react/lib/React.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var ReactDOM = __webpack_require__(/*! ./ReactDOM */ 188);
	var ReactDOMServer = __webpack_require__(/*! ./ReactDOMServer */ 332);
	var ReactIsomorphic = __webpack_require__(/*! ./ReactIsomorphic */ 336);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var deprecated = __webpack_require__(/*! ./deprecated */ 341);

	// `version` will be added here by ReactIsomorphic.
	var React = {};

	assign(React, ReactIsomorphic);

	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});

	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

	module.exports = React;

/***/ }),
/* 188 */
/*!*********************************!*\
  !*** ./~/react/lib/ReactDOM.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactDOMTextComponent = __webpack_require__(/*! ./ReactDOMTextComponent */ 190);
	var ReactDefaultInjection = __webpack_require__(/*! ./ReactDefaultInjection */ 255);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 330);

	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 275);
	var renderSubtreeIntoContainer = __webpack_require__(/*! ./renderSubtreeIntoContainer */ 331);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	ReactDefaultInjection.inject();

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

	    // shams
	    Object.create, Object.freeze];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 189 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactCurrentOwner.js ***!
  \******************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 190 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDOMTextComponent.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 191);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 206);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 210);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 205);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 204);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 254);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },

	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 191 */
/*!**********************************************!*\
  !*** ./~/react/lib/DOMChildrenOperations.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(/*! ./Danger */ 192);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 200);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);

	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 203);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 204);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.

	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

	  parentNode.insertBefore(childNode, beforeChild);
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 192 */
/*!*******************************!*\
  !*** ./~/react/lib/Danger.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var createNodesFromMarkup = __webpack_require__(/*! fbjs/lib/createNodesFromMarkup */ 194);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var getMarkupWrap = __webpack_require__(/*! fbjs/lib/getMarkupWrap */ 198);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 193 */
/*!********************************************!*\
  !*** ./~/fbjs/lib/ExecutionEnvironment.js ***!
  \********************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 194 */
/*!*********************************************!*\
  !*** ./~/fbjs/lib/createNodesFromMarkup.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 193);

	var createArrayFromMixed = __webpack_require__(/*! ./createArrayFromMixed */ 195);
	var getMarkupWrap = __webpack_require__(/*! ./getMarkupWrap */ 198);
	var invariant = __webpack_require__(/*! ./invariant */ 197);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 195 */
/*!********************************************!*\
  !*** ./~/fbjs/lib/createArrayFromMixed.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	'use strict';

	var toArray = __webpack_require__(/*! ./toArray */ 196);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ }),
/* 196 */
/*!*******************************!*\
  !*** ./~/fbjs/lib/toArray.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	'use strict';

	var invariant = __webpack_require__(/*! ./invariant */ 197);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 197 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/invariant.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 198 */
/*!*************************************!*\
  !*** ./~/fbjs/lib/getMarkupWrap.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	/*eslint-disable fb-www/unsafe-html */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 193);

	var invariant = __webpack_require__(/*! ./invariant */ 197);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 199 */
/*!*************************************!*\
  !*** ./~/fbjs/lib/emptyFunction.js ***!
  \*************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 200 */
/*!***************************************************!*\
  !*** ./~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 201);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ }),
/* 201 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/keyMirror.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(/*! ./invariant */ 197);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 202 */
/*!**********************************!*\
  !*** ./~/react/lib/ReactPerf.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 203 */
/*!*************************************!*\
  !*** ./~/react/lib/setInnerHTML.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;

/***/ }),
/* 204 */
/*!***************************************!*\
  !*** ./~/react/lib/setTextContent.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 205);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 203);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 205 */
/*!****************************************************!*\
  !*** ./~/react/lib/escapeTextContentForBrowser.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 206 */
/*!**********************************************!*\
  !*** ./~/react/lib/DOMPropertyOperations.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);

	var quoteAttributeValueForBrowser = __webpack_require__(/*! ./quoteAttributeValueForBrowser */ 208);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }

	};

	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 207 */
/*!************************************!*\
  !*** ./~/react/lib/DOMProperty.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 208 */
/*!******************************************************!*\
  !*** ./~/react/lib/quoteAttributeValueForBrowser.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 205);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 209 */
/*!*******************************!*\
  !*** ./~/fbjs/lib/warning.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 199);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 210 */
/*!*********************************************************!*\
  !*** ./~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 211);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 211 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactDOMIDOperations.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 191);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 206);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 212 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactMount.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 213);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactDOMFeatureFlags = __webpack_require__(/*! ./ReactDOMFeatureFlags */ 225);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 228);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 231);
	var ReactMarkupChecksum = __webpack_require__(/*! ./ReactMarkupChecksum */ 232);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 237);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 242);
	var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 243);
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 246);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 203);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 251);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 254);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 213 */
/*!*************************************************!*\
  !*** ./~/react/lib/ReactBrowserEventEmitter.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 215);
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 216);
	var ReactEventEmitterMixin = __webpack_require__(/*! ./ReactEventEmitterMixin */ 221);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 222);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 224);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 214 */
/*!***************************************!*\
  !*** ./~/react/lib/EventConstants.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 201);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ }),
/* 215 */
/*!***************************************!*\
  !*** ./~/react/lib/EventPluginHub.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 216);
	var EventPluginUtils = __webpack_require__(/*! ./EventPluginUtils */ 217);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 218);

	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 219);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 220);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 216 */
/*!********************************************!*\
  !*** ./~/react/lib/EventPluginRegistry.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 217 */
/*!*****************************************!*\
  !*** ./~/react/lib/EventPluginUtils.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 218);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 218 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactErrorUtils.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 219 */
/*!***************************************!*\
  !*** ./~/react/lib/accumulateInto.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 220 */
/*!*******************************************!*\
  !*** ./~/react/lib/forEachAccumulated.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ }),
/* 221 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactEventEmitterMixin.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 215);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 222 */
/*!****************************************!*\
  !*** ./~/react/lib/ViewportMetrics.js ***!
  \****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ }),
/* 223 */
/*!**************************************!*\
  !*** ./~/react/lib/Object.assign.js ***!
  \**************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ }),
/* 224 */
/*!*****************************************!*\
  !*** ./~/react/lib/isEventSupported.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 225 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactDOMFeatureFlags.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 226 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactElement.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 227);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 227 */
/*!******************************************!*\
  !*** ./~/react/lib/canDefineProperty.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 228 */
/*!****************************************************!*\
  !*** ./~/react/lib/ReactEmptyComponentRegistry.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */

	'use strict';

	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};

	module.exports = ReactEmptyComponentRegistry;

/***/ }),
/* 229 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactInstanceHandles.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(/*! ./ReactRootIndex */ 230);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 230 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactRootIndex.js ***!
  \***************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;

/***/ }),
/* 231 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactInstanceMap.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 232 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactMarkupChecksum.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(/*! ./adler32 */ 233);

	var TAG_END = /\/?>/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 233 */
/*!********************************!*\
  !*** ./~/react/lib/adler32.js ***!
  \********************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 234 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactReconciler.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(/*! ./ReactRef */ 235);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ }),
/* 235 */
/*!*********************************!*\
  !*** ./~/react/lib/ReactRef.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(/*! ./ReactOwner */ 236);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 236 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactOwner.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 237 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactUpdateQueue.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 231);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },

	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },

	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 238 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactUpdates.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 239);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);
	var Transaction = __webpack_require__(/*! ./Transaction */ 241);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 239 */
/*!**************************************!*\
  !*** ./~/react/lib/CallbackQueue.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 240 */
/*!************************************!*\
  !*** ./~/react/lib/PooledClass.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 241 */
/*!************************************!*\
  !*** ./~/react/lib/Transaction.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 242 */
/*!***********************************!*\
  !*** ./~/fbjs/lib/emptyObject.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 243 */
/*!************************************!*\
  !*** ./~/fbjs/lib/containsNode.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	'use strict';

	var isTextNode = __webpack_require__(/*! ./isTextNode */ 244);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;

	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 244 */
/*!**********************************!*\
  !*** ./~/fbjs/lib/isTextNode.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	'use strict';

	var isNode = __webpack_require__(/*! ./isNode */ 245);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 245 */
/*!******************************!*\
  !*** ./~/fbjs/lib/isNode.js ***!
  \******************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 246 */
/*!**************************************************!*\
  !*** ./~/react/lib/instantiateReactComponent.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(/*! ./ReactCompositeComponent */ 247);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 252);
	var ReactNativeComponent = __webpack_require__(/*! ./ReactNativeComponent */ 253);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 247 */
/*!************************************************!*\
  !*** ./~/react/lib/ReactCompositeComponent.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 248);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 231);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 249);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 250);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 237);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 242);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 251);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst;
	    var renderedElement;

	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);

	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }

	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;

	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 248 */
/*!**************************************************!*\
  !*** ./~/react/lib/ReactComponentEnvironment.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 249 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactPropTypeLocations.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 201);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ }),
/* 250 */
/*!***************************************************!*\
  !*** ./~/react/lib/ReactPropTypeLocationNames.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 251 */
/*!***************************************************!*\
  !*** ./~/react/lib/shouldUpdateReactComponent.js ***!
  \***************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 252 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactEmptyComponent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 228);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);

	var placeholderElement;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};

	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    ReactEmptyComponentRegistry.registerNullComponentID(rootID);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 253 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactNativeComponent.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 254 */
/*!*******************************************!*\
  !*** ./~/react/lib/validateDOMNesting.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    parentTag: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.parentTag = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };

	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 255 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDefaultInjection.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(/*! ./BeforeInputEventPlugin */ 256);
	var ChangeEventPlugin = __webpack_require__(/*! ./ChangeEventPlugin */ 264);
	var ClientReactRootIndex = __webpack_require__(/*! ./ClientReactRootIndex */ 267);
	var DefaultEventPluginOrder = __webpack_require__(/*! ./DefaultEventPluginOrder */ 268);
	var EnterLeaveEventPlugin = __webpack_require__(/*! ./EnterLeaveEventPlugin */ 269);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var HTMLDOMPropertyConfig = __webpack_require__(/*! ./HTMLDOMPropertyConfig */ 273);
	var ReactBrowserComponentMixin = __webpack_require__(/*! ./ReactBrowserComponentMixin */ 274);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 210);
	var ReactDefaultBatchingStrategy = __webpack_require__(/*! ./ReactDefaultBatchingStrategy */ 276);
	var ReactDOMComponent = __webpack_require__(/*! ./ReactDOMComponent */ 277);
	var ReactDOMTextComponent = __webpack_require__(/*! ./ReactDOMTextComponent */ 190);
	var ReactEventListener = __webpack_require__(/*! ./ReactEventListener */ 302);
	var ReactInjection = __webpack_require__(/*! ./ReactInjection */ 305);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactReconcileTransaction = __webpack_require__(/*! ./ReactReconcileTransaction */ 309);
	var SelectEventPlugin = __webpack_require__(/*! ./SelectEventPlugin */ 314);
	var ServerReactRootIndex = __webpack_require__(/*! ./ServerReactRootIndex */ 315);
	var SimpleEventPlugin = __webpack_require__(/*! ./SimpleEventPlugin */ 316);
	var SVGDOMPropertyConfig = __webpack_require__(/*! ./SVGDOMPropertyConfig */ 325);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(/*! ./ReactDefaultPerf */ 326);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 256 */
/*!***********************************************!*\
  !*** ./~/react/lib/BeforeInputEventPlugin.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 257);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var FallbackCompositionState = __webpack_require__(/*! ./FallbackCompositionState */ 258);
	var SyntheticCompositionEvent = __webpack_require__(/*! ./SyntheticCompositionEvent */ 260);
	var SyntheticInputEvent = __webpack_require__(/*! ./SyntheticInputEvent */ 262);

	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 257 */
/*!*****************************************!*\
  !*** ./~/react/lib/EventPropagators.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 215);

	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 219);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 220);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 258 */
/*!*************************************************!*\
  !*** ./~/react/lib/FallbackCompositionState.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 259);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 259 */
/*!***********************************************!*\
  !*** ./~/react/lib/getTextContentAccessor.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 260 */
/*!**************************************************!*\
  !*** ./~/react/lib/SyntheticCompositionEvent.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 261 */
/*!***************************************!*\
  !*** ./~/react/lib/SyntheticEvent.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 262 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticInputEvent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 263 */
/*!*****************************!*\
  !*** ./~/fbjs/lib/keyOf.js ***!
  \*****************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ }),
/* 264 */
/*!******************************************!*\
  !*** ./~/react/lib/ChangeEventPlugin.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 215);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 257);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 265);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 224);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 266);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 265 */
/*!***************************************!*\
  !*** ./~/react/lib/getEventTarget.js ***!
  \***************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 266 */
/*!*******************************************!*\
  !*** ./~/react/lib/isTextInputElement.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ }),
/* 267 */
/*!*********************************************!*\
  !*** ./~/react/lib/ClientReactRootIndex.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;

/***/ }),
/* 268 */
/*!************************************************!*\
  !*** ./~/react/lib/DefaultEventPluginOrder.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 269 */
/*!**********************************************!*\
  !*** ./~/react/lib/EnterLeaveEventPlugin.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 257);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 270);

	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 270 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticMouseEvent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 271);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 222);

	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 272);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 271 */
/*!*****************************************!*\
  !*** ./~/react/lib/SyntheticUIEvent.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 265);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 272 */
/*!**********************************************!*\
  !*** ./~/react/lib/getEventModifierState.js ***!
  \**********************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 273 */
/*!**********************************************!*\
  !*** ./~/react/lib/HTMLDOMPropertyConfig.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,

	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 274 */
/*!***************************************************!*\
  !*** ./~/react/lib/ReactBrowserComponentMixin.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 231);

	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 275);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var didWarnKey = '_getDOMNodeDidWarn';

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 275 */
/*!************************************!*\
  !*** ./~/react/lib/findDOMNode.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 231);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 276 */
/*!*****************************************************!*\
  !*** ./~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);
	var Transaction = __webpack_require__(/*! ./Transaction */ 241);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 277 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMComponent.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var AutoFocusUtils = __webpack_require__(/*! ./AutoFocusUtils */ 278);
	var CSSPropertyOperations = __webpack_require__(/*! ./CSSPropertyOperations */ 280);
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 206);
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 213);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 210);
	var ReactDOMButton = __webpack_require__(/*! ./ReactDOMButton */ 288);
	var ReactDOMInput = __webpack_require__(/*! ./ReactDOMInput */ 289);
	var ReactDOMOption = __webpack_require__(/*! ./ReactDOMOption */ 293);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 296);
	var ReactDOMTextarea = __webpack_require__(/*! ./ReactDOMTextarea */ 297);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactMultiChild = __webpack_require__(/*! ./ReactMultiChild */ 298);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 237);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 227);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 205);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 224);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 203);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 204);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 301);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 254);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });

	var ELEMENT_NODE_TYPE = 1;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}

	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}

	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}

	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}

	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}

	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}

	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}

	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function (element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }

	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }

	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },

	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);

	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;

	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }

	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 278 */
/*!***************************************!*\
  !*** ./~/react/lib/AutoFocusUtils.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);

	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 275);
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 279);

	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};

	var AutoFocusUtils = {
	  Mixin: Mixin,

	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 279 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/focusNode.js ***!
  \*********************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 280 */
/*!**********************************************!*\
  !*** ./~/react/lib/CSSPropertyOperations.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 281);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);

	var camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ 282);
	var dangerousStyleValue = __webpack_require__(/*! ./dangerousStyleValue */ 284);
	var hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ 285);
	var memoizeStringOnly = __webpack_require__(/*! fbjs/lib/memoizeStringOnly */ 287);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 281 */
/*!************************************!*\
  !*** ./~/react/lib/CSSProperty.js ***!
  \************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 282 */
/*!*****************************************!*\
  !*** ./~/fbjs/lib/camelizeStyleName.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(/*! ./camelize */ 283);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 283 */
/*!********************************!*\
  !*** ./~/fbjs/lib/camelize.js ***!
  \********************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	"use strict";

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 284 */
/*!********************************************!*\
  !*** ./~/react/lib/dangerousStyleValue.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 281);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ }),
/* 285 */
/*!******************************************!*\
  !*** ./~/fbjs/lib/hyphenateStyleName.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(/*! ./hyphenate */ 286);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 286 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/hyphenate.js ***!
  \*********************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	'use strict';

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 287 */
/*!*****************************************!*\
  !*** ./~/fbjs/lib/memoizeStringOnly.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 288 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMButton.js ***!
  \***************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = ReactDOMButton;

/***/ }),
/* 289 */
/*!**************************************!*\
  !*** ./~/react/lib/ReactDOMInput.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 211);
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 290);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },

	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 290 */
/*!*****************************************!*\
  !*** ./~/react/lib/LinkedValueUtils.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 291);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 249);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 291 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactPropTypes.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 250);

	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 292);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ }),
/* 292 */
/*!**************************************!*\
  !*** ./~/react/lib/getIteratorFn.js ***!
  \**************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 293 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMOption.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 294);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 296);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var valueContextKey = ReactDOMSelect.valueContextKey;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }

	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];

	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });

	    if (content) {
	      nativeProps.children = content;
	    }

	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 294 */
/*!**************************************!*\
  !*** ./~/react/lib/ReactChildren.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);

	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 295);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 295 */
/*!********************************************!*\
  !*** ./~/react/lib/traverseAllChildren.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);

	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 292);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 296 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMSelect.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 290);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,

	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },

	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 297 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactDOMTextarea.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 290);
	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 211);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);

	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 298 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactMultiChild.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 248);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 200);

	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);
	var ReactChildReconciler = __webpack_require__(/*! ./ReactChildReconciler */ 299);

	var flattenChildren = __webpack_require__(/*! ./flattenChildren */ 300);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 299 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactChildReconciler.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 234);

	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 246);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 251);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 295);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 300 */
/*!****************************************!*\
  !*** ./~/react/lib/flattenChildren.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 295);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 301 */
/*!************************************!*\
  !*** ./~/fbjs/lib/shallowEqual.js ***!
  \************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 302 */
/*!*******************************************!*\
  !*** ./~/react/lib/ReactEventListener.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 303);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 265);
	var getUnboundedScrollPosition = __webpack_require__(/*! fbjs/lib/getUnboundedScrollPosition */ 304);

	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }

	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}

	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);

	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 303 */
/*!*************************************!*\
  !*** ./~/fbjs/lib/EventListener.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	'use strict';

	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 199);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function () {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 304 */
/*!**************************************************!*\
  !*** ./~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \**************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 305 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactInjection.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 215);
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 248);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 306);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 252);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 213);
	var ReactNativeComponent = __webpack_require__(/*! ./ReactNativeComponent */ 253);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);
	var ReactRootIndex = __webpack_require__(/*! ./ReactRootIndex */ 230);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 306 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactClass.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 307);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 249);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 250);
	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 308);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 242);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 201);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 307 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactComponent.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 308);

	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 227);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 242);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 308 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactNoopUpdateQueue.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }

	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 309 */
/*!**************************************************!*\
  !*** ./~/react/lib/ReactReconcileTransaction.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 239);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 213);
	var ReactDOMFeatureFlags = __webpack_require__(/*! ./ReactDOMFeatureFlags */ 225);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 310);
	var Transaction = __webpack_require__(/*! ./Transaction */ 241);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ }),
/* 310 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactInputSelection.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(/*! ./ReactDOMSelection */ 311);

	var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 243);
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 279);
	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 313);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 311 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMSelection.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);

	var getNodeForCharacterOffset = __webpack_require__(/*! ./getNodeForCharacterOffset */ 312);
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 259);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 312 */
/*!**************************************************!*\
  !*** ./~/react/lib/getNodeForCharacterOffset.js ***!
  \**************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 313 */
/*!****************************************!*\
  !*** ./~/fbjs/lib/getActiveElement.js ***!
  \****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 314 */
/*!******************************************!*\
  !*** ./~/react/lib/SelectEventPlugin.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 257);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 193);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 310);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 313);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 266);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 301);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 315 */
/*!*********************************************!*\
  !*** ./~/react/lib/ServerReactRootIndex.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;

/***/ }),
/* 316 */
/*!******************************************!*\
  !*** ./~/react/lib/SimpleEventPlugin.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(/*! ./EventConstants */ 214);
	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 303);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 257);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var SyntheticClipboardEvent = __webpack_require__(/*! ./SyntheticClipboardEvent */ 317);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);
	var SyntheticFocusEvent = __webpack_require__(/*! ./SyntheticFocusEvent */ 318);
	var SyntheticKeyboardEvent = __webpack_require__(/*! ./SyntheticKeyboardEvent */ 319);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 270);
	var SyntheticDragEvent = __webpack_require__(/*! ./SyntheticDragEvent */ 322);
	var SyntheticTouchEvent = __webpack_require__(/*! ./SyntheticTouchEvent */ 323);
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 271);
	var SyntheticWheelEvent = __webpack_require__(/*! ./SyntheticWheelEvent */ 324);

	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 320);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 263);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 317 */
/*!************************************************!*\
  !*** ./~/react/lib/SyntheticClipboardEvent.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 261);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 318 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticFocusEvent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 271);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 319 */
/*!***********************************************!*\
  !*** ./~/react/lib/SyntheticKeyboardEvent.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 271);

	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 320);
	var getEventKey = __webpack_require__(/*! ./getEventKey */ 321);
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 272);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 320 */
/*!*****************************************!*\
  !*** ./~/react/lib/getEventCharCode.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 321 */
/*!************************************!*\
  !*** ./~/react/lib/getEventKey.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 320);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 322 */
/*!*******************************************!*\
  !*** ./~/react/lib/SyntheticDragEvent.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 270);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 323 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticTouchEvent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 271);

	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 272);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 324 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticWheelEvent.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 270);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 325 */
/*!*********************************************!*\
  !*** ./~/react/lib/SVGDOMPropertyConfig.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 326 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactDefaultPerf.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 207);
	var ReactDefaultPerfAnalysis = __webpack_require__(/*! ./ReactDefaultPerfAnalysis */ 327);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 202);

	var performanceNow = __webpack_require__(/*! fbjs/lib/performanceNow */ 328);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {

	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;

/***/ }),
/* 327 */
/*!*************************************************!*\
  !*** ./~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	'use strict';

	var assign = __webpack_require__(/*! ./Object.assign */ 223);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;

/***/ }),
/* 328 */
/*!**************************************!*\
  !*** ./~/fbjs/lib/performanceNow.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	'use strict';

	var performance = __webpack_require__(/*! ./performance */ 329);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ }),
/* 329 */
/*!***********************************!*\
  !*** ./~/fbjs/lib/performance.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 193);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ }),
/* 330 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactVersion.js ***!
  \*************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '0.14.7';

/***/ }),
/* 331 */
/*!***************************************************!*\
  !*** ./~/react/lib/renderSubtreeIntoContainer.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(/*! ./ReactMount */ 212);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 332 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMServer.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(/*! ./ReactDefaultInjection */ 255);
	var ReactServerRendering = __webpack_require__(/*! ./ReactServerRendering */ 333);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 330);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ }),
/* 333 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactServerRendering.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactDefaultBatchingStrategy = __webpack_require__(/*! ./ReactDefaultBatchingStrategy */ 276);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 229);
	var ReactMarkupChecksum = __webpack_require__(/*! ./ReactMarkupChecksum */ 232);
	var ReactServerBatchingStrategy = __webpack_require__(/*! ./ReactServerBatchingStrategy */ 334);
	var ReactServerRenderingTransaction = __webpack_require__(/*! ./ReactServerRenderingTransaction */ 335);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 238);

	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 242);
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 246);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 334 */
/*!****************************************************!*\
  !*** ./~/react/lib/ReactServerBatchingStrategy.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ }),
/* 335 */
/*!********************************************************!*\
  !*** ./~/react/lib/ReactServerRenderingTransaction.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(/*! ./PooledClass */ 240);
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 239);
	var Transaction = __webpack_require__(/*! ./Transaction */ 241);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 199);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 336 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactIsomorphic.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */

	'use strict';

	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 294);
	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 307);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 306);
	var ReactDOMFactories = __webpack_require__(/*! ./ReactDOMFactories */ 337);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 338);
	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 291);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 330);

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var onlyChild = __webpack_require__(/*! ./onlyChild */ 340);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 337 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMFactories.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 338);

	var mapObject = __webpack_require__(/*! fbjs/lib/mapObject */ 339);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 338 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactElementValidator.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 249);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 250);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 189);

	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 227);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 292);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 339 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/mapObject.js ***!
  \*********************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ }),
/* 340 */
/*!**********************************!*\
  !*** ./~/react/lib/onlyChild.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(/*! ./ReactElement */ 226);

	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 197);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 341 */
/*!***********************************!*\
  !*** ./~/react/lib/deprecated.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */

	'use strict';

	var assign = __webpack_require__(/*! ./Object.assign */ 223);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 209);

	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }

	  return fn;
	}

	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 126)))

/***/ }),
/* 342 */
/*!***************************************!*\
  !*** ./~/create-react-class/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var React = __webpack_require__(/*! react */ 186);
	var factory = __webpack_require__(/*! ./factory */ 343);

	if (typeof React === 'undefined') {
	  throw Error(
	    'create-react-class could not find the React object. If you are using script tags, ' +
	      'make sure that React is being loaded before create-react-class.'
	  );
	}

	// Hack to grab NoopUpdateQueue from isomorphic React
	var ReactNoopUpdateQueue = new React.Component().updater;

	module.exports = factory(
	  React.Component,
	  React.isValidElement,
	  ReactNoopUpdateQueue
	);


/***/ }),
/* 343 */
/*!*****************************************!*\
  !*** ./~/create-react-class/factory.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(/*! object-assign */ 344);

	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 345);
	var _invariant = __webpack_require__(/*! fbjs/lib/invariant */ 346);

	if (process.env.NODE_ENV !== 'production') {
	  var warning = __webpack_require__(/*! fbjs/lib/warning */ 347);
	}

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	var ReactPropTypeLocationNames;
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */

	  var injectedMixins = [];

	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',

	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',

	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillMount`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillMount: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillReceiveProps`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillUpdate`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };

	  /**
	   * Similar to ReactClassInterface but for static methods.
	   */
	  var ReactClassStaticInterface = {
	    /**
	     * This method is invoked after a component is instantiated and when it
	     * receives new props. Return an object to update state in response to
	     * prop changes. Return null to indicate no change to state.
	     *
	     * If an object is returned, its keys will be merged into the existing state.
	     *
	     * @return {object || null}
	     * @optional
	     */
	    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
	  };

	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };

	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;

	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }

	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }

	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (process.env.NODE_ENV !== 'production') {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;

	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }

	      return;
	    }

	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;

	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];

	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );

	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (process.env.NODE_ENV !== 'production') {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }

	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );

	      var isAlreadyDefined = name in Constructor;
	      if (isAlreadyDefined) {
	        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
	          ? ReactClassStaticInterface[name]
	          : null;

	        _invariant(
	          specPolicy === 'DEFINE_MANY_MERGED',
	          'ReactClass: You are attempting to define ' +
	            '`%s` on your component more than once. This conflict may be ' +
	            'due to a mixin.',
	          name
	        );

	        Constructor[name] = createMergedResultFunction(Constructor[name], property);

	        return;
	      }

	      Constructor[name] = property;
	    }
	  }

	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }

	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }

	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }

	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (process.env.NODE_ENV !== 'production') {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }

	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }

	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };

	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };

	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );

	    if (process.env.NODE_ENV !== 'production') {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
	        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
	          'Did you mean UNSAFE_componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	module.exports = factory;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 126)))

/***/ }),
/* 344 */
/*!*******************************************************!*\
  !*** ./~/create-react-class/~/object-assign/index.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 345 */
/*!********************************************************!*\
  !*** ./~/create-react-class/~/fbjs/lib/emptyObject.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../process/browser.js */ 126)))

/***/ }),
/* 346 */
/*!******************************************************!*\
  !*** ./~/create-react-class/~/fbjs/lib/invariant.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../process/browser.js */ 126)))

/***/ }),
/* 347 */
/*!****************************************************!*\
  !*** ./~/create-react-class/~/fbjs/lib/warning.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 348);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../process/browser.js */ 126)))

/***/ }),
/* 348 */
/*!**********************************************************!*\
  !*** ./~/create-react-class/~/fbjs/lib/emptyFunction.js ***!
  \**********************************************************/
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 349 */
/*!*****************************************************!*\
  !*** ./output/Control.Monad.Eff.Uncurried/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 350);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	module.exports = {
	    mkEffFn1: $foreign.mkEffFn1,
	    mkEffFn2: $foreign.mkEffFn2,
	    mkEffFn3: $foreign.mkEffFn3,
	    mkEffFn4: $foreign.mkEffFn4,
	    mkEffFn5: $foreign.mkEffFn5,
	    mkEffFn6: $foreign.mkEffFn6,
	    mkEffFn7: $foreign.mkEffFn7,
	    mkEffFn8: $foreign.mkEffFn8,
	    mkEffFn9: $foreign.mkEffFn9,
	    mkEffFn10: $foreign.mkEffFn10,
	    runEffFn1: $foreign.runEffFn1,
	    runEffFn2: $foreign.runEffFn2,
	    runEffFn3: $foreign.runEffFn3,
	    runEffFn4: $foreign.runEffFn4,
	    runEffFn5: $foreign.runEffFn5,
	    runEffFn6: $foreign.runEffFn6,
	    runEffFn7: $foreign.runEffFn7,
	    runEffFn8: $foreign.runEffFn8,
	    runEffFn9: $foreign.runEffFn9,
	    runEffFn10: $foreign.runEffFn10
	};


/***/ }),
/* 350 */
/*!*******************************************************!*\
  !*** ./output/Control.Monad.Eff.Uncurried/foreign.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.mkEffFn1 = function mkEffFn1(fn) {
	  return function(x) {
	    return fn(x)();
	  };
	};

	exports.mkEffFn2 = function mkEffFn2(fn) {
	  return function(a, b) {
	    return fn(a)(b)();
	  };
	};

	exports.mkEffFn3 = function mkEffFn3(fn) {
	  return function(a, b, c) {
	    return fn(a)(b)(c)();
	  };
	};

	exports.mkEffFn4 = function mkEffFn4(fn) {
	  return function(a, b, c, d) {
	    return fn(a)(b)(c)(d)();
	  };
	};

	exports.mkEffFn5 = function mkEffFn5(fn) {
	  return function(a, b, c, d, e) {
	    return fn(a)(b)(c)(d)(e)();
	  };
	};

	exports.mkEffFn6 = function mkEffFn6(fn) {
	  return function(a, b, c, d, e, f) {
	    return fn(a)(b)(c)(d)(e)(f)();
	  };
	};

	exports.mkEffFn7 = function mkEffFn7(fn) {
	  return function(a, b, c, d, e, f, g) {
	    return fn(a)(b)(c)(d)(e)(f)(g)();
	  };
	};

	exports.mkEffFn8 = function mkEffFn8(fn) {
	  return function(a, b, c, d, e, f, g, h) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
	  };
	};

	exports.mkEffFn9 = function mkEffFn9(fn) {
	  return function(a, b, c, d, e, f, g, h, i) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
	  };
	};

	exports.mkEffFn10 = function mkEffFn10(fn) {
	  return function(a, b, c, d, e, f, g, h, i, j) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
	  };
	};

	exports.runEffFn1 = function runEffFn1(fn) {
	  return function(a) {
	    return function() {
	      return fn(a);
	    };
	  };
	};

	exports.runEffFn2 = function runEffFn2(fn) {
	  return function(a) {
	    return function(b) {
	      return function() {
	        return fn(a, b);
	      };
	    };
	  };
	};

	exports.runEffFn3 = function runEffFn3(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function() {
	          return fn(a, b, c);
	        };
	      };
	    };
	  };
	};

	exports.runEffFn4 = function runEffFn4(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function() {
	            return fn(a, b, c, d);
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn5 = function runEffFn5(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function() {
	              return fn(a, b, c, d, e);
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn6 = function runEffFn6(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function(f) {
	              return function() {
	                return fn(a, b, c, d, e, f);
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn7 = function runEffFn7(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function(f) {
	              return function(g) {
	                return function() {
	                  return fn(a, b, c, d, e, f, g);
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn8 = function runEffFn8(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function(f) {
	              return function(g) {
	                return function(h) {
	                  return function() {
	                    return fn(a, b, c, d, e, f, g, h);
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn9 = function runEffFn9(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function(f) {
	              return function(g) {
	                return function(h) {
	                  return function(i) {
	                    return function() {
	                      return fn(a, b, c, d, e, f, g, h, i);
	                    };
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runEffFn10 = function runEffFn10(fn) {
	  return function(a) {
	    return function(b) {
	      return function(c) {
	        return function(d) {
	          return function(e) {
	            return function(f) {
	              return function(g) {
	                return function(h) {
	                  return function(i) {
	                    return function(j) {
	                      return function() {
	                        return fn(a, b, c, d, e, f, g, h, i, j);
	                      };
	                    };
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};


/***/ }),
/* 351 */
/*!***********************************!*\
  !*** ./output/React.DOM/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var React = __webpack_require__(/*! ../React */ 184);
	var React_DOM_Props = __webpack_require__(/*! ../React.DOM.Props */ 352);
	var Unsafe_Coerce = __webpack_require__(/*! ../Unsafe.Coerce */ 109);
	var IsDynamic = function (x) {
	    return x;
	};
	var text = Unsafe_Coerce.unsafeCoerce;
	var mkDOM = function (dynamic) {
	    return function (tag) {
	        return function (props) {
	            var createElement = (function () {
	                if (!dynamic) {
	                    return React.createElementTagName;
	                };
	                if (dynamic) {
	                    return React.createElementTagNameDynamic;
	                };
	                throw new Error("Failed pattern match at React.DOM line 15, column 5 - line 17, column 55: " + [ dynamic.constructor.name ]);
	            })();
	            return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
	        };
	    };
	};
	var nav = mkDOM(false)("nav");
	var nav$prime = nav([  ]);
	var noscript = mkDOM(false)("noscript");
	var noscript$prime = noscript([  ]);
	var object = mkDOM(false)("object");
	var object$prime = object([  ]);
	var ol = mkDOM(false)("ol");
	var ol$prime = ol([  ]);
	var optgroup = mkDOM(false)("optgroup");
	var optgroup$prime = optgroup([  ]);
	var option = mkDOM(false)("option");
	var option$prime = option([  ]);
	var output = mkDOM(false)("output");
	var output$prime = output([  ]);
	var p = mkDOM(false)("p");
	var p$prime = p([  ]);
	var param = mkDOM(false)("param");
	var param$prime = param([  ]);
	var picture = mkDOM(false)("picture");
	var picture$prime = picture([  ]);
	var pre = mkDOM(false)("pre");
	var pre$prime = pre([  ]);
	var progress = mkDOM(false)("progress");
	var progress$prime = progress([  ]);
	var q = mkDOM(false)("q");
	var q$prime = q([  ]);
	var rp = mkDOM(false)("rp");
	var rp$prime = rp([  ]);
	var rt = mkDOM(false)("rt");
	var rt$prime = rt([  ]);
	var ruby = mkDOM(false)("ruby");
	var ruby$prime = ruby([  ]);
	var s = mkDOM(false)("s");
	var s$prime = s([  ]);
	var samp = mkDOM(false)("samp");
	var samp$prime = samp([  ]);
	var script = mkDOM(false)("script");
	var script$prime = script([  ]);
	var section = mkDOM(false)("section");
	var section$prime = section([  ]);
	var select = mkDOM(false)("select");
	var select$prime = select([  ]);
	var small = mkDOM(false)("small");
	var small$prime = small([  ]);
	var source = mkDOM(false)("source");
	var source$prime = source([  ]);
	var span = mkDOM(false)("span");
	var span$prime = span([  ]);
	var strong = mkDOM(false)("strong");
	var strong$prime = strong([  ]);
	var style = mkDOM(false)("style");
	var style$prime = style([  ]);
	var sub = mkDOM(false)("sub");
	var sub$prime = sub([  ]);
	var summary = mkDOM(false)("summary");
	var summary$prime = summary([  ]);
	var sup = mkDOM(false)("sup");
	var sup$prime = sup([  ]);
	var table = mkDOM(false)("table");
	var table$prime = table([  ]);
	var tbody = mkDOM(false)("tbody");
	var tbody$prime = tbody([  ]);
	var td = mkDOM(false)("td");
	var td$prime = td([  ]);
	var textarea = mkDOM(false)("textarea");
	var textarea$prime = textarea([  ]);
	var tfoot = mkDOM(false)("tfoot");
	var tfoot$prime = tfoot([  ]);
	var th = mkDOM(false)("th");
	var th$prime = th([  ]);
	var thead = mkDOM(false)("thead");
	var thead$prime = thead([  ]);
	var time = mkDOM(false)("time");
	var time$prime = time([  ]);
	var title = mkDOM(false)("title");
	var title$prime = title([  ]);
	var tr = mkDOM(false)("tr");
	var tr$prime = tr([  ]);
	var track = mkDOM(false)("track");
	var track$prime = track([  ]);
	var u = mkDOM(false)("u");
	var u$prime = u([  ]);
	var ul = mkDOM(false)("ul");
	var ul$prime = ul([  ]);
	var $$var = mkDOM(false)("var");
	var var$prime = $$var([  ]);
	var video = mkDOM(false)("video");
	var video$prime = video([  ]);
	var wbr = mkDOM(false)("body");
	var wbr$prime = wbr([  ]);
	var meter = mkDOM(false)("meter");
	var meter$prime = meter([  ]);
	var meta = mkDOM(false)("meta");
	var meta$prime = meta([  ]);
	var menuitem = mkDOM(false)("menuitem");
	var menuitem$prime = menuitem([  ]);
	var menu = mkDOM(false)("menu");
	var menu$prime = menu([  ]);
	var mark = mkDOM(false)("mark");
	var mark$prime = mark([  ]);
	var map = mkDOM(false)("map");
	var map$prime = map([  ]);
	var main = mkDOM(false)("main");
	var main$prime = main([  ]);
	var link = mkDOM(false)("link");
	var li = mkDOM(false)("li");
	var li$prime = li([  ]);
	var legend = mkDOM(false)("legend");
	var legend$prime = legend([  ]);
	var label = mkDOM(false)("label");
	var label$prime = label([  ]);
	var keygen = mkDOM(false)("keygen");
	var keygen$prime = keygen([  ]);
	var kbd = mkDOM(false)("kbd");
	var kbd$prime = kbd([  ]);
	var ins = mkDOM(false)("ins");
	var ins$prime = ins([  ]);
	var input = mkDOM(false)("input");
	var input$prime = input([  ]);
	var img = mkDOM(false)("img");
	var img$prime = img([  ]);
	var iframe = mkDOM(false)("iframe");
	var iframe$prime = iframe([  ]);
	var i = mkDOM(false)("i");
	var i$prime = i([  ]);
	var html = mkDOM(false)("html");
	var html$prime = html([  ]);
	var hr = mkDOM(false)("hr");
	var hr$prime = hr([  ]);
	var header = mkDOM(false)("header");
	var header$prime = header([  ]);
	var head = mkDOM(false)("head");
	var head$prime = head([  ]);
	var h6 = mkDOM(false)("h6");
	var h6$prime = h6([  ]);
	var h5 = mkDOM(false)("h5");
	var h5$prime = h5([  ]);
	var h4 = mkDOM(false)("h4");
	var h4$prime = h4([  ]);
	var h3 = mkDOM(false)("h3");
	var h3$prime = h3([  ]);
	var h2 = mkDOM(false)("h2");
	var h2$prime = h2([  ]);
	var h1 = mkDOM(false)("h1");
	var h1$prime = h1([  ]);
	var form = mkDOM(false)("form");
	var form$prime = form([  ]);
	var footer = mkDOM(false)("footer");
	var footer$prime = footer([  ]);
	var figure = mkDOM(false)("figure");
	var figure$prime = figure([  ]);
	var figcaption = mkDOM(false)("figcaption");
	var figcaption$prime = figcaption([  ]);
	var fieldset = mkDOM(false)("fieldset");
	var fieldset$prime = fieldset([  ]);
	var embed = mkDOM(false)("embed");
	var embed$prime = embed([  ]);
	var em = mkDOM(false)("em");
	var em$prime = em([  ]);
	var dt = mkDOM(false)("dt");
	var dt$prime = dt([  ]);
	var dl = mkDOM(false)("dl");
	var dl$prime = dl([  ]);
	var div = mkDOM(false)("div");
	var div$prime = div([  ]);
	var dialog = mkDOM(false)("dialog");
	var dialog$prime = dialog([  ]);
	var dfn = mkDOM(false)("dfn");
	var dfn$prime = dfn([  ]);
	var details = mkDOM(false)("details");
	var details$prime = details([  ]);
	var del = mkDOM(false)("del");
	var del$prime = del([  ]);
	var dd = mkDOM(false)("dd");
	var dd$prime = dd([  ]);
	var datalist = mkDOM(false)("datalist");
	var datalist$prime = datalist([  ]);
	var colgroup = mkDOM(false)("colgroup");
	var colgroup$prime = colgroup([  ]);
	var col = mkDOM(false)("col");
	var col$prime = col([  ]);
	var code = mkDOM(false)("code");
	var code$prime = code([  ]);
	var cite = mkDOM(false)("cite");
	var cite$prime = cite([  ]);
	var caption = mkDOM(false)("caption");
	var caption$prime = caption([  ]);
	var canvas = mkDOM(false)("canvas");
	var canvas$prime = canvas([  ]);
	var button = mkDOM(false)("button");
	var button$prime = button([  ]);
	var br = mkDOM(false)("br");
	var br$prime = br([  ]);
	var body = mkDOM(false)("body");
	var body$prime = body([  ]);
	var link$prime = body([  ]);
	var blockquote = mkDOM(false)("blockquote");
	var blockquote$prime = blockquote([  ]);
	var big = mkDOM(false)("big");
	var big$prime = big([  ]);
	var bdo = mkDOM(false)("bdo");
	var bdo$prime = bdo([  ]);
	var bdi = mkDOM(false)("bdi");
	var bdi$prime = bdi([  ]);
	var base = mkDOM(false)("base");
	var base$prime = base([  ]);
	var b = mkDOM(false)("b");
	var b$prime = b([  ]);
	var audio = mkDOM(false)("audio");
	var audio$prime = audio([  ]);
	var aside = mkDOM(false)("aside");
	var aside$prime = aside([  ]);
	var article = mkDOM(false)("article");
	var article$prime = article([  ]);
	var area = mkDOM(false)("area");
	var area$prime = area([  ]);
	var address = mkDOM(false)("address");
	var address$prime = address([  ]);
	var abbr = mkDOM(false)("abbr");
	var abbr$prime = abbr([  ]);
	var a = mkDOM(false)("a");
	var a$prime = a([  ]);
	var _data = mkDOM(false)("data");
	var _data$prime = _data([  ]);
	module.exports = {
	    IsDynamic: IsDynamic,
	    mkDOM: mkDOM,
	    text: text,
	    a: a,
	    "a'": a$prime,
	    abbr: abbr,
	    "abbr'": abbr$prime,
	    address: address,
	    "address'": address$prime,
	    area: area,
	    "area'": area$prime,
	    article: article,
	    "article'": article$prime,
	    aside: aside,
	    "aside'": aside$prime,
	    audio: audio,
	    "audio'": audio$prime,
	    b: b,
	    "b'": b$prime,
	    base: base,
	    "base'": base$prime,
	    bdi: bdi,
	    "bdi'": bdi$prime,
	    bdo: bdo,
	    "bdo'": bdo$prime,
	    big: big,
	    "big'": big$prime,
	    blockquote: blockquote,
	    "blockquote'": blockquote$prime,
	    body: body,
	    "body'": body$prime,
	    br: br,
	    "br'": br$prime,
	    button: button,
	    "button'": button$prime,
	    canvas: canvas,
	    "canvas'": canvas$prime,
	    caption: caption,
	    "caption'": caption$prime,
	    cite: cite,
	    "cite'": cite$prime,
	    code: code,
	    "code'": code$prime,
	    col: col,
	    "col'": col$prime,
	    colgroup: colgroup,
	    "colgroup'": colgroup$prime,
	    _data: _data,
	    "_data'": _data$prime,
	    datalist: datalist,
	    "datalist'": datalist$prime,
	    dd: dd,
	    "dd'": dd$prime,
	    del: del,
	    "del'": del$prime,
	    details: details,
	    "details'": details$prime,
	    dfn: dfn,
	    "dfn'": dfn$prime,
	    dialog: dialog,
	    "dialog'": dialog$prime,
	    div: div,
	    "div'": div$prime,
	    dl: dl,
	    "dl'": dl$prime,
	    dt: dt,
	    "dt'": dt$prime,
	    em: em,
	    "em'": em$prime,
	    embed: embed,
	    "embed'": embed$prime,
	    fieldset: fieldset,
	    "fieldset'": fieldset$prime,
	    figcaption: figcaption,
	    "figcaption'": figcaption$prime,
	    figure: figure,
	    "figure'": figure$prime,
	    footer: footer,
	    "footer'": footer$prime,
	    form: form,
	    "form'": form$prime,
	    h1: h1,
	    "h1'": h1$prime,
	    h2: h2,
	    "h2'": h2$prime,
	    h3: h3,
	    "h3'": h3$prime,
	    h4: h4,
	    "h4'": h4$prime,
	    h5: h5,
	    "h5'": h5$prime,
	    h6: h6,
	    "h6'": h6$prime,
	    head: head,
	    "head'": head$prime,
	    header: header,
	    "header'": header$prime,
	    hr: hr,
	    "hr'": hr$prime,
	    html: html,
	    "html'": html$prime,
	    i: i,
	    "i'": i$prime,
	    iframe: iframe,
	    "iframe'": iframe$prime,
	    img: img,
	    "img'": img$prime,
	    input: input,
	    "input'": input$prime,
	    ins: ins,
	    "ins'": ins$prime,
	    kbd: kbd,
	    "kbd'": kbd$prime,
	    keygen: keygen,
	    "keygen'": keygen$prime,
	    label: label,
	    "label'": label$prime,
	    legend: legend,
	    "legend'": legend$prime,
	    li: li,
	    "li'": li$prime,
	    link: link,
	    "link'": link$prime,
	    main: main,
	    "main'": main$prime,
	    map: map,
	    "map'": map$prime,
	    mark: mark,
	    "mark'": mark$prime,
	    menu: menu,
	    "menu'": menu$prime,
	    menuitem: menuitem,
	    "menuitem'": menuitem$prime,
	    meta: meta,
	    "meta'": meta$prime,
	    meter: meter,
	    "meter'": meter$prime,
	    nav: nav,
	    "nav'": nav$prime,
	    noscript: noscript,
	    "noscript'": noscript$prime,
	    object: object,
	    "object'": object$prime,
	    ol: ol,
	    "ol'": ol$prime,
	    optgroup: optgroup,
	    "optgroup'": optgroup$prime,
	    option: option,
	    "option'": option$prime,
	    output: output,
	    "output'": output$prime,
	    p: p,
	    "p'": p$prime,
	    param: param,
	    "param'": param$prime,
	    picture: picture,
	    "picture'": picture$prime,
	    pre: pre,
	    "pre'": pre$prime,
	    progress: progress,
	    "progress'": progress$prime,
	    q: q,
	    "q'": q$prime,
	    rp: rp,
	    "rp'": rp$prime,
	    rt: rt,
	    "rt'": rt$prime,
	    ruby: ruby,
	    "ruby'": ruby$prime,
	    s: s,
	    "s'": s$prime,
	    samp: samp,
	    "samp'": samp$prime,
	    script: script,
	    "script'": script$prime,
	    section: section,
	    "section'": section$prime,
	    select: select,
	    "select'": select$prime,
	    small: small,
	    "small'": small$prime,
	    source: source,
	    "source'": source$prime,
	    span: span,
	    "span'": span$prime,
	    strong: strong,
	    "strong'": strong$prime,
	    style: style,
	    "style'": style$prime,
	    sub: sub,
	    "sub'": sub$prime,
	    summary: summary,
	    "summary'": summary$prime,
	    sup: sup,
	    "sup'": sup$prime,
	    table: table,
	    "table'": table$prime,
	    tbody: tbody,
	    "tbody'": tbody$prime,
	    td: td,
	    "td'": td$prime,
	    textarea: textarea,
	    "textarea'": textarea$prime,
	    tfoot: tfoot,
	    "tfoot'": tfoot$prime,
	    th: th,
	    "th'": th$prime,
	    thead: thead,
	    "thead'": thead$prime,
	    time: time,
	    "time'": time$prime,
	    title: title,
	    "title'": title$prime,
	    tr: tr,
	    "tr'": tr$prime,
	    track: track,
	    "track'": track$prime,
	    u: u,
	    "u'": u$prime,
	    ul: ul,
	    "ul'": ul$prime,
	    "var": $$var,
	    "var'": var$prime,
	    video: video,
	    "video'": video$prime,
	    wbr: wbr,
	    "wbr'": wbr$prime
	};


/***/ }),
/* 352 */
/*!*****************************************!*\
  !*** ./output/React.DOM.Props/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 353);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ../Control.Monad.Eff.Unsafe */ 90);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Nullable = __webpack_require__(/*! ../Data.Nullable */ 180);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var React = __webpack_require__(/*! ../React */ 184);
	var y = $foreign.unsafeMkProps("y");
	var x = $foreign.unsafeMkProps("x");
	var wrap = $foreign.unsafeMkProps("wrap");
	var wmode = $foreign.unsafeMkProps("wmode");
	var withRef = function (cb) {
	    return $foreign.unsafeMkProps("ref")(function ($0) {
	        return Control_Monad_Eff_Unsafe.unsafePerformEff(cb($0));
	    });
	};
	var width = $foreign.unsafeMkProps("width");
	var vocab = $foreign.unsafeMkProps("vocab");
	var viewBox = $foreign.unsafeMkProps("viewBox");
	var value = $foreign.unsafeMkProps("value");
	var useMap = $foreign.unsafeMkProps("useMap");
	var unselectable = $foreign.unsafeMkProps("unselectable");
	var $$typeof = $foreign.unsafeMkProps("typeof");
	var title = $foreign.unsafeMkProps("title");
	var target = $foreign.unsafeMkProps("target");
	var tabIndex = $foreign.unsafeMkProps("tabIndex");
	var suppressContentEditableWarning = $foreign.unsafeMkProps("suppressContentEditableWarning");
	var summary = $foreign.unsafeMkProps("summary");
	var style = $foreign.unsafeUnfoldProps("style");
	var strokeWidth = $foreign.unsafeMkProps("strokeWidth");
	var stroke = $foreign.unsafeMkProps("stroke");
	var step = $foreign.unsafeMkProps("step");
	var start = $foreign.unsafeMkProps("start");
	var srcSet = $foreign.unsafeMkProps("srcSet");
	var srcLang = $foreign.unsafeMkProps("srcLang");
	var srcDoc = $foreign.unsafeMkProps("srcDoc");
	var src = $foreign.unsafeMkProps("src");
	var spellCheck = $foreign.unsafeMkProps("spellCheck");
	var span = $foreign.unsafeMkProps("span");
	var sizes = $foreign.unsafeMkProps("sizes");
	var size = $foreign.unsafeMkProps("size");
	var shape = $foreign.unsafeMkProps("shape");
	var selected = $foreign.unsafeMkProps("selected");
	var security = $foreign.unsafeMkProps("security");
	var seamless = $foreign.unsafeMkProps("seamless");
	var scrolling = $foreign.unsafeMkProps("scrolling");
	var scoped = $foreign.unsafeMkProps("scoped");
	var scope = $foreign.unsafeMkProps("scope");
	var sandbox = $foreign.unsafeMkProps("sandbox");
	var rows = $foreign.unsafeMkProps("rows");
	var rowSpan = $foreign.unsafeMkProps("rowSpan");
	var role = $foreign.unsafeMkProps("role");
	var reversed = $foreign.unsafeMkProps("reversed");
	var results = $foreign.unsafeMkProps("results");
	var resource = $foreign.unsafeMkProps("resource");
	var required = $foreign.unsafeMkProps("required");
	var rel = $foreign.unsafeMkProps("rel");
	var ref = $foreign.unsafeMkProps("ref");
	var readOnly = $foreign.unsafeMkProps("readOnly");
	var radioGroup = $foreign.unsafeMkProps("radioGroup");
	var r = $foreign.unsafeMkProps("r");
	var property = $foreign.unsafeMkProps("property");
	var profile = $foreign.unsafeMkProps("profile");
	var preload = $foreign.unsafeMkProps("preload");
	var prefix = $foreign.unsafeMkProps("prefix");
	var poster = $foreign.unsafeMkProps("poster");
	var points = $foreign.unsafeMkProps("points");
	var placeholder = $foreign.unsafeMkProps("placeholder");
	var pattern = $foreign.unsafeMkProps("pattern");
	var optimum = $foreign.unsafeMkProps("optimum");
	var open = $foreign.unsafeMkProps("open");
	var opacity = $foreign.unsafeMkProps("opacity");
	var onWheel = function (f) {
	    return $foreign.unsafeMkProps("onWheel")(React.handle(f));
	};
	var onTransitionEnd = function (f) {
	    return $foreign.unsafeMkProps("onTransitionEnd")(React.handle(f));
	};
	var onTouchStart = function (f) {
	    return $foreign.unsafeMkProps("onTouchStart")(React.handle(f));
	};
	var onTouchMove = function (f) {
	    return $foreign.unsafeMkProps("onTouchMove")(React.handle(f));
	};
	var onTouchEnd = function (f) {
	    return $foreign.unsafeMkProps("onTouchEnd")(React.handle(f));
	};
	var onTouchCancel = function (f) {
	    return $foreign.unsafeMkProps("onTouchCancel")(React.handle(f));
	};
	var onSubmit = function (f) {
	    return $foreign.unsafeMkProps("onSubmit")(React.handle(f));
	};
	var onScroll = function (f) {
	    return $foreign.unsafeMkProps("onScroll")(React.handle(f));
	};
	var onPaste = function (f) {
	    return $foreign.unsafeMkProps("onPaste")(React.handle(f));
	};
	var onMouseUp = function (f) {
	    return $foreign.unsafeMkProps("onMouseUp")(React.handle(f));
	};
	var onMouseOver = function (f) {
	    return $foreign.unsafeMkProps("onMouseOver")(React.handle(f));
	};
	var onMouseOut = function (f) {
	    return $foreign.unsafeMkProps("onMouseOut")(React.handle(f));
	};
	var onMouseMove = function (f) {
	    return $foreign.unsafeMkProps("onMouseMove")(React.handle(f));
	};
	var onMouseLeave = function (f) {
	    return $foreign.unsafeMkProps("onMouseLeave")(React.handle(f));
	};
	var onMouseEnter = function (f) {
	    return $foreign.unsafeMkProps("onMouseEnter")(React.handle(f));
	};
	var onMouseDown = function (f) {
	    return $foreign.unsafeMkProps("onMouseDown")(React.handle(f));
	};
	var onLoad = function (f) {
	    return $foreign.unsafeMkProps("onLoad")(React.handle(f));
	};
	var onKeyUp = function (f) {
	    return $foreign.unsafeMkProps("onKeyUp")(React.handle(f));
	};
	var onKeyPress = function (f) {
	    return $foreign.unsafeMkProps("onKeyPress")(React.handle(f));
	};
	var onKeyDown = function (f) {
	    return $foreign.unsafeMkProps("onKeyDown")(React.handle(f));
	};
	var onInvalid = function (f) {
	    return $foreign.unsafeMkProps("onInvalid")(React.handle(f));
	};
	var onInput = function (f) {
	    return $foreign.unsafeMkProps("onInput")(React.handle(f));
	};
	var onFocus = function (f) {
	    return $foreign.unsafeMkProps("onFocus")(React.handle(f));
	};
	var onDrop = function (f) {
	    return $foreign.unsafeMkProps("onDrop")(React.handle(f));
	};
	var onDragStart = function (f) {
	    return $foreign.unsafeMkProps("onDragStart")(React.handle(f));
	};
	var onDragOver = function (f) {
	    return $foreign.unsafeMkProps("onDragOver")(React.handle(f));
	};
	var onDragLeave = function (f) {
	    return $foreign.unsafeMkProps("onDragLeave")(React.handle(f));
	};
	var onDragExit = function (f) {
	    return $foreign.unsafeMkProps("onDragExit")(React.handle(f));
	};
	var onDragEnter = function (f) {
	    return $foreign.unsafeMkProps("onDragEnter")(React.handle(f));
	};
	var onDragEnd = function (f) {
	    return $foreign.unsafeMkProps("onDragEnd")(React.handle(f));
	};
	var onDrag = function (f) {
	    return $foreign.unsafeMkProps("onDrag")(React.handle(f));
	};
	var onDoubleClick = function (f) {
	    return $foreign.unsafeMkProps("onDoubleClick")(React.handle(f));
	};
	var onCut = function (f) {
	    return $foreign.unsafeMkProps("onCut")(React.handle(f));
	};
	var onCopy = function (f) {
	    return $foreign.unsafeMkProps("onCopy")(React.handle(f));
	};
	var onClick = function (f) {
	    return $foreign.unsafeMkProps("onClick")(React.handle(f));
	};
	var onChange = function (f) {
	    return $foreign.unsafeMkProps("onChange")(React.handle(f));
	};
	var onBlur = function (f) {
	    return $foreign.unsafeMkProps("onBlur")(React.handle(f));
	};
	var onAnimationStart = function (f) {
	    return $foreign.unsafeMkProps("onAnimationStart")(React.handle(f));
	};
	var onAnimationIteration = function (f) {
	    return $foreign.unsafeMkProps("onAnimationIteration")(React.handle(f));
	};
	var onAnimationEnd = function (f) {
	    return $foreign.unsafeMkProps("onAnimationEnd")(React.handle(f));
	};
	var nonce = $foreign.unsafeMkProps("nonce");
	var noValidate = $foreign.unsafeMkProps("noValidate");
	var name = $foreign.unsafeMkProps("name");
	var muted = $foreign.unsafeMkProps("muted");
	var multiple = $foreign.unsafeMkProps("multiple");
	var minLength = $foreign.unsafeMkProps("minLength");
	var min = $foreign.unsafeMkProps("min");
	var method = $foreign.unsafeMkProps("method");
	var mediaGroup = $foreign.unsafeMkProps("mediaGroup");
	var media = $foreign.unsafeMkProps("media");
	var maxLength = $foreign.unsafeMkProps("maxLength");
	var max = $foreign.unsafeMkProps("max");
	var marginWidth = $foreign.unsafeMkProps("marginWidth");
	var marginHeight = $foreign.unsafeMkProps("marginHeight");
	var manifest = $foreign.unsafeMkProps("manifest");
	var low = $foreign.unsafeMkProps("low");
	var loop = $foreign.unsafeMkProps("loop");
	var list = $foreign.unsafeMkProps("list");
	var lang = $foreign.unsafeMkProps("lang");
	var label = $foreign.unsafeMkProps("label");
	var kind = $foreign.unsafeMkProps("kind");
	var keyType = $foreign.unsafeMkProps("keyType");
	var keyParams = $foreign.unsafeMkProps("keyParams");
	var key = $foreign.unsafeMkProps("key");
	var itemType = $foreign.unsafeMkProps("itemType");
	var itemScope = $foreign.unsafeMkProps("itemScope");
	var itemRef = $foreign.unsafeMkProps("itemRef");
	var itemProp = $foreign.unsafeMkProps("itemProp");
	var itemID = $foreign.unsafeMkProps("itemID");
	var is = $foreign.unsafeMkProps("is");
	var integrity = $foreign.unsafeMkProps("integrity");
	var inputMode = $foreign.unsafeMkProps("inputMode");
	var inlist = $foreign.unsafeMkProps("inlist");
	var icon = $foreign.unsafeMkProps("icon");
	var httpEquiv = $foreign.unsafeMkProps("httpEquiv");
	var htmlFor = $foreign.unsafeMkProps("htmlFor");
	var hrefLang = $foreign.unsafeMkProps("hrefLang");
	var href = $foreign.unsafeMkProps("href");
	var high = $foreign.unsafeMkProps("high");
	var hidden = $foreign.unsafeMkProps("hidden");
	var height = $foreign.unsafeMkProps("height");
	var headers = $foreign.unsafeMkProps("headers");
	var frameBorder = $foreign.unsafeMkProps("frameBorder");
	var formTarget = $foreign.unsafeMkProps("formTarget");
	var formNoValidate = $foreign.unsafeMkProps("formNoValidate");
	var formMethod = $foreign.unsafeMkProps("formMethod");
	var formEncType = $foreign.unsafeMkProps("formEncType");
	var formAction = $foreign.unsafeMkProps("formAction");
	var form = $foreign.unsafeMkProps("form");
	var fillOpacity = $foreign.unsafeMkProps("fillOpacity");
	var fill = $foreign.unsafeMkProps("fill");
	var encType = $foreign.unsafeMkProps("encType");
	var draggable = $foreign.unsafeMkProps("draggable");
	var download = $foreign.unsafeMkProps("download");
	var disabled = $foreign.unsafeMkProps("disabled");
	var dir = $foreign.unsafeMkProps("dir");
	var defer = $foreign.unsafeMkProps("defer");
	var defaultValue = $foreign.unsafeMkProps("defaultValue");
	var defaultChecked = $foreign.unsafeMkProps("defaultChecked");
	var $$default = $foreign.unsafeMkProps("default");
	var dateTime = $foreign.unsafeMkProps("dateTime");
	var datatype = $foreign.unsafeMkProps("datatype");
	var dangerouslySetInnerHTML = $foreign.unsafeMkProps("dangerouslySetInnerHTML");
	var d = $foreign.unsafeMkProps("d");
	var cy = $foreign.unsafeMkProps("cy");
	var cx = $foreign.unsafeMkProps("cx");
	var crossOrigin = $foreign.unsafeMkProps("crossOrigin");
	var coords = $foreign.unsafeMkProps("coords");
	var controls = $foreign.unsafeMkProps("controls");
	var contextMenu = $foreign.unsafeMkProps("contextMenu");
	var contentEditable = $foreign.unsafeMkProps("contentEditable");
	var content = $foreign.unsafeMkProps("content");
	var cols = $foreign.unsafeMkProps("cols");
	var color = $foreign.unsafeMkProps("color");
	var colSpan = $foreign.unsafeMkProps("colSpan");
	var className = $foreign.unsafeMkProps("className");
	var classID = $foreign.unsafeMkProps("classID");
	var cite = $foreign.unsafeMkProps("cite");
	var checked = $foreign.unsafeMkProps("checked");
	var charSet = $foreign.unsafeMkProps("charSet");
	var challenge = $foreign.unsafeMkProps("checked");
	var cellSpacing = $foreign.unsafeMkProps("cellSpacing");
	var cellPadding = $foreign.unsafeMkProps("cellPadding");
	var capture = $foreign.unsafeMkProps("capture");
	var autoSave = $foreign.unsafeMkProps("autoSave");
	var autoPlay = $foreign.unsafeMkProps("autoPlay");
	var autoFocus = $foreign.unsafeMkProps("autoFocus");
	var autoCorrect = $foreign.unsafeMkProps("autoCorrect");
	var autoComplete = $foreign.unsafeMkProps("autoComplete");
	var autoCapitalize = $foreign.unsafeMkProps("autoCapitalize");
	var async = $foreign.unsafeMkProps("async");
	var aria = $foreign.unsafePrefixProps("aria-");
	var alt = $foreign.unsafeMkProps("alt");
	var allowTransparency = $foreign.unsafeMkProps("allowTransparency");
	var allowFullScreen = $foreign.unsafeMkProps("allowFullScreen");
	var action = $foreign.unsafeMkProps("action");
	var accessKey = $foreign.unsafeMkProps("accessKey");
	var acceptCharset = $foreign.unsafeMkProps("acceptCharset");
	var accept = $foreign.unsafeMkProps("accept");
	var about = $foreign.unsafeMkProps("about");
	var _type = $foreign.unsafeMkProps("type");
	var _id = $foreign.unsafeMkProps("id");
	var _data = $foreign.unsafePrefixProps("data-");
	module.exports = {
	    aria: aria,
	    _data: _data,
	    style: style,
	    dangerouslySetInnerHTML: dangerouslySetInnerHTML,
	    accept: accept,
	    acceptCharset: acceptCharset,
	    accessKey: accessKey,
	    action: action,
	    allowFullScreen: allowFullScreen,
	    allowTransparency: allowTransparency,
	    alt: alt,
	    async: async,
	    autoComplete: autoComplete,
	    autoFocus: autoFocus,
	    autoPlay: autoPlay,
	    capture: capture,
	    cellPadding: cellPadding,
	    cellSpacing: cellSpacing,
	    charSet: charSet,
	    challenge: challenge,
	    checked: checked,
	    cite: cite,
	    classID: classID,
	    className: className,
	    cols: cols,
	    colSpan: colSpan,
	    content: content,
	    contentEditable: contentEditable,
	    contextMenu: contextMenu,
	    controls: controls,
	    coords: coords,
	    crossOrigin: crossOrigin,
	    dateTime: dateTime,
	    "default": $$default,
	    defaultChecked: defaultChecked,
	    defaultValue: defaultValue,
	    defer: defer,
	    dir: dir,
	    disabled: disabled,
	    download: download,
	    draggable: draggable,
	    encType: encType,
	    form: form,
	    formAction: formAction,
	    formEncType: formEncType,
	    formMethod: formMethod,
	    formNoValidate: formNoValidate,
	    formTarget: formTarget,
	    frameBorder: frameBorder,
	    headers: headers,
	    height: height,
	    hidden: hidden,
	    high: high,
	    href: href,
	    hrefLang: hrefLang,
	    htmlFor: htmlFor,
	    httpEquiv: httpEquiv,
	    icon: icon,
	    _id: _id,
	    inputMode: inputMode,
	    integrity: integrity,
	    is: is,
	    key: key,
	    keyParams: keyParams,
	    keyType: keyType,
	    kind: kind,
	    label: label,
	    lang: lang,
	    list: list,
	    loop: loop,
	    low: low,
	    manifest: manifest,
	    marginHeight: marginHeight,
	    marginWidth: marginWidth,
	    max: max,
	    maxLength: maxLength,
	    media: media,
	    mediaGroup: mediaGroup,
	    method: method,
	    min: min,
	    minLength: minLength,
	    multiple: multiple,
	    muted: muted,
	    name: name,
	    nonce: nonce,
	    noValidate: noValidate,
	    open: open,
	    optimum: optimum,
	    pattern: pattern,
	    placeholder: placeholder,
	    poster: poster,
	    preload: preload,
	    profile: profile,
	    radioGroup: radioGroup,
	    readOnly: readOnly,
	    ref: ref,
	    withRef: withRef,
	    rel: rel,
	    required: required,
	    reversed: reversed,
	    role: role,
	    rows: rows,
	    rowSpan: rowSpan,
	    sandbox: sandbox,
	    scope: scope,
	    scoped: scoped,
	    scrolling: scrolling,
	    seamless: seamless,
	    selected: selected,
	    shape: shape,
	    size: size,
	    sizes: sizes,
	    span: span,
	    spellCheck: spellCheck,
	    src: src,
	    srcDoc: srcDoc,
	    srcLang: srcLang,
	    srcSet: srcSet,
	    start: start,
	    step: step,
	    summary: summary,
	    tabIndex: tabIndex,
	    target: target,
	    title: title,
	    _type: _type,
	    useMap: useMap,
	    value: value,
	    width: width,
	    wmode: wmode,
	    wrap: wrap,
	    about: about,
	    datatype: datatype,
	    inlist: inlist,
	    prefix: prefix,
	    property: property,
	    resource: resource,
	    "typeof": $$typeof,
	    vocab: vocab,
	    autoCapitalize: autoCapitalize,
	    autoCorrect: autoCorrect,
	    autoSave: autoSave,
	    color: color,
	    itemProp: itemProp,
	    itemScope: itemScope,
	    itemType: itemType,
	    itemID: itemID,
	    itemRef: itemRef,
	    results: results,
	    security: security,
	    unselectable: unselectable,
	    onAnimationStart: onAnimationStart,
	    onAnimationEnd: onAnimationEnd,
	    onAnimationIteration: onAnimationIteration,
	    onTransitionEnd: onTransitionEnd,
	    onLoad: onLoad,
	    onCopy: onCopy,
	    onCut: onCut,
	    onPaste: onPaste,
	    onKeyDown: onKeyDown,
	    onKeyPress: onKeyPress,
	    onKeyUp: onKeyUp,
	    onFocus: onFocus,
	    onBlur: onBlur,
	    onChange: onChange,
	    onInput: onInput,
	    onInvalid: onInvalid,
	    onSubmit: onSubmit,
	    onClick: onClick,
	    onDoubleClick: onDoubleClick,
	    onDrag: onDrag,
	    onDragEnd: onDragEnd,
	    onDragEnter: onDragEnter,
	    onDragExit: onDragExit,
	    onDragLeave: onDragLeave,
	    onDragOver: onDragOver,
	    onDragStart: onDragStart,
	    onDrop: onDrop,
	    onMouseDown: onMouseDown,
	    onMouseEnter: onMouseEnter,
	    onMouseLeave: onMouseLeave,
	    onMouseMove: onMouseMove,
	    onMouseOut: onMouseOut,
	    onMouseOver: onMouseOver,
	    onMouseUp: onMouseUp,
	    onTouchCancel: onTouchCancel,
	    onTouchEnd: onTouchEnd,
	    onTouchMove: onTouchMove,
	    onTouchStart: onTouchStart,
	    onScroll: onScroll,
	    onWheel: onWheel,
	    suppressContentEditableWarning: suppressContentEditableWarning,
	    x: x,
	    y: y,
	    cx: cx,
	    cy: cy,
	    r: r,
	    fill: fill,
	    opacity: opacity,
	    fillOpacity: fillOpacity,
	    stroke: stroke,
	    strokeWidth: strokeWidth,
	    points: points,
	    d: d,
	    viewBox: viewBox,
	    unsafeMkProps: $foreign.unsafeMkProps,
	    unsafeUnfoldProps: $foreign.unsafeUnfoldProps,
	    unsafePrefixProps: $foreign.unsafePrefixProps,
	    unsafeFromPropsArray: $foreign.unsafeFromPropsArray
	};


/***/ }),
/* 353 */
/*!*******************************************!*\
  !*** ./output/React.DOM.Props/foreign.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* global exports */
	"use strict";

	var React = __webpack_require__(/*! react */ 186);

	function unsafeMkProps(key) {
	  return function(value){
	    var result = {};
	    result[key] = value;
	    return result;
	  };
	}
	exports.unsafeMkProps = unsafeMkProps;

	function unsafeUnfoldProps(key) {
	  return function(value){
	    var result = {};
	    var props = {};
	    props[key] = result;

	    for (var subprop in value) {
	      if (value.hasOwnProperty(subprop)) {
	        result[subprop] = value[subprop];
	      }
	    }

	    return props;
	  };
	}
	exports.unsafeUnfoldProps = unsafeUnfoldProps;

	function unsafePrefixProps(prefix) {
	  return function(value){
	    var result = {};

	    for (var prop in value) {
	      if (value.hasOwnProperty(prop)) {
	        result[prefix + prop] = value[prop];
	      }
	    }

	    return result;
	  };
	}
	exports.unsafePrefixProps = unsafePrefixProps;

	function unsafeFromPropsArray(props) {
	  var result = {};

	  for (var i = 0, len = props.length; i < len; i++) {
	    var prop = props[i];

	    for (var key in prop) {
	      if (prop.hasOwnProperty(key)) {
	        result[key] = prop[key];
	      }
	    }
	  }

	  return result;
	};
	exports.unsafeFromPropsArray = unsafeFromPropsArray;


/***/ }),
/* 354 */
/*!**********************************!*\
  !*** ./output/ReactDOM/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 355);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Uncurried = __webpack_require__(/*! ../Control.Monad.Eff.Uncurried */ 349);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_Node_Types = __webpack_require__(/*! ../DOM.Node.Types */ 174);
	var Data_Function_Uncurried = __webpack_require__(/*! ../Data.Function.Uncurried */ 129);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var React = __webpack_require__(/*! ../React */ 184);
	var unmountComponentAtNode = Control_Monad_Eff_Uncurried.runEffFn1($foreign.unmountComponentAtNodeImpl);
	var renderToString = Data_Function_Uncurried.runFn1($foreign.renderToStringImpl);
	var renderToStaticMarkup = Data_Function_Uncurried.runFn1($foreign.renderToStaticMarkupImpl);
	var render = Control_Monad_Eff_Uncurried.runEffFn4($foreign.renderImpl)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	var findDOMNode = Control_Monad_Eff_Uncurried.runEffFn1($foreign.findDOMNodeImpl);
	module.exports = {
	    render: render,
	    unmountComponentAtNode: unmountComponentAtNode,
	    findDOMNode: findDOMNode,
	    renderToString: renderToString,
	    renderToStaticMarkup: renderToStaticMarkup
	};


/***/ }),
/* 355 */
/*!************************************!*\
  !*** ./output/ReactDOM/foreign.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* global exports */
	"use strict";

	var ReactDOM = __webpack_require__(/*! react-dom */ 356);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 357);

	exports.renderImpl = function (nothing, just, element, container) {
	  var result = ReactDOM.render(element, container);
	  return result === null ? nothing : just(result);
	};

	exports.unmountComponentAtNodeImpl = ReactDOM.unmountComponentAtNode;
	exports.findDOMNodeImpl = ReactDOM.findDOMNode;

	exports.renderToStringImpl = ReactDOMServer.renderToString;
	exports.renderToStaticMarkupImpl = ReactDOMServer.renderToStaticMarkup;


/***/ }),
/* 356 */
/*!******************************!*\
  !*** ./~/react-dom/index.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(/*! react/lib/ReactDOM */ 188);


/***/ }),
/* 357 */
/*!*******************************!*\
  !*** ./~/react-dom/server.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(/*! react/lib/ReactDOMServer */ 332);


/***/ }),
/* 358 */
/*!**********************************!*\
  !*** ./output/Thermite/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Coroutine = __webpack_require__(/*! ../Control.Coroutine */ 31);
	var Control_Monad_Aff = __webpack_require__(/*! ../Control.Monad.Aff */ 122);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ../Control.Monad.Eff.Unsafe */ 90);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ../Control.Monad.Free.Trans */ 107);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_HTML = __webpack_require__(/*! ../DOM.HTML */ 156);
	var DOM_HTML_Document = __webpack_require__(/*! ../DOM.HTML.Document */ 359);
	var DOM_HTML_Types = __webpack_require__(/*! ../DOM.HTML.Types */ 158);
	var DOM_HTML_Window = __webpack_require__(/*! ../DOM.HTML.Window */ 177);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Lens = __webpack_require__(/*! ../Data.Lens */ 365);
	var Data_Lens_Fold = __webpack_require__(/*! ../Data.Lens.Fold */ 391);
	var Data_Lens_Getter = __webpack_require__(/*! ../Data.Lens.Getter */ 392);
	var Data_Lens_Internal_Forget = __webpack_require__(/*! ../Data.Lens.Internal.Forget */ 378);
	var Data_Lens_Internal_Market = __webpack_require__(/*! ../Data.Lens.Internal.Market */ 383);
	var Data_Lens_Internal_Tagged = __webpack_require__(/*! ../Data.Lens.Internal.Tagged */ 386);
	var Data_Lens_Lens = __webpack_require__(/*! ../Data.Lens.Lens */ 368);
	var Data_Lens_Prism = __webpack_require__(/*! ../Data.Lens.Prism */ 389);
	var Data_Lens_Setter = __webpack_require__(/*! ../Data.Lens.Setter */ 397);
	var Data_List = __webpack_require__(/*! ../Data.List */ 173);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var React = __webpack_require__(/*! ../React */ 184);
	var React_DOM = __webpack_require__(/*! ../React.DOM */ 351);
	var ReactDOM = __webpack_require__(/*! ../ReactDOM */ 354);
	var Spec = function (x) {
	    return x;
	};
	var writeState = function (st) {
	    return Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(Data_Function["const"](st));
	};
	var split = function (prism) {
	    return function (v) {
	        var render = function (k) {
	            return function (p) {
	                return function (st) {
	                    return function (children) {
	                        var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
	                        if (v1 instanceof Data_Either.Left) {
	                            return [  ];
	                        };
	                        if (v1 instanceof Data_Either.Right) {
	                            return v.render(k)(p)(v1.value0)(children);
	                        };
	                        throw new Error("Failed pattern match at Thermite line 373, column 7 - line 375, column 50: " + [ v1.constructor.name ]);
	                    };
	                };
	            };
	        };
	        var performAction = function (a) {
	            return function (p) {
	                return function (st) {
	                    var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
	                    if (v1 instanceof Data_Either.Left) {
	                        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
	                    };
	                    if (v1 instanceof Data_Either.Right) {
	                        return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(function (v2) {
	                            return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(Data_Lens_Fold.preview(prism(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))));
	                        })))(v.performAction(a)(p)(v1.value0)))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(prism(Data_Profunctor_Choice.choiceFn)))));
	                    };
	                    throw new Error("Failed pattern match at Thermite line 365, column 7 - line 369, column 78: " + [ v1.constructor.name ]);
	                };
	            };
	        };
	        return {
	            performAction: performAction,
	            render: render
	        };
	    };
	};
	var simpleSpec = function (performAction) {
	    return function (render) {
	        return {
	            performAction: performAction,
	            render: render
	        };
	    };
	};
	var semigroupSpec = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return {
	            performAction: function (a) {
	                return function (p) {
	                    return function (s) {
	                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(v.performAction(a)(p)(s))(function () {
	                            return v1.performAction(a)(p)(s);
	                        });
	                    };
	                };
	            },
	            render: function (k) {
	                return function (p) {
	                    return function (s) {
	                        return Data_Semigroup.append(Data_Semigroup.semigroupFn(Data_Semigroup.semigroupArray))(v.render(k)(p)(s))(v1.render(k)(p)(s));
	                    };
	                };
	            }
	        };
	    };
	});
	var monoidSpec = new Data_Monoid.Monoid(function () {
	    return semigroupSpec;
	}, simpleSpec(function (v) {
	    return function (v1) {
	        return function (v2) {
	            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
	        };
	    };
	})(function (v) {
	    return function (v1) {
	        return function (v2) {
	            return function (v3) {
	                return [  ];
	            };
	        };
	    };
	}));
	var modifyState = Control_Coroutine.cotransform(Control_Monad_Aff.monadAff);
	var foreach = function (f) {
	    var performAction = function (v) {
	        return function (p) {
	            return function (sts) {
	                var modifying = function (j) {
	                    return function (g) {
	                        return function (sts$prime) {
	                            return Data_Maybe.fromMaybe(sts$prime)(Data_List.modifyAt(j)(g)(sts$prime));
	                        };
	                    };
	                };
	                return Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Foldable.foldableMaybe)(Data_List.index(sts)(v.value0))(function (st) {
	                    var v1 = f(v.value0);
	                    return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(function (v2) {
	                        return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(function (v3) {
	                            return Data_List.index(v3)(v.value0);
	                        });
	                    })))(v1.performAction(v.value1)(p)(st)))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(modifying(v.value0))));
	                });
	            };
	        };
	    };
	    var foldWithIndex = function (g) {
	        var go = function ($copy_v) {
	            return function ($copy_v1) {
	                return function ($copy_r) {
	                    var $tco_var_v = $copy_v;
	                    var $tco_var_v1 = $copy_v1;
	                    var $tco_done = false;
	                    var $tco_result;
	                    function $tco_loop(v, v1, r) {
	                        if (v1 instanceof Data_List_Types.Nil) {
	                            $tco_done = true;
	                            return r;
	                        };
	                        if (v1 instanceof Data_List_Types.Cons) {
	                            $tco_var_v = v + 1 | 0;
	                            $tco_var_v1 = v1.value1;
	                            $copy_r = g(v)(v1.value0)(r);
	                            return;
	                        };
	                        throw new Error("Failed pattern match at Thermite line 408, column 7 - line 408, column 29: " + [ v.constructor.name, v1.constructor.name, r.constructor.name ]);
	                    };
	                    while (!$tco_done) {
	                        $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_r);
	                    };
	                    return $tco_result;
	                };
	            };
	        };
	        return go(0);
	    };
	    var render = function (k) {
	        return function (p) {
	            return function (sts) {
	                return function (v) {
	                    return foldWithIndex(function (i) {
	                        return function (st) {
	                            return function (els) {
	                                var v1 = f(i);
	                                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(els)(v1.render(function ($105) {
	                                    return k(Data_Tuple.Tuple.create(i)($105));
	                                })(p)(st)([  ]));
	                            };
	                        };
	                    })(sts)([  ]);
	                };
	            };
	        };
	    };
	    return {
	        performAction: performAction,
	        render: render
	    };
	};
	var focus = function (lens) {
	    return function (prism) {
	        return function (v) {
	            var render = function (k) {
	                return function (p) {
	                    return function (st) {
	                        return v.render(function ($106) {
	                            return k(Data_Lens_Prism.review(prism(Data_Lens_Internal_Tagged.taggedChoice))($106));
	                        })(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st));
	                    };
	                };
	            };
	            var performAction = function (a) {
	                return function (p) {
	                    return function (st) {
	                        var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(a);
	                        if (v1 instanceof Data_Either.Left) {
	                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
	                        };
	                        if (v1 instanceof Data_Either.Right) {
	                            return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))))))(v.performAction(v1.value0)(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st))))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(lens(Data_Profunctor_Strong.strongFn)))));
	                        };
	                        throw new Error("Failed pattern match at Thermite line 329, column 7 - line 333, column 76: " + [ v1.constructor.name ]);
	                    };
	                };
	            };
	            return {
	                performAction: performAction,
	                render: render
	            };
	        };
	    };
	};
	var focusState = function (lens) {
	    return focus(function (dictStrong) {
	        return lens(dictStrong);
	    })(function (dictChoice) {
	        return Control_Category.id(Control_Category.categoryFn);
	    });
	};
	var match = function (prism) {
	    return focus(function (dictStrong) {
	        return Control_Category.id(Control_Category.categoryFn);
	    })(function (dictChoice) {
	        return prism(dictChoice);
	    });
	};
	var defaultRender = function (v) {
	    return function (v1) {
	        return function (v2) {
	            return function (v3) {
	                return [  ];
	            };
	        };
	    };
	};
	var defaultPerformAction = function (v) {
	    return function (v1) {
	        return function (v2) {
	            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
	        };
	    };
	};
	var createReactSpec$prime = function (wrap) {
	    return function (v) {
	        var dispatcher = function ($$this) {
	            return function (action) {
	                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
	                    var v1 = React.getProps($$this)();
	                    var v2 = React.readState($$this)();
	                    var cotransformer = v.performAction(action)(v1)(v2);
	                    var step = function (cot) {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free_Trans.resume(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadRecAff)(cot))(function (v3) {
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
	                            };
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(React.readState($$this))))(function (v4) {
	                                    var newState = v3.value0.value0(v4);
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.makeAff(function (cb) {
	                                        return Control_Monad_Eff_Unsafe.unsafeCoerceEff(function __do() {
	                                            Data_Functor["void"](Control_Monad_Eff.functorEff)(React.writeStateWithCallback($$this)(newState)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(cb(new Data_Either.Right(newState)))))();
	                                            return Control_Monad_Aff.nonCanceler;
	                                        });
	                                    }))(function (v5) {
	                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Loop(v3.value0.value1(new Data_Maybe.Just(newState))));
	                                    });
	                                });
	                            };
	                            throw new Error("Failed pattern match at Thermite line 251, column 13 - line 259, column 48: " + [ v3.constructor.name ]);
	                        });
	                    };
	                    return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Aff.launchAff(Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(step)(cotransformer)))();
	                });
	            };
	        };
	        var render = function ($$this) {
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(wrap)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(v.render(dispatcher($$this)))(React.getProps($$this)))(React.readState($$this)))(React.getChildren($$this)));
	        };
	        return function (state) {
	            return {
	                spec: React.spec(state)(render),
	                dispatcher: dispatcher
	            };
	        };
	    };
	};
	var createReactSpec = createReactSpec$prime(React_DOM["div'"]);
	var createClass = function (spec) {
	    return function (state) {
	        return React.createClass((function (v) {
	            return v.spec;
	        })(createReactSpec(spec)(state)));
	    };
	};
	var defaultMain = function (spec) {
	    return function (initialState) {
	        return function (props) {
	            return Data_Functor["void"](Control_Monad_Eff.functorEff)((function () {
	                var component = createClass(spec)(initialState);
	                return function __do() {
	                    var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
	                    var v1 = DOM_HTML_Document.body(v)();
	                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($107) {
	                        return ReactDOM.render(React.createFactory(component)(props))(DOM_HTML_Types.htmlElementToElement($107));
	                    })(v1)();
	                };
	            })());
	        };
	    };
	};
	var cmapProps = function (f) {
	    return function (v) {
	        var render = function (a) {
	            return function ($108) {
	                return v.render(a)(f($108));
	            };
	        };
	        var performAction = function (a) {
	            return function ($109) {
	                return v.performAction(a)(f($109));
	            };
	        };
	        return {
	            performAction: performAction,
	            render: render
	        };
	    };
	};
	var _render = function (dictStrong) {
	    return Data_Lens_Lens.lens(function (v) {
	        return v.render;
	    })(function (v) {
	        return function (r) {
	            var $97 = {};
	            for (var $98 in v) {
	                if ({}.hasOwnProperty.call(v, $98)) {
	                    $97[$98] = v[$98];
	                };
	            };
	            $97.render = r;
	            return $97;
	        };
	    })(dictStrong);
	};
	var _performAction = function (dictStrong) {
	    return Data_Lens_Lens.lens(function (v) {
	        return v.performAction;
	    })(function (v) {
	        return function (pa) {
	            var $102 = {};
	            for (var $103 in v) {
	                if ({}.hasOwnProperty.call(v, $103)) {
	                    $102[$103] = v[$103];
	                };
	            };
	            $102.performAction = pa;
	            return $102;
	        };
	    })(dictStrong);
	};
	var withState = function (f) {
	    var render = function (k) {
	        return function (p) {
	            return function (st) {
	                return Data_Lens_Getter.view(_render(Data_Lens_Internal_Forget.strongForget))(f(st))(k)(p)(st);
	            };
	        };
	    };
	    var performAction = function (a) {
	        return function (p) {
	            return function (st) {
	                return Data_Lens_Getter.view(_performAction(Data_Lens_Internal_Forget.strongForget))(f(st))(a)(p)(st);
	            };
	        };
	    };
	    return simpleSpec(performAction)(render);
	};
	module.exports = {
	    defaultPerformAction: defaultPerformAction,
	    defaultRender: defaultRender,
	    writeState: writeState,
	    modifyState: modifyState,
	    _performAction: _performAction,
	    _render: _render,
	    simpleSpec: simpleSpec,
	    createClass: createClass,
	    createReactSpec: createReactSpec,
	    "createReactSpec'": createReactSpec$prime,
	    defaultMain: defaultMain,
	    withState: withState,
	    focus: focus,
	    focusState: focusState,
	    match: match,
	    split: split,
	    foreach: foreach,
	    cmapProps: cmapProps,
	    semigroupSpec: semigroupSpec,
	    monoidSpec: monoidSpec
	};


/***/ }),
/* 359 */
/*!*******************************************!*\
  !*** ./output/DOM.HTML.Document/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 360);
	var Control_Monad_Eff = __webpack_require__(/*! ../Control.Monad.Eff */ 86);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var DOM = __webpack_require__(/*! ../DOM */ 155);
	var DOM_HTML_Document_ReadyState = __webpack_require__(/*! ../DOM.HTML.Document.ReadyState */ 361);
	var DOM_HTML_Types = __webpack_require__(/*! ../DOM.HTML.Types */ 158);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Nullable = __webpack_require__(/*! ../Data.Nullable */ 180);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var readyState = function ($1) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(function ($2) {
	        return Data_Maybe.fromJust()(DOM_HTML_Document_ReadyState.parseReadyState($2));
	    })($foreign._readyState($1));
	};
	var body = function ($3) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._body($3));
	};
	var activeElement = function ($4) {
	    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._activeElement($4));
	};
	module.exports = {
	    body: body,
	    readyState: readyState,
	    activeElement: activeElement
	};


/***/ }),
/* 360 */
/*!*********************************************!*\
  !*** ./output/DOM.HTML.Document/foreign.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	"use strict";

	exports._body = function (doc) {
	  return function () {
	    return doc.body;
	  };
	};

	exports._readyState = function (doc) {
	  return function () {
	    return doc.readyState;
	  };
	};

	exports._activeElement = function (doc) {
	  return function () {
	    return doc.activeElement;
	  };
	};


/***/ }),
/* 361 */
/*!******************************************************!*\
  !*** ./output/DOM.HTML.Document.ReadyState/index.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Enum = __webpack_require__(/*! ../Data.Enum */ 362);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Loading = (function () {
	    function Loading() {

	    };
	    Loading.value = new Loading();
	    return Loading;
	})();
	var Interactive = (function () {
	    function Interactive() {

	    };
	    Interactive.value = new Interactive();
	    return Interactive;
	})();
	var Complete = (function () {
	    function Complete() {

	    };
	    Complete.value = new Complete();
	    return Complete;
	})();
	var toEnumReadyState = function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Loading.value);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(Interactive.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(Complete.value);
	    };
	    return Data_Maybe.Nothing.value;
	};
	var showReadyState = new Data_Show.Show(function (v) {
	    if (v instanceof Loading) {
	        return "Loading";
	    };
	    if (v instanceof Interactive) {
	        return "Interactive";
	    };
	    if (v instanceof Complete) {
	        return "Complete";
	    };
	    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 16, column 10 - line 21, column 1: " + [ v.constructor.name ]);
	});
	var printReadyState = function (v) {
	    if (v instanceof Loading) {
	        return "loading";
	    };
	    if (v instanceof Interactive) {
	        return "interactive";
	    };
	    if (v instanceof Complete) {
	        return "complete";
	    };
	    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 22, column 19 - line 27, column 1: " + [ v.constructor.name ]);
	};
	var parseReadyState = function (v) {
	    if (v === "loading") {
	        return new Data_Maybe.Just(Loading.value);
	    };
	    if (v === "interactive") {
	        return new Data_Maybe.Just(Interactive.value);
	    };
	    if (v === "complete") {
	        return new Data_Maybe.Just(Complete.value);
	    };
	    return Data_Maybe.Nothing.value;
	};
	var fromEnumReadyState = function (v) {
	    if (v instanceof Loading) {
	        return 0;
	    };
	    if (v instanceof Interactive) {
	        return 1;
	    };
	    if (v instanceof Complete) {
	        return 2;
	    };
	    throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 57, column 3 - line 60, column 17: " + [ v.constructor.name ]);
	};
	var eqReadyState = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof Loading && y instanceof Loading) {
	            return true;
	        };
	        if (x instanceof Interactive && y instanceof Interactive) {
	            return true;
	        };
	        if (x instanceof Complete && y instanceof Complete) {
	            return true;
	        };
	        return false;
	    };
	});
	var ordReadyState = new Data_Ord.Ord(function () {
	    return eqReadyState;
	}, function (x) {
	    return function (y) {
	        if (x instanceof Loading && y instanceof Loading) {
	            return Data_Ordering.EQ.value;
	        };
	        if (x instanceof Loading) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof Loading) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof Interactive && y instanceof Interactive) {
	            return Data_Ordering.EQ.value;
	        };
	        if (x instanceof Interactive) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof Interactive) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof Complete && y instanceof Complete) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at DOM.HTML.Document.ReadyState line 13, column 8 - line 13, column 48: " + [ x.constructor.name, y.constructor.name ]);
	    };
	});
	var enumReadyState = new Data_Enum.Enum(function () {
	    return ordReadyState;
	}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
	var boundedReadyState = new Data_Bounded.Bounded(function () {
	    return ordReadyState;
	}, Loading.value, Complete.value);
	var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
	    return boundedReadyState;
	}, function () {
	    return enumReadyState;
	}, 3, fromEnumReadyState, toEnumReadyState);
	module.exports = {
	    Loading: Loading,
	    Interactive: Interactive,
	    Complete: Complete,
	    printReadyState: printReadyState,
	    parseReadyState: parseReadyState,
	    toEnumReadyState: toEnumReadyState,
	    fromEnumReadyState: fromEnumReadyState,
	    eqReadyState: eqReadyState,
	    ordReadyState: ordReadyState,
	    showReadyState: showReadyState,
	    boundedReadyState: boundedReadyState,
	    enumReadyState: enumReadyState,
	    boundedEnumReadyState: boundedEnumReadyState
	};


/***/ }),
/* 362 */
/*!***********************************!*\
  !*** ./output/Data.Enum/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_Char = __webpack_require__(/*! ../Data.Char */ 363);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_NonEmpty = __webpack_require__(/*! ../Data.NonEmpty */ 139);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ordering = __webpack_require__(/*! ../Data.Ordering */ 22);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unfoldable = __webpack_require__(/*! ../Data.Unfoldable */ 145);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Partial_Unsafe = __webpack_require__(/*! ../Partial.Unsafe */ 96);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Cardinality = function (x) {
	    return x;
	};
	var Enum = function (Ord0, pred, succ) {
	    this.Ord0 = Ord0;
	    this.pred = pred;
	    this.succ = succ;
	};
	var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
	    this.Bounded0 = Bounded0;
	    this.Enum1 = Enum1;
	    this.cardinality = cardinality;
	    this.fromEnum = fromEnum;
	    this.toEnum = toEnum;
	};
	var toEnum = function (dict) {
	    return dict.toEnum;
	};
	var succ = function (dict) {
	    return dict.succ;
	};
	var pred = function (dict) {
	    return dict.pred;
	};
	var ordCardinality = Data_Ord.ordInt;
	var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Cardinality);
	var intStepFromTo = function (step) {
	    return function (from) {
	        return function (to) {
	            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
	                var $54 = e <= to;
	                if ($54) {
	                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
	                };
	                return Data_Maybe.Nothing.value;
	            })(from);
	        };
	    };
	};
	var fromEnum = function (dict) {
	    return dict.fromEnum;
	};
	var toEnumWithDefaults = function (dictBoundedEnum) {
	    return function (b) {
	        return function (t) {
	            return function (x) {
	                var v = toEnum(dictBoundedEnum)(x);
	                if (v instanceof Data_Maybe.Just) {
	                    return v.value0;
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    var $57 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
	                    if ($57) {
	                        return b;
	                    };
	                    return t;
	                };
	                throw new Error("Failed pattern match at Data.Enum line 272, column 28 - line 274, column 56: " + [ v.constructor.name ]);
	            };
	        };
	    };
	};
	var eqCardinality = Data_Eq.eqInt;
	var enumUnit = new Enum(function () {
	    return Data_Ord.ordUnit;
	}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
	var enumTuple = function (dictEnum) {
	    return function (dictBoundedEnum) {
	        return new Enum(function () {
	            return Data_Tuple.ordTuple(dictEnum.Ord0())((dictBoundedEnum.Enum1()).Ord0());
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($101) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($101));
	            })(pred(dictBoundedEnum.Enum1())(v.value1));
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($102) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($102));
	            })(succ(dictBoundedEnum.Enum1())(v.value1));
	        });
	    };
	};
	var enumOrdering = new Enum(function () {
	    return Data_Ord.ordOrdering;
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
	});
	var enumMaybe = function (dictBoundedEnum) {
	    return new Enum(function () {
	        return Data_Maybe.ordMaybe((dictBoundedEnum.Enum1()).Ord0());
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Maybe.Nothing.value;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Maybe.Just.create(pred(dictBoundedEnum.Enum1())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Maybe.Just.create(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
	    });
	};
	var enumInt = new Enum(function () {
	    return Data_Ord.ordInt;
	}, function (n) {
	    var $70 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
	    if ($70) {
	        return new Data_Maybe.Just(n - 1 | 0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (n) {
	    var $71 = n < Data_Bounded.top(Data_Bounded.boundedInt);
	    if ($71) {
	        return new Data_Maybe.Just(n + 1 | 0);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var enumFromTo = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return function (from) {
	            return function (to) {
	                var go = function (mx) {
	                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
	                        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum.Ord0())(v)(to)))(function () {
	                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
	                        });
	                    });
	                };
	                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
	            };
	        };
	    };
	};
	var enumFromThenTo = function (dictBoundedEnum) {
	    return function (a) {
	        return function (b) {
	            return function (c) {
	                var c$prime = fromEnum(dictBoundedEnum)(c);
	                var b$prime = fromEnum(dictBoundedEnum)(b);
	                var a$prime = fromEnum(dictBoundedEnum)(a);
	                return Data_Functor.map(Data_Functor.functorArray)(function ($103) {
	                    return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($103));
	                })(intStepFromTo(b$prime - a$prime | 0)(a$prime)(c$prime));
	            };
	        };
	    };
	};
	var enumEither = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new Enum(function () {
	            return Data_Either.ordEither((dictBoundedEnum.Enum1()).Ord0())((dictBoundedEnum1.Enum1()).Ord0());
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($104));
	                })(pred(dictBoundedEnum.Enum1())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($105) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($105));
	                })(pred(dictBoundedEnum1.Enum1())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($106) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($106));
	                })(succ(dictBoundedEnum.Enum1())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($107) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($107));
	                })(succ(dictBoundedEnum1.Enum1())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
	        });
	    };
	};
	var enumBoolean = new Enum(function () {
	    return Data_Ord.ordBoolean;
	}, function (v) {
	    if (v) {
	        return new Data_Maybe.Just(false);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    if (!v) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var diag = function (a) {
	    return new Data_Tuple.Tuple(a, a);
	};
	var downFrom = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($108) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($108));
	        });
	    };
	};
	var upFrom = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($109) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($109));
	        });
	    };
	};
	var upFromIncluding = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return function (x) {
	            return new Data_NonEmpty.NonEmpty(x, upFrom(dictEnum)(dictUnfoldable)(x));
	        };
	    };
	};
	var defaultToEnum = function (dictBounded) {
	    return function (dictEnum) {
	        return function (n) {
	            if (n < 0) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (n === 0) {
	                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
	            };
	            if (Data_Boolean.otherwise) {
	                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1 | 0))(succ(dictEnum));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 251, column 1 - line 251, column 65: " + [ n.constructor.name ]);
	        };
	    };
	};
	var defaultSucc = function (toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
	        };
	    };
	};
	var defaultPred = function (toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
	        };
	    };
	};
	var defaultFromEnum = function (dictEnum) {
	    return function ($110) {
	        return Data_Maybe.maybe(0)(function (prd) {
	            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
	        })(pred(dictEnum)($110));
	    };
	};
	var defaultCardinality = function (dictBounded) {
	    return function (dictEnum) {
	        var defaultCardinality$prime = function (i) {
	            return function ($111) {
	                return Data_Maybe.maybe(i)(defaultCardinality$prime(i + 1 | 0))(succ(dictEnum)($111));
	            };
	        };
	        return Cardinality(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
	    };
	};
	var charToEnum = function (v) {
	    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
	        return Data_Maybe.Just.create(Data_Char.fromCharCode(v));
	    };
	    return Data_Maybe.Nothing.value;
	};
	var enumChar = new Enum(function () {
	    return Data_Ord.ordChar;
	}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
	var cardinality = function (dict) {
	    return dict.cardinality;
	};
	var boundedEnumUnit = new BoundedEnum(function () {
	    return Data_Bounded.boundedUnit;
	}, function () {
	    return enumUnit;
	}, 1, Data_Function["const"](0), function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumTuple = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Tuple.boundedTuple(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
	        }, function () {
	            return enumTuple(dictBoundedEnum.Enum1())(dictBoundedEnum1);
	        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) * Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), (function () {
	            var from = function (v) {
	                return function (v1) {
	                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
	                };
	            };
	            return from(cardinality(dictBoundedEnum1));
	        })(), (function () {
	            var to = function (v) {
	                return function (n) {
	                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
	                };
	            };
	            return to(cardinality(dictBoundedEnum1));
	        })());
	    };
	};
	var boundedEnumOrdering = new BoundedEnum(function () {
	    return Data_Bounded.boundedOrdering;
	}, function () {
	    return enumOrdering;
	}, 3, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return 2;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumMaybe = function (dictBoundedEnum) {
	    return new BoundedEnum(function () {
	        return Data_Maybe.boundedMaybe(dictBoundedEnum.Bounded0());
	    }, function () {
	        return enumMaybe(dictBoundedEnum);
	    }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return 0;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
	        };
	        throw new Error("Failed pattern match at Data.Enum line 210, column 1 - line 210, column 68: " + [ v.constructor.name ]);
	    }, function (v) {
	        if (v === 0) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v - 1 | 0));
	    });
	};
	var boundedEnumEither = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Either.boundedEither(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
	        }, function () {
	            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
	        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), function (v) {
	            if (v instanceof Data_Either.Left) {
	                return fromEnum(dictBoundedEnum)(v.value0);
	            };
	            if (v instanceof Data_Either.Right) {
	                return fromEnum(dictBoundedEnum1)(v.value0) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) | 0;
	            };
	            throw new Error("Failed pattern match at Data.Enum line 217, column 1 - line 217, column 89: " + [ v.constructor.name ]);
	        }, function (n) {
	            var to = function (v) {
	                if (n >= 0 && n < v) {
	                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
	                };
	                if (Data_Boolean.otherwise) {
	                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v | 0));
	                };
	                throw new Error("Failed pattern match at Data.Enum line 224, column 5 - line 224, column 46: " + [ v.constructor.name ]);
	            };
	            return to(cardinality(dictBoundedEnum));
	        });
	    };
	};
	var boundedEnumChar = new BoundedEnum(function () {
	    return Data_Bounded.boundedChar;
	}, function () {
	    return enumChar;
	}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, Data_Char.toCharCode, charToEnum);
	var boundedEnumBoolean = new BoundedEnum(function () {
	    return Data_Bounded.boundedBoolean;
	}, function () {
	    return enumBoolean;
	}, 2, function (v) {
	    if (!v) {
	        return 0;
	    };
	    if (v) {
	        return 1;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 181, column 1 - line 181, column 51: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(false);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	module.exports = {
	    Enum: Enum,
	    succ: succ,
	    pred: pred,
	    defaultSucc: defaultSucc,
	    defaultPred: defaultPred,
	    enumFromTo: enumFromTo,
	    enumFromThenTo: enumFromThenTo,
	    upFrom: upFrom,
	    upFromIncluding: upFromIncluding,
	    downFrom: downFrom,
	    Cardinality: Cardinality,
	    BoundedEnum: BoundedEnum,
	    cardinality: cardinality,
	    toEnum: toEnum,
	    fromEnum: fromEnum,
	    toEnumWithDefaults: toEnumWithDefaults,
	    defaultCardinality: defaultCardinality,
	    defaultToEnum: defaultToEnum,
	    defaultFromEnum: defaultFromEnum,
	    newtypeCardinality: newtypeCardinality,
	    eqCardinality: eqCardinality,
	    ordCardinality: ordCardinality,
	    enumBoolean: enumBoolean,
	    enumInt: enumInt,
	    enumChar: enumChar,
	    enumUnit: enumUnit,
	    enumOrdering: enumOrdering,
	    enumMaybe: enumMaybe,
	    enumEither: enumEither,
	    enumTuple: enumTuple,
	    boundedEnumBoolean: boundedEnumBoolean,
	    boundedEnumChar: boundedEnumChar,
	    boundedEnumUnit: boundedEnumUnit,
	    boundedEnumOrdering: boundedEnumOrdering,
	    boundedEnumMaybe: boundedEnumMaybe,
	    boundedEnumEither: boundedEnumEither,
	    boundedEnumTuple: boundedEnumTuple
	};


/***/ }),
/* 363 */
/*!***********************************!*\
  !*** ./output/Data.Char/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var $foreign = __webpack_require__(/*! ./foreign */ 364);
	module.exports = {
	    fromCharCode: $foreign.fromCharCode,
	    toCharCode: $foreign.toCharCode,
	    toLower: $foreign.toLower,
	    toUpper: $foreign.toUpper
	};


/***/ }),
/* 364 */
/*!*************************************!*\
  !*** ./output/Data.Char/foreign.js ***!
  \*************************************/
/***/ (function(module, exports) {

	"use strict";

	exports.toCharCode = function (c) {
	  return c.charCodeAt(0);
	};

	exports.fromCharCode = function (c) {
	  return String.fromCharCode(c);
	};

	exports.toLower = function (c) {
	  return c.toLowerCase();
	};

	exports.toUpper = function (c) {
	  return c.toUpperCase();
	};


/***/ }),
/* 365 */
/*!***********************************!*\
  !*** ./output/Data.Lens/index.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Lens_Common = __webpack_require__(/*! ../Data.Lens.Common */ 366);
	var Data_Lens_Fold = __webpack_require__(/*! ../Data.Lens.Fold */ 391);
	var Data_Lens_Getter = __webpack_require__(/*! ../Data.Lens.Getter */ 392);
	var Data_Lens_Grate = __webpack_require__(/*! ../Data.Lens.Grate */ 393);
	var Data_Lens_Iso = __webpack_require__(/*! ../Data.Lens.Iso */ 396);
	var Data_Lens_Lens = __webpack_require__(/*! ../Data.Lens.Lens */ 368);
	var Data_Lens_Prism = __webpack_require__(/*! ../Data.Lens.Prism */ 389);
	var Data_Lens_Setter = __webpack_require__(/*! ../Data.Lens.Setter */ 397);
	var Data_Lens_Traversal = __webpack_require__(/*! ../Data.Lens.Traversal */ 398);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	module.exports = {};


/***/ }),
/* 366 */
/*!******************************************!*\
  !*** ./output/Data.Lens.Common/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Lens_Lens_Tuple = __webpack_require__(/*! ../Data.Lens.Lens.Tuple */ 367);
	var Data_Lens_Lens_Unit = __webpack_require__(/*! ../Data.Lens.Lens.Unit */ 387);
	var Data_Lens_Prism_Either = __webpack_require__(/*! ../Data.Lens.Prism.Either */ 388);
	var Data_Lens_Prism_Maybe = __webpack_require__(/*! ../Data.Lens.Prism.Maybe */ 390);
	module.exports = {};


/***/ }),
/* 367 */
/*!**********************************************!*\
  !*** ./output/Data.Lens.Lens.Tuple/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Lens_Lens = __webpack_require__(/*! ../Data.Lens.Lens */ 368);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var _2 = function (dictStrong) {
	    return Data_Profunctor_Strong.second(dictStrong);
	};
	var _1 = function (dictStrong) {
	    return Data_Profunctor_Strong.first(dictStrong);
	};
	module.exports = {
	    _1: _1,
	    _2: _2
	};


/***/ }),
/* 368 */
/*!****************************************!*\
  !*** ./output/Data.Lens.Lens/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Internal_Shop = __webpack_require__(/*! ../Data.Lens.Internal.Shop */ 375);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var withLens = function (l) {
	    return function (f) {
	        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.id(Control_Category.categoryFn), function (v1) {
	            return function (b) {
	                return b;
	            };
	        }));
	        return f(v.value0)(v.value1);
	    };
	};
	var withIndexedLens = function (l) {
	    return function (f) {
	        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.id(Control_Category.categoryFn), function (v1) {
	            return function (b) {
	                return b;
	            };
	        }));
	        return f(v.value0)(v.value1);
	    };
	};
	var lens$prime = function (to) {
	    return function (dictStrong) {
	        return function (pab) {
	            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
	                return v.value1(v.value0);
	            })(Data_Profunctor_Strong.first(dictStrong)(pab));
	        };
	    };
	};
	var lens = function (get) {
	    return function (set) {
	        return function (dictStrong) {
	            return lens$prime(function (s) {
	                return new Data_Tuple.Tuple(get(s), function (b) {
	                    return set(s)(b);
	                });
	            })(dictStrong);
	        };
	    };
	};
	var ilens$prime = function (to) {
	    return function (dictStrong) {
	        return function (pab) {
	            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
	                return v.value1(v.value0);
	            })(Data_Profunctor_Strong.first(dictStrong)(Data_Newtype.un(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.Indexed)(pab)));
	        };
	    };
	};
	var ilens = function (get) {
	    return function (set) {
	        return function (dictStrong) {
	            return ilens$prime(function (s) {
	                return new Data_Tuple.Tuple(get(s), function (b) {
	                    return set(s)(b);
	                });
	            })(dictStrong);
	        };
	    };
	};
	var cloneLens = function (l) {
	    return function (dictStrong) {
	        return withLens(l)(function (x) {
	            return function (y) {
	                return function (p) {
	                    return lens(x)(y)(dictStrong)(p);
	                };
	            };
	        });
	    };
	};
	var cloneIndexedLens = function (l) {
	    return function (dictStrong) {
	        return withIndexedLens(l)(function (x) {
	            return function (y) {
	                return function (p) {
	                    return ilens(x)(y)(dictStrong)(p);
	                };
	            };
	        });
	    };
	};
	module.exports = {
	    lens: lens,
	    "lens'": lens$prime,
	    withLens: withLens,
	    cloneLens: cloneLens,
	    ilens: ilens,
	    "ilens'": ilens$prime,
	    withIndexedLens: withIndexedLens,
	    cloneIndexedLens: cloneIndexedLens
	};


/***/ }),
/* 369 */
/*!****************************************************!*\
  !*** ./output/Data.Lens.Internal.Indexed/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Lens_Internal_Wander = __webpack_require__(/*! ../Data.Lens.Internal.Wander */ 370);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Indexed = function (x) {
	    return x;
	};
	var profunctorIndexed = function (dictProfunctor) {
	    return new Data_Profunctor.Profunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(v);
	            };
	        };
	    });
	};
	var strongIndexed = function (dictStrong) {
	    return new Data_Profunctor_Strong.Strong(function () {
	        return profunctorIndexed(dictStrong.Profunctor0());
	    }, function (v) {
	        return Indexed(Data_Profunctor.lmap(dictStrong.Profunctor0())(function (v1) {
	            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1);
	        })(Data_Profunctor_Strong.first(dictStrong)(v)));
	    }, function (v) {
	        return Indexed(Data_Profunctor.lmap(dictStrong.Profunctor0())(function (v1) {
	            return new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value0, v1.value1.value1));
	        })(Data_Profunctor_Strong.second(dictStrong)(v)));
	    });
	};
	var newtypeIndexed = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Indexed);
	var choiceIndexed = function (dictChoice) {
	    return new Data_Profunctor_Choice.Choice(function () {
	        return profunctorIndexed(dictChoice.Profunctor0());
	    }, function (v) {
	        return Indexed(Data_Profunctor.lmap(dictChoice.Profunctor0())(function (v1) {
	            return Data_Either.either(function ($47) {
	                return Data_Either.Left.create(Data_Tuple.Tuple.create(v1.value0)($47));
	            })(Data_Either.Right.create)(v1.value1);
	        })(Data_Profunctor_Choice.left(dictChoice)(v)));
	    }, function (v) {
	        return Indexed(Data_Profunctor.lmap(dictChoice.Profunctor0())(function (v1) {
	            return Data_Either.either(Data_Either.Left.create)(function ($48) {
	                return Data_Either.Right.create(Data_Tuple.Tuple.create(v1.value0)($48));
	            })(v1.value1);
	        })(Data_Profunctor_Choice.right(dictChoice)(v)));
	    });
	};
	var wanderIndexed = function (dictWander) {
	    return new Data_Lens_Internal_Wander.Wander(function () {
	        return choiceIndexed(dictWander.Choice1());
	    }, function () {
	        return strongIndexed(dictWander.Strong0());
	    }, function (trav) {
	        return function (v) {
	            return Indexed(Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
	                return function (ia2fb) {
	                    return function (v1) {
	                        return trav(dictApplicative)(function ($49) {
	                            return ia2fb(Data_Tuple.Tuple.create(v1.value0)($49));
	                        })(v1.value1);
	                    };
	                };
	            })(v));
	        };
	    });
	};
	module.exports = {
	    Indexed: Indexed,
	    newtypeIndexed: newtypeIndexed,
	    profunctorIndexed: profunctorIndexed,
	    strongIndexed: strongIndexed,
	    choiceIndexed: choiceIndexed,
	    wanderIndexed: wanderIndexed
	};


/***/ }),
/* 370 */
/*!***************************************************!*\
  !*** ./output/Data.Lens.Internal.Wander/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Star = __webpack_require__(/*! ../Data.Profunctor.Star */ 372);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Wander = function (Choice1, Strong0, wander) {
	    this.Choice1 = Choice1;
	    this.Strong0 = Strong0;
	    this.wander = wander;
	};
	var wanderStar = function (dictApplicative) {
	    return new Wander(function () {
	        return Data_Profunctor_Star.choiceStar(dictApplicative);
	    }, function () {
	        return Data_Profunctor_Star.strongStar((dictApplicative.Apply0()).Functor0());
	    }, function (t) {
	        return function (v) {
	            return t(dictApplicative)(v);
	        };
	    });
	};
	var wanderFunction = new Wander(function () {
	    return Data_Profunctor_Choice.choiceFn;
	}, function () {
	    return Data_Profunctor_Strong.strongFn;
	}, function (t) {
	    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
	});
	var wander = function (dict) {
	    return dict.wander;
	};
	module.exports = {
	    wander: wander,
	    Wander: Wander,
	    wanderFunction: wanderFunction,
	    wanderStar: wanderStar
	};


/***/ }),
/* 371 */
/*!************************************************!*\
  !*** ./output/Data.Profunctor.Choice/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Choice = function (Profunctor0, left, right) {
	    this.Profunctor0 = Profunctor0;
	    this.left = left;
	    this.right = right;
	};
	var right = function (dict) {
	    return dict.right;
	};
	var left = function (dict) {
	    return dict.left;
	};
	var splitChoice = function (dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
	            };
	        };
	    };
	};
	var fanin = function (dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(dictCategory));
	                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
	            };
	        };
	    };
	};
	var choiceFn = new Choice(function () {
	    return Data_Profunctor.profunctorFn;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Either.Left) {
	            return Data_Either.Left.create(v(v1.value0));
	        };
	        if (v1 instanceof Data_Either.Right) {
	            return new Data_Either.Right(v1.value0);
	        };
	        throw new Error("Failed pattern match at Data.Profunctor.Choice line 32, column 1 - line 32, column 33: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Functor.map(Data_Either.functorEither));
	module.exports = {
	    left: left,
	    right: right,
	    Choice: Choice,
	    splitChoice: splitChoice,
	    fanin: fanin,
	    choiceFn: choiceFn
	};


/***/ }),
/* 372 */
/*!**********************************************!*\
  !*** ./output/Data.Profunctor.Star/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Distributive = __webpack_require__(/*! ../Data.Distributive */ 102);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Star = function (x) {
	    return x;
	};
	var semigroupoidStar = function (dictBind) {
	    return new Control_Semigroupoid.Semigroupoid(function (v) {
	        return function (v1) {
	            return function (x) {
	                return Control_Bind.bind(dictBind)(v1(x))(v);
	            };
	        };
	    });
	};
	var profunctorStar = function (dictFunctor) {
	    return new Data_Profunctor.Profunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return function ($78) {
	                    return Data_Functor.map(dictFunctor)(g)(v(f($78)));
	                };
	            };
	        };
	    });
	};
	var strongStar = function (dictFunctor) {
	    return new Data_Profunctor_Strong.Strong(function () {
	        return profunctorStar(dictFunctor);
	    }, function (v) {
	        return function (v1) {
	            return Data_Functor.map(dictFunctor)(function (v2) {
	                return new Data_Tuple.Tuple(v2, v1.value1);
	            })(v(v1.value0));
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
	        };
	    });
	};
	var newtypeStar = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Star);
	var invariantStar = function (dictInvariant) {
	    return new Data_Functor_Invariant.Invariant(function (f) {
	        return function (g) {
	            return function (v) {
	                return function ($79) {
	                    return Data_Functor_Invariant.imap(dictInvariant)(f)(g)(v($79));
	                };
	            };
	        };
	    });
	};
	var hoistStar = function (f) {
	    return function (v) {
	        return function ($80) {
	            return f(v($80));
	        };
	    };
	};
	var functorStar = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function ($81) {
	                return Data_Functor.map(dictFunctor)(f)(v($81));
	            };
	        };
	    });
	};
	var distributiveStar = function (dictDistributive) {
	    return new Data_Distributive.Distributive(function () {
	        return functorStar(dictDistributive.Functor0());
	    }, function (dictFunctor) {
	        return function (f) {
	            return function ($82) {
	                return Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($82));
	            };
	        };
	    }, function (dictFunctor) {
	        return function (f) {
	            return function (a) {
	                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
	                    return v(a);
	                })(f);
	            };
	        };
	    });
	};
	var closedStar = function (dictDistributive) {
	    return new Data_Profunctor_Closed.Closed(function () {
	        return profunctorStar(dictDistributive.Functor0());
	    }, function (v) {
	        return function (g) {
	            return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($83) {
	                return v(g($83));
	            });
	        };
	    });
	};
	var choiceStar = function (dictApplicative) {
	    return new Data_Profunctor_Choice.Choice(function () {
	        return profunctorStar((dictApplicative.Apply0()).Functor0());
	    }, function (v) {
	        return Star(Data_Either.either(function ($84) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)(v($84));
	        })(function ($85) {
	            return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($85));
	        }));
	    }, function (v) {
	        return Star(Data_Either.either(function ($86) {
	            return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($86));
	        })(function ($87) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)(v($87));
	        }));
	    });
	};
	var categoryStar = function (dictMonad) {
	    return new Control_Category.Category(function () {
	        return semigroupoidStar(dictMonad.Bind1());
	    }, Control_Applicative.pure(dictMonad.Applicative0()));
	};
	var applyStar = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorStar(dictApply.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return function (a) {
	                return Control_Apply.apply(dictApply)(v(a))(v1(a));
	            };
	        };
	    });
	};
	var bindStar = function (dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyStar(dictBind.Apply0());
	    }, function (v) {
	        return function (f) {
	            return function (x) {
	                return Control_Bind.bind(dictBind)(v(x))(function (a) {
	                    var v1 = f(a);
	                    return v1(x);
	                });
	            };
	        };
	    });
	};
	var applicativeStar = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyStar(dictApplicative.Apply0());
	    }, function (a) {
	        return function (v) {
	            return Control_Applicative.pure(dictApplicative)(a);
	        };
	    });
	};
	var monadStar = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeStar(dictMonad.Applicative0());
	    }, function () {
	        return bindStar(dictMonad.Bind1());
	    });
	};
	var altStar = function (dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorStar(dictAlt.Functor0());
	    }, function (v) {
	        return function (v1) {
	            return function (a) {
	                return Control_Alt.alt(dictAlt)(v(a))(v1(a));
	            };
	        };
	    });
	};
	var plusStar = function (dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altStar(dictPlus.Alt0());
	    }, function (v) {
	        return Control_Plus.empty(dictPlus);
	    });
	};
	var alternativeStar = function (dictAlternative) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeStar(dictAlternative.Applicative0());
	    }, function () {
	        return plusStar(dictAlternative.Plus1());
	    });
	};
	var monadZeroStar = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeStar(dictMonadZero.Alternative1());
	    }, function () {
	        return monadStar(dictMonadZero.Monad0());
	    });
	};
	var monadPlusStar = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroStar(dictMonadPlus.MonadZero0());
	    });
	};
	module.exports = {
	    Star: Star,
	    hoistStar: hoistStar,
	    newtypeStar: newtypeStar,
	    semigroupoidStar: semigroupoidStar,
	    categoryStar: categoryStar,
	    functorStar: functorStar,
	    invariantStar: invariantStar,
	    applyStar: applyStar,
	    applicativeStar: applicativeStar,
	    bindStar: bindStar,
	    monadStar: monadStar,
	    altStar: altStar,
	    plusStar: plusStar,
	    alternativeStar: alternativeStar,
	    monadZeroStar: monadZeroStar,
	    monadPlusStar: monadPlusStar,
	    distributiveStar: distributiveStar,
	    profunctorStar: profunctorStar,
	    strongStar: strongStar,
	    choiceStar: choiceStar,
	    closedStar: closedStar
	};


/***/ }),
/* 373 */
/*!************************************************!*\
  !*** ./output/Data.Profunctor.Closed/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Closed = function (Profunctor0, closed) {
	    this.Profunctor0 = Profunctor0;
	    this.closed = closed;
	};
	var closedFunction = new Closed(function () {
	    return Data_Profunctor.profunctorFn;
	}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
	var closed = function (dict) {
	    return dict.closed;
	};
	module.exports = {
	    closed: closed,
	    Closed: Closed,
	    closedFunction: closedFunction
	};


/***/ }),
/* 374 */
/*!************************************************!*\
  !*** ./output/Data.Profunctor.Strong/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Strong = function (Profunctor0, first, second) {
	    this.Profunctor0 = Profunctor0;
	    this.first = first;
	    this.second = second;
	};
	var strongFn = new Strong(function () {
	    return Data_Profunctor.profunctorFn;
	}, function (a2b) {
	    return function (v) {
	        return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
	    };
	}, Data_Functor.map(Data_Tuple.functorTuple));
	var second = function (dict) {
	    return dict.second;
	};
	var first = function (dict) {
	    return dict.first;
	};
	var splitStrong = function (dictCategory) {
	    return function (dictStrong) {
	        return function (l) {
	            return function (r) {
	                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
	            };
	        };
	    };
	};
	var fanout = function (dictCategory) {
	    return function (dictStrong) {
	        return function (l) {
	            return function (r) {
	                var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.id(Control_Category.categoryFn))(function (a) {
	                    return new Data_Tuple.Tuple(a, a);
	                })(Control_Category.id(dictCategory));
	                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
	            };
	        };
	    };
	};
	module.exports = {
	    first: first,
	    second: second,
	    Strong: Strong,
	    splitStrong: splitStrong,
	    fanout: fanout,
	    strongFn: strongFn
	};


/***/ }),
/* 375 */
/*!*************************************************!*\
  !*** ./output/Data.Lens.Internal.Shop/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Shop = (function () {
	    function Shop(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Shop.create = function (value0) {
	        return function (value1) {
	            return new Shop(value0, value1);
	        };
	    };
	    return Shop;
	})();
	var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Shop(function ($30) {
	                return v.value0(f($30));
	            }, function (s) {
	                return function ($31) {
	                    return g(v.value1(f(s))($31));
	                };
	            });
	        };
	    };
	});
	var strongShop = new Data_Profunctor_Strong.Strong(function () {
	    return profunctorShop;
	}, function (v) {
	    return new Shop(function (v1) {
	        return v.value0(v1.value0);
	    }, function (v1) {
	        return function (b) {
	            return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
	        };
	    });
	}, function (v) {
	    return new Shop(function (v1) {
	        return v.value0(v1.value1);
	    }, function (v1) {
	        return function (b) {
	            return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
	        };
	    });
	});
	module.exports = {
	    Shop: Shop,
	    profunctorShop: profunctorShop,
	    strongShop: strongShop
	};


/***/ }),
/* 376 */
/*!*****************************************!*\
  !*** ./output/Data.Lens.Types/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Lens_Internal_Exchange = __webpack_require__(/*! ../Data.Lens.Internal.Exchange */ 377);
	var Data_Lens_Internal_Forget = __webpack_require__(/*! ../Data.Lens.Internal.Forget */ 378);
	var Data_Lens_Internal_Grating = __webpack_require__(/*! ../Data.Lens.Internal.Grating */ 382);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Internal_Market = __webpack_require__(/*! ../Data.Lens.Internal.Market */ 383);
	var Data_Lens_Internal_Re = __webpack_require__(/*! ../Data.Lens.Internal.Re */ 384);
	var Data_Lens_Internal_Shop = __webpack_require__(/*! ../Data.Lens.Internal.Shop */ 375);
	var Data_Lens_Internal_Tagged = __webpack_require__(/*! ../Data.Lens.Internal.Tagged */ 386);
	var Data_Lens_Internal_Wander = __webpack_require__(/*! ../Data.Lens.Internal.Wander */ 370);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	module.exports = {};


/***/ }),
/* 377 */
/*!*****************************************************!*\
  !*** ./output/Data.Lens.Internal.Exchange/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Exchange = (function () {
	    function Exchange(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Exchange.create = function (value0) {
	        return function (value1) {
	            return new Exchange(value0, value1);
	        };
	    };
	    return Exchange;
	})();
	var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Exchange(function ($11) {
	                return v.value0(f($11));
	            }, function ($12) {
	                return g(v.value1($12));
	            });
	        };
	    };
	});
	var functorExchange = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Exchange(v.value0, function ($13) {
	            return f(v.value1($13));
	        });
	    };
	});
	module.exports = {
	    Exchange: Exchange,
	    functorExchange: functorExchange,
	    profunctorExchange: profunctorExchange
	};


/***/ }),
/* 378 */
/*!***************************************************!*\
  !*** ./output/Data.Lens.Internal.Forget/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Const = __webpack_require__(/*! ../Data.Const */ 379);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Lens_Internal_Wander = __webpack_require__(/*! ../Data.Lens.Internal.Wander */ 370);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Cochoice = __webpack_require__(/*! ../Data.Profunctor.Cochoice */ 381);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Forget = function (x) {
	    return x;
	};
	var semigroupForget = function (dictSemigroup) {
	    return Data_Semigroup.semigroupFn(dictSemigroup);
	};
	var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
	    return function (v) {
	        return function (v1) {
	            return function ($27) {
	                return v1(f($27));
	            };
	        };
	    };
	});
	var strongForget = new Data_Profunctor_Strong.Strong(function () {
	    return profunctorForget;
	}, function (v) {
	    return function ($28) {
	        return v(Data_Tuple.fst($28));
	    };
	}, function (v) {
	    return function ($29) {
	        return v(Data_Tuple.snd($29));
	    };
	});
	var newtypeForget = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Forget);
	var monoidForget = function (dictMonoid) {
	    return Data_Monoid.monoidFn(dictMonoid);
	};
	var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
	    return profunctorForget;
	}, function (v) {
	    return function ($30) {
	        return v(Data_Either.Left.create($30));
	    };
	}, function (v) {
	    return function ($31) {
	        return v(Data_Either.Right.create($31));
	    };
	});
	var choiceForget = function (dictMonoid) {
	    return new Data_Profunctor_Choice.Choice(function () {
	        return profunctorForget;
	    }, function (v) {
	        return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
	    }, function (v) {
	        return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
	    });
	};
	var wanderForget = function (dictMonoid) {
	    return new Data_Lens_Internal_Wander.Wander(function () {
	        return choiceForget(dictMonoid);
	    }, function () {
	        return strongForget;
	    }, function (f) {
	        return function (v) {
	            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
	        };
	    });
	};
	module.exports = {
	    Forget: Forget,
	    newtypeForget: newtypeForget,
	    semigroupForget: semigroupForget,
	    monoidForget: monoidForget,
	    profunctorForget: profunctorForget,
	    choiceForget: choiceForget,
	    strongForget: strongForget,
	    cochoiceForget: cochoiceForget,
	    wanderForget: wanderForget
	};


/***/ }),
/* 379 */
/*!************************************!*\
  !*** ./output/Data.Const/index.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_BooleanAlgebra = __webpack_require__(/*! ../Data.BooleanAlgebra */ 46);
	var Data_Bounded = __webpack_require__(/*! ../Data.Bounded */ 49);
	var Data_CommutativeRing = __webpack_require__(/*! ../Data.CommutativeRing */ 51);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Field = __webpack_require__(/*! ../Data.Field */ 55);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Contravariant = __webpack_require__(/*! ../Data.Functor.Contravariant */ 380);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Show = __webpack_require__(/*! ../Data.Show */ 17);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Const = function (x) {
	    return x;
	};
	var showConst = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConst = function (dictSemiring) {
	    return dictSemiring;
	};
	var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var semigroupConst = function (dictSemigroup) {
	    return dictSemigroup;
	};
	var ringConst = function (dictRing) {
	    return dictRing;
	};
	var ordConst = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeConst = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Const);
	var monoidConst = function (dictMonoid) {
	    return dictMonoid;
	};
	var heytingAlgebraConst = function (dictHeytingAlgebra) {
	    return dictHeytingAlgebra;
	};
	var functorConst = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
	var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return Data_Monoid.mempty(dictMonoid);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	});
	var traversableConst = new Data_Traversable.Traversable(function () {
	    return foldableConst;
	}, function () {
	    return functorConst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Applicative.pure(dictApplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return Control_Applicative.pure(dictApplicative)(v1);
	        };
	    };
	});
	var fieldConst = function (dictField) {
	    return dictField;
	};
	var euclideanRingConst = function (dictEuclideanRing) {
	    return dictEuclideanRing;
	};
	var eqConst = function (dictEq) {
	    return dictEq;
	};
	var eq1Const = function (dictEq) {
	    return new Data_Eq.Eq1(function (dictEq1) {
	        return Data_Eq.eq(eqConst(dictEq));
	    });
	};
	var ord1Const = function (dictOrd) {
	    return new Data_Ord.Ord1(function () {
	        return eq1Const(dictOrd.Eq0());
	    }, function (dictOrd1) {
	        return Data_Ord.compare(ordConst(dictOrd));
	    });
	};
	var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var commutativeRingConst = function (dictCommutativeRing) {
	    return dictCommutativeRing;
	};
	var boundedConst = function (dictBounded) {
	    return dictBounded;
	};
	var booleanAlgebraConst = function (dictBooleanAlgebra) {
	    return dictBooleanAlgebra;
	};
	var applyConst = function (dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorConst;
	    }, function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var bindConst = function (dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyConst(dictSemigroup);
	    }, function (v) {
	        return function (v1) {
	            return v;
	        };
	    });
	};
	var applicativeConst = function (dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyConst(dictMonoid.Semigroup0());
	    }, function (v) {
	        return Data_Monoid.mempty(dictMonoid);
	    });
	};
	module.exports = {
	    Const: Const,
	    newtypeConst: newtypeConst,
	    eqConst: eqConst,
	    eq1Const: eq1Const,
	    ordConst: ordConst,
	    ord1Const: ord1Const,
	    boundedConst: boundedConst,
	    showConst: showConst,
	    semigroupoidConst: semigroupoidConst,
	    semigroupConst: semigroupConst,
	    monoidConst: monoidConst,
	    semiringConst: semiringConst,
	    ringConst: ringConst,
	    euclideanRingConst: euclideanRingConst,
	    commutativeRingConst: commutativeRingConst,
	    fieldConst: fieldConst,
	    heytingAlgebraConst: heytingAlgebraConst,
	    booleanAlgebraConst: booleanAlgebraConst,
	    functorConst: functorConst,
	    invariantConst: invariantConst,
	    contravariantConst: contravariantConst,
	    applyConst: applyConst,
	    bindConst: bindConst,
	    applicativeConst: applicativeConst,
	    foldableConst: foldableConst,
	    traversableConst: traversableConst
	};


/***/ }),
/* 380 */
/*!****************************************************!*\
  !*** ./output/Data.Functor.Contravariant/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Void = __webpack_require__(/*! ../Data.Void */ 19);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Contravariant = function (cmap) {
	    this.cmap = cmap;
	};
	var cmap = function (dict) {
	    return dict.cmap;
	};
	var cmapFlipped = function (dictContravariant) {
	    return function (x) {
	        return function (f) {
	            return cmap(dictContravariant)(f)(x);
	        };
	    };
	};
	var coerce = function (dictContravariant) {
	    return function (dictFunctor) {
	        return function (a) {
	            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
	        };
	    };
	};
	var imapC = function (dictContravariant) {
	    return function (v) {
	        return function (f) {
	            return cmap(dictContravariant)(f);
	        };
	    };
	};
	module.exports = {
	    cmap: cmap,
	    Contravariant: Contravariant,
	    cmapFlipped: cmapFlipped,
	    coerce: coerce,
	    imapC: imapC
	};


/***/ }),
/* 381 */
/*!**************************************************!*\
  !*** ./output/Data.Profunctor.Cochoice/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Cochoice = function (Profunctor0, unleft, unright) {
	    this.Profunctor0 = Profunctor0;
	    this.unleft = unleft;
	    this.unright = unright;
	};
	var unright = function (dict) {
	    return dict.unright;
	};
	var unleft = function (dict) {
	    return dict.unleft;
	};
	module.exports = {
	    unleft: unleft,
	    unright: unright,
	    Cochoice: Cochoice
	};


/***/ }),
/* 382 */
/*!****************************************************!*\
  !*** ./output/Data.Lens.Internal.Grating/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Grating = function (x) {
	    return x;
	};
	var profunctorGrating = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return function (d) {
	                return g(v(function (k) {
	                    return d(function ($9) {
	                        return k(f($9));
	                    });
	                }));
	            };
	        };
	    };
	});
	var newtypeGrating = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Grating);
	var closedGrating = new Data_Profunctor_Closed.Closed(function () {
	    return profunctorGrating;
	}, function (v) {
	    return function (f) {
	        return function (x) {
	            return v(function (k) {
	                return f(function (g) {
	                    return k(g(x));
	                });
	            });
	        };
	    };
	});
	module.exports = {
	    Grating: Grating,
	    newtypeGrating: newtypeGrating,
	    profunctorGrating: profunctorGrating,
	    closedGrating: closedGrating
	};


/***/ }),
/* 383 */
/*!***************************************************!*\
  !*** ./output/Data.Lens.Internal.Market/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Bifunctor = __webpack_require__(/*! ../Data.Bifunctor */ 43);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Market = (function () {
	    function Market(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Market.create = function (value0) {
	        return function (value1) {
	            return new Market(value0, value1);
	        };
	    };
	    return Market;
	})();
	var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Market(function ($19) {
	                return g(v.value0($19));
	            }, function ($20) {
	                return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
	            });
	        };
	    };
	});
	var functorMarket = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Market(function ($21) {
	            return f(v.value0($21));
	        }, function ($22) {
	            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f)(v.value1($22));
	        });
	    };
	});
	var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
	    return profunctorMarket;
	}, function (v) {
	    return new Market(function ($23) {
	        return Data_Either.Left.create(v.value0($23));
	    }, Data_Either.either(function ($24) {
	        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
	    })(function ($25) {
	        return Data_Either.Left.create(Data_Either.Right.create($25));
	    }));
	}, function (v) {
	    return new Market(function ($26) {
	        return Data_Either.Right.create(v.value0($26));
	    }, Data_Either.either(function ($27) {
	        return Data_Either.Left.create(Data_Either.Left.create($27));
	    })(function ($28) {
	        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
	    }));
	});
	module.exports = {
	    Market: Market,
	    functorMarket: functorMarket,
	    profunctorMarket: profunctorMarket,
	    choiceMarket: choiceMarket
	};


/***/ }),
/* 384 */
/*!***********************************************!*\
  !*** ./output/Data.Lens.Internal.Re/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Cochoice = __webpack_require__(/*! ../Data.Profunctor.Cochoice */ 381);
	var Data_Profunctor_Costrong = __webpack_require__(/*! ../Data.Profunctor.Costrong */ 385);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Re = function (x) {
	    return x;
	};
	var profunctorRe = function (dictProfunctor) {
	    return new Data_Profunctor.Profunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return function ($28) {
	                    return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($28));
	                };
	            };
	        };
	    });
	};
	var strongRe = function (dictStrong) {
	    return new Data_Profunctor_Costrong.Costrong(function () {
	        return profunctorRe(dictStrong.Profunctor0());
	    }, function (v) {
	        return function ($29) {
	            return v(Data_Profunctor_Strong.first(dictStrong)($29));
	        };
	    }, function (v) {
	        return function ($30) {
	            return v(Data_Profunctor_Strong.second(dictStrong)($30));
	        };
	    });
	};
	var newtypeRe = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Re);
	var costrongRe = function (dictCostrong) {
	    return new Data_Profunctor_Strong.Strong(function () {
	        return profunctorRe(dictCostrong.Profunctor0());
	    }, function (v) {
	        return function ($31) {
	            return v(Data_Profunctor_Costrong.unfirst(dictCostrong)($31));
	        };
	    }, function (v) {
	        return function ($32) {
	            return v(Data_Profunctor_Costrong.unsecond(dictCostrong)($32));
	        };
	    });
	};
	var cochoiceRe = function (dictCochoice) {
	    return new Data_Profunctor_Choice.Choice(function () {
	        return profunctorRe(dictCochoice.Profunctor0());
	    }, function (v) {
	        return function ($33) {
	            return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($33));
	        };
	    }, function (v) {
	        return function ($34) {
	            return v(Data_Profunctor_Cochoice.unright(dictCochoice)($34));
	        };
	    });
	};
	var choiceRe = function (dictChoice) {
	    return new Data_Profunctor_Cochoice.Cochoice(function () {
	        return profunctorRe(dictChoice.Profunctor0());
	    }, function (v) {
	        return function ($35) {
	            return v(Data_Profunctor_Choice.left(dictChoice)($35));
	        };
	    }, function (v) {
	        return function ($36) {
	            return v(Data_Profunctor_Choice.right(dictChoice)($36));
	        };
	    });
	};
	module.exports = {
	    Re: Re,
	    newtypeRe: newtypeRe,
	    profunctorRe: profunctorRe,
	    choiceRe: choiceRe,
	    cochoiceRe: cochoiceRe,
	    strongRe: strongRe,
	    costrongRe: costrongRe
	};


/***/ }),
/* 385 */
/*!**************************************************!*\
  !*** ./output/Data.Profunctor.Costrong/index.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Costrong = function (Profunctor0, unfirst, unsecond) {
	    this.Profunctor0 = Profunctor0;
	    this.unfirst = unfirst;
	    this.unsecond = unsecond;
	};
	var unsecond = function (dict) {
	    return dict.unsecond;
	};
	var unfirst = function (dict) {
	    return dict.unfirst;
	};
	module.exports = {
	    unfirst: unfirst,
	    unsecond: unsecond,
	    Costrong: Costrong
	};


/***/ }),
/* 386 */
/*!***************************************************!*\
  !*** ./output/Data.Lens.Internal.Tagged/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Data_Profunctor_Costrong = __webpack_require__(/*! ../Data.Profunctor.Costrong */ 385);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Tagged = function (x) {
	    return x;
	};
	var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
	    return function (g) {
	        return function (v1) {
	            return g(v1);
	        };
	    };
	});
	var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
	    return taggedProfunctor;
	}, function (v) {
	    return v.value0;
	}, function (v) {
	    return v.value1;
	});
	var taggedClosed = new Data_Profunctor_Closed.Closed(function () {
	    return taggedProfunctor;
	}, function (v) {
	    return Data_Function["const"](v);
	});
	var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
	    return taggedProfunctor;
	}, function (v) {
	    return new Data_Either.Left(v);
	}, function (v) {
	    return new Data_Either.Right(v);
	});
	var newtypeTagged = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Tagged);
	var functorTagged = new Data_Functor.Functor(function (f) {
	    return function (m) {
	        return f(m);
	    };
	});
	var foldableTagged = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (b) {
	        return function (v) {
	            return f(b)(v);
	        };
	    };
	}, function (f) {
	    return function (b) {
	        return function (v) {
	            return f(v)(b);
	        };
	    };
	});
	var traversableTagged = new Data_Traversable.Traversable(function () {
	    return foldableTagged;
	}, function () {
	    return functorTagged;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(f(v));
	        };
	    };
	});
	var eqTagged = function (dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)(x)(y);
	        };
	    });
	};
	var ordTagged = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqTagged(dictOrd.Eq0());
	    }, function (x) {
	        return function (y) {
	            return Data_Ord.compare(dictOrd)(x)(y);
	        };
	    });
	};
	var eq1Tagged = new Data_Eq.Eq1(function (dictEq) {
	    return Data_Eq.eq(eqTagged(dictEq));
	});
	var ord1Tagged = new Data_Ord.Ord1(function () {
	    return eq1Tagged;
	}, function (dictOrd) {
	    return Data_Ord.compare(ordTagged(dictOrd));
	});
	module.exports = {
	    Tagged: Tagged,
	    newtypeTagged: newtypeTagged,
	    eqTagged: eqTagged,
	    eq1Tagged: eq1Tagged,
	    ordTagged: ordTagged,
	    ord1Tagged: ord1Tagged,
	    functorTagged: functorTagged,
	    taggedProfunctor: taggedProfunctor,
	    taggedChoice: taggedChoice,
	    taggedCostrong: taggedCostrong,
	    taggedClosed: taggedClosed,
	    foldableTagged: foldableTagged,
	    traversableTagged: traversableTagged
	};


/***/ }),
/* 387 */
/*!*********************************************!*\
  !*** ./output/Data.Lens.Lens.Unit/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Lens_Lens = __webpack_require__(/*! ../Data.Lens.Lens */ 368);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var united = function (dictStrong) {
	    return Data_Lens_Lens.lens(Data_Function["const"](Data_Unit.unit))(Data_Function["const"])(dictStrong);
	};
	module.exports = {
	    united: united
	};


/***/ }),
/* 388 */
/*!************************************************!*\
  !*** ./output/Data.Lens.Prism.Either/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Lens_Prism = __webpack_require__(/*! ../Data.Lens.Prism */ 389);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var _Right = function (dictChoice) {
	    return Data_Profunctor_Choice.right(dictChoice);
	};
	var _Left = function (dictChoice) {
	    return Data_Profunctor_Choice.left(dictChoice);
	};
	module.exports = {
	    _Left: _Left,
	    _Right: _Right
	};


/***/ }),
/* 389 */
/*!*****************************************!*\
  !*** ./output/Data.Lens.Prism/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Lens_Internal_Market = __webpack_require__(/*! ../Data.Lens.Internal.Market */ 383);
	var Data_Lens_Internal_Tagged = __webpack_require__(/*! ../Data.Lens.Internal.Tagged */ 386);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var withPrism = function (l) {
	    return function (f) {
	        var v = l(new Data_Lens_Internal_Market.Market(Control_Category.id(Control_Category.categoryFn), Data_Either.Right.create));
	        return f(v.value0)(v.value1);
	    };
	};
	var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
	var prism = function (to) {
	    return function (fro) {
	        return function (dictChoice) {
	            return function (pab) {
	                return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
	            };
	        };
	    };
	};
	var prism$prime = function (to) {
	    return function (fro) {
	        return function (dictChoice) {
	            return prism(to)(function (s) {
	                return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
	            })(dictChoice);
	        };
	    };
	};
	var nearly = function (x) {
	    return function (f) {
	        return function (dictChoice) {
	            return prism$prime(Data_Function["const"](x))(function ($14) {
	                return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(f($14));
	            })(dictChoice);
	        };
	    };
	};
	var only = function (dictEq) {
	    return function (x) {
	        return function (dictChoice) {
	            return nearly(x)(function (v) {
	                return Data_Eq.eq(dictEq)(v)(x);
	            })(dictChoice);
	        };
	    };
	};
	var matching = function (l) {
	    return withPrism(l)(function (v) {
	        return function (f) {
	            return f;
	        };
	    });
	};
	var is = function (dictHeytingAlgebra) {
	    return function (l) {
	        return function ($15) {
	            return Data_Either.either(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))(matching(l)($15));
	        };
	    };
	};
	var isn$primet = function (dictHeytingAlgebra) {
	    return function (l) {
	        return function ($16) {
	            return Data_HeytingAlgebra.not(dictHeytingAlgebra)(is(dictHeytingAlgebra)(l)($16));
	        };
	    };
	};
	var clonePrism = function (l) {
	    return function (dictChoice) {
	        return withPrism(l)(function (x) {
	            return function (y) {
	                return function (p) {
	                    return prism(x)(y)(dictChoice)(p);
	                };
	            };
	        });
	    };
	};
	module.exports = {
	    prism: prism,
	    "prism'": prism$prime,
	    review: review,
	    nearly: nearly,
	    only: only,
	    clonePrism: clonePrism,
	    withPrism: withPrism,
	    matching: matching,
	    is: is,
	    "isn't": isn$primet
	};


/***/ }),
/* 390 */
/*!***********************************************!*\
  !*** ./output/Data.Lens.Prism.Maybe/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Lens_Prism = __webpack_require__(/*! ../Data.Lens.Prism */ 389);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var _Nothing = function (dictChoice) {
	    return Data_Lens_Prism.prism(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Data_Unit.unit))(Data_Function["const"](new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice);
	};
	var _Just = function (dictChoice) {
	    return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
	};
	module.exports = {
	    _Nothing: _Nothing,
	    _Just: _Just
	};


/***/ }),
/* 391 */
/*!****************************************!*\
  !*** ./output/Data.Lens.Fold/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Foldable = __webpack_require__(/*! ../Data.Foldable */ 61);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Lens_Internal_Forget = __webpack_require__(/*! ../Data.Lens.Internal.Forget */ 378);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_List = __webpack_require__(/*! ../Data.List */ 173);
	var Data_List_Types = __webpack_require__(/*! ../Data.List.Types */ 149);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Maybe_First = __webpack_require__(/*! ../Data.Maybe.First */ 69);
	var Data_Maybe_Last = __webpack_require__(/*! ../Data.Maybe.Last */ 70);
	var Data_Monoid = __webpack_require__(/*! ../Data.Monoid */ 68);
	var Data_Monoid_Additive = __webpack_require__(/*! ../Data.Monoid.Additive */ 71);
	var Data_Monoid_Conj = __webpack_require__(/*! ../Data.Monoid.Conj */ 73);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Monoid_Dual = __webpack_require__(/*! ../Data.Monoid.Dual */ 75);
	var Data_Monoid_Endo = __webpack_require__(/*! ../Data.Monoid.Endo */ 76);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ../Data.Monoid.Multiplicative */ 77);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Ord = __webpack_require__(/*! ../Data.Ord */ 11);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Choice = __webpack_require__(/*! ../Data.Profunctor.Choice */ 371);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var unfolded = function (dictMonoid) {
	    return function (f) {
	        return function (p) {
	            var go = function ($43) {
	                return Data_Maybe.maybe(Data_Monoid.mempty(dictMonoid))(function (v) {
	                    return Data_Semigroup.append(dictMonoid.Semigroup0())(Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(v.value0))(go(v.value1));
	                })(f($43));
	            };
	            return go;
	        };
	    };
	};
	var replicated = function (dictMonoid) {
	    return function (i) {
	        return function (v) {
	            var go = function (v1) {
	                return function (x) {
	                    if (v1 === 0) {
	                        return Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));
	                    };
	                    return Data_Semigroup.append(Data_Semigroup.semigroupFn(dictMonoid.Semigroup0()))(x)(go(v1 - 1 | 0)(x));
	                };
	            };
	            return go(i)(v);
	        };
	    };
	};
	var ifoldMapOf = function (p) {
	    return function (f) {
	        return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f))));
	    };
	};
	var ifoldlOf = function (p) {
	    return function (f) {
	        return function (r) {
	            return function ($44) {
	                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(ifoldMapOf(p)(function (i) {
	                    return function ($45) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f(i))($45)));
	                    };
	                })($44)));
	            };
	        };
	    };
	};
	var ifoldrOf = function (p) {
	    return function (f) {
	        return function (r) {
	            return function ($46) {
	                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(ifoldMapOf(p)(function (i) {
	                    return function ($47) {
	                        return Data_Monoid_Endo.Endo(f(i)($47));
	                    };
	                })($46));
	            };
	        };
	    };
	};
	var itoListOf = function (p) {
	    return ifoldrOf(p)(function (i) {
	        return function (x) {
	            return function (xs) {
	                return new Data_List_Types.Cons(new Data_Tuple.Tuple(i, x), xs);
	            };
	        };
	    })(Data_List_Types.Nil.value);
	};
	var itraverseOf_ = function (dictApplicative) {
	    return function (p) {
	        return function (f) {
	            return ifoldrOf(p)(function (i) {
	                return function (a) {
	                    return function (fu) {
	                        return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(i)(a)))(fu);
	                    };
	                };
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var iforOf_ = function (dictApplicative) {
	    return function ($48) {
	        return Data_Function.flip(itraverseOf_(dictApplicative)($48));
	    };
	};
	var ifindOf = function (p) {
	    return function (f) {
	        return ifoldrOf(p)(function (i) {
	            return function (a) {
	                return Data_Maybe.maybe((function () {
	                    var $37 = f(i)(a);
	                    if ($37) {
	                        return new Data_Maybe.Just(a);
	                    };
	                    return Data_Maybe.Nothing.value;
	                })())(Data_Maybe.Just.create);
	            };
	        })(Data_Maybe.Nothing.value);
	    };
	};
	var ianyOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function (f) {
	            return function ($49) {
	                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(ifoldMapOf(p)(function (i) {
	                    return function ($50) {
	                        return Data_Monoid_Disj.Disj(f(i)($50));
	                    };
	                })($49));
	            };
	        };
	    };
	};
	var iallOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function (f) {
	            return function ($51) {
	                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(ifoldMapOf(p)(function (i) {
	                    return function ($52) {
	                        return Data_Monoid_Conj.Conj(f(i)($52));
	                    };
	                })($51));
	            };
	        };
	    };
	};
	var folded = function (dictMonoid) {
	    return function (dictFoldable) {
	        return function (v) {
	            return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(v);
	        };
	    };
	};
	var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
	var foldOf = function (p) {
	    return foldMapOf(p)(Control_Category.id(Control_Category.categoryFn));
	};
	var foldlOf = function (p) {
	    return function (f) {
	        return function (r) {
	            return function ($53) {
	                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapOf(p)(function ($54) {
	                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($54)));
	                })($53)));
	            };
	        };
	    };
	};
	var foldrOf = function (p) {
	    return function (f) {
	        return function (r) {
	            return function ($55) {
	                return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(r)(foldMapOf(p)(function ($56) {
	                    return Data_Monoid_Endo.Endo(f($56));
	                })($55));
	            };
	        };
	    };
	};
	var maximumOf = function (dictOrd) {
	    return function (p) {
	        var max = function (a) {
	            return function (b) {
	                var $39 = Data_Ord.greaterThan(dictOrd)(a)(b);
	                if ($39) {
	                    return a;
	                };
	                return b;
	            };
	        };
	        return foldrOf(p)(function (a) {
	            return function ($57) {
	                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(max(a))($57));
	            };
	        })(Data_Maybe.Nothing.value);
	    };
	};
	var minimumOf = function (dictOrd) {
	    return function (p) {
	        var min = function (a) {
	            return function (b) {
	                var $40 = Data_Ord.lessThan(dictOrd)(a)(b);
	                if ($40) {
	                    return a;
	                };
	                return b;
	            };
	        };
	        return foldrOf(p)(function (a) {
	            return function ($58) {
	                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(min(a))($58));
	            };
	        })(Data_Maybe.Nothing.value);
	    };
	};
	var toListOf = function (p) {
	    return foldrOf(p)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
	};
	var toListOfOn = function (s) {
	    return function (p) {
	        return toListOf(p)(s);
	    };
	};
	var traverseOf_ = function (dictApplicative) {
	    return function (p) {
	        return function (f) {
	            return foldrOf(p)(function (a) {
	                return function (fu) {
	                    return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(a)))(fu);
	                };
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var has = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function ($59) {
	            return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))($59));
	        };
	    };
	};
	var hasn$primet = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function ($60) {
	            return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))($60));
	        };
	    };
	};
	var lastOf = function (p) {
	    return function ($61) {
	        return Data_Newtype.unwrap(Data_Maybe_Last.newtypeLast)(foldMapOf(p)(function ($62) {
	            return Data_Maybe_Last.Last(Data_Maybe.Just.create($62));
	        })($61));
	    };
	};
	var lengthOf = function (p) {
	    return function ($63) {
	        return Data_Newtype.unwrap(Data_Monoid_Additive.newtypeAdditive)(foldMapOf(p)(Data_Function["const"](1))($63));
	    };
	};
	var preview = function (p) {
	    return function ($64) {
	        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
	            return Data_Maybe_First.First(Data_Maybe.Just.create($65));
	        })($64));
	    };
	};
	var previewOn = function (s) {
	    return function (p) {
	        return preview(p)(s);
	    };
	};
	var productOf = function (dictSemiring) {
	    return function (p) {
	        return function ($66) {
	            return Data_Newtype.unwrap(Data_Monoid_Multiplicative.newtypeMultiplicative)(foldMapOf(p)(Data_Monoid_Multiplicative.Multiplicative)($66));
	        };
	    };
	};
	var sequenceOf_ = function (dictApplicative) {
	    return function (p) {
	        return function ($67) {
	            return Data_Function.flip(Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo))(Control_Applicative.pure(dictApplicative)(Data_Unit.unit))(foldMapOf(p)(function (f) {
	                return function (v) {
	                    return Control_Apply.applySecond(dictApplicative.Apply0())(f)(v);
	                };
	            })($67));
	        };
	    };
	};
	var sumOf = function (dictSemiring) {
	    return function (p) {
	        return function ($68) {
	            return Data_Newtype.unwrap(Data_Monoid_Additive.newtypeAdditive)(foldMapOf(p)(Data_Monoid_Additive.Additive)($68));
	        };
	    };
	};
	var firstOf = function (p) {
	    return function ($69) {
	        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($70) {
	            return Data_Maybe_First.First(Data_Maybe.Just.create($70));
	        })($69));
	    };
	};
	var findOf = function (p) {
	    return function (f) {
	        return foldrOf(p)(function (a) {
	            return Data_Maybe.maybe((function () {
	                var $41 = f(a);
	                if ($41) {
	                    return new Data_Maybe.Just(a);
	                };
	                return Data_Maybe.Nothing.value;
	            })())(Data_Maybe.Just.create);
	        })(Data_Maybe.Nothing.value);
	    };
	};
	var filtered = function (dictChoice) {
	    return function (f) {
	        return function ($71) {
	            return Data_Profunctor.dimap(dictChoice.Profunctor0())(function (x) {
	                var $42 = f(x);
	                if ($42) {
	                    return new Data_Either.Right(x);
	                };
	                return new Data_Either.Left(x);
	            })(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($71));
	        };
	    };
	};
	var anyOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function (f) {
	            return function ($72) {
	                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapOf(p)(function ($73) {
	                    return Data_Monoid_Disj.Disj(f($73));
	                })($72));
	            };
	        };
	    };
	};
	var elemOf = function (dictEq) {
	    return function (p) {
	        return function (a) {
	            return anyOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
	                return Data_Eq.eq(dictEq)(v)(a);
	            });
	        };
	    };
	};
	var orOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return anyOf(dictHeytingAlgebra)(p)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var allOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function (f) {
	            return function ($74) {
	                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapOf(p)(function ($75) {
	                    return Data_Monoid_Conj.Conj(f($75));
	                })($74));
	            };
	        };
	    };
	};
	var andOf = function (dictHeytingAlgebra) {
	    return function (p) {
	        return allOf(dictHeytingAlgebra)(p)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var notElemOf = function (dictEq) {
	    return function (p) {
	        return function (a) {
	            return allOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
	                return Data_Eq.notEq(dictEq)(v)(a);
	            });
	        };
	    };
	};
	module.exports = {
	    previewOn: previewOn,
	    toListOfOn: toListOfOn,
	    preview: preview,
	    foldOf: foldOf,
	    foldMapOf: foldMapOf,
	    foldrOf: foldrOf,
	    foldlOf: foldlOf,
	    toListOf: toListOf,
	    firstOf: firstOf,
	    lastOf: lastOf,
	    maximumOf: maximumOf,
	    minimumOf: minimumOf,
	    allOf: allOf,
	    anyOf: anyOf,
	    andOf: andOf,
	    orOf: orOf,
	    elemOf: elemOf,
	    notElemOf: notElemOf,
	    sumOf: sumOf,
	    productOf: productOf,
	    lengthOf: lengthOf,
	    findOf: findOf,
	    sequenceOf_: sequenceOf_,
	    traverseOf_: traverseOf_,
	    has: has,
	    "hasn't": hasn$primet,
	    replicated: replicated,
	    filtered: filtered,
	    folded: folded,
	    unfolded: unfolded,
	    ifoldMapOf: ifoldMapOf,
	    ifoldrOf: ifoldrOf,
	    ifoldlOf: ifoldlOf,
	    iallOf: iallOf,
	    ianyOf: ianyOf,
	    itoListOf: itoListOf,
	    itraverseOf_: itraverseOf_
	};


/***/ }),
/* 392 */
/*!******************************************!*\
  !*** ./output/Data.Lens.Getter/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Lens_Internal_Forget = __webpack_require__(/*! ../Data.Lens.Internal.Forget */ 378);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var view = function (l) {
	    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.id(Control_Category.categoryFn)));
	};
	var viewOn = function (s) {
	    return function (l) {
	        return view(l)(s);
	    };
	};
	var use = function (dictMonadState) {
	    return function (p) {
	        return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
	            return viewOn(v)(p);
	        });
	    };
	};
	var to = function (f) {
	    return function (p) {
	        return function ($7) {
	            return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(f($7));
	        };
	    };
	};
	var takeBoth = function (l) {
	    return function (r) {
	        return function (a) {
	            var cmps = function (v) {
	                return function (v1) {
	                    return Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(v)(v1);
	                };
	            };
	            return cmps(l(Control_Category.id(Control_Category.categoryFn)))(r(Control_Category.id(Control_Category.categoryFn)));
	        };
	    };
	};
	var iview = function (l) {
	    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Data_Lens_Internal_Indexed.Indexed(Control_Category.id(Control_Category.categoryFn))));
	};
	var iuse = function (dictMonadState) {
	    return function (p) {
	        return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
	    };
	};
	module.exports = {
	    viewOn: viewOn,
	    view: view,
	    to: to,
	    takeBoth: takeBoth,
	    use: use,
	    iview: iview,
	    iuse: iuse
	};


/***/ }),
/* 393 */
/*!*****************************************!*\
  !*** ./output/Data.Lens.Grate/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Data_Distributive = __webpack_require__(/*! ../Data.Distributive */ 102);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Lens_Internal_Grating = __webpack_require__(/*! ../Data.Lens.Internal.Grating */ 382);
	var Data_Lens_Internal_Zipping = __webpack_require__(/*! ../Data.Lens.Internal.Zipping */ 394);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Data_Profunctor_Costar = __webpack_require__(/*! ../Data.Profunctor.Costar */ 395);
	var Data_Profunctor_Star = __webpack_require__(/*! ../Data.Profunctor.Star */ 372);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var zipWithOf = function (g) {
	    return function (f) {
	        return Data_Newtype.unwrap(Data_Lens_Internal_Zipping.newtypeZipping)(g(f));
	    };
	};
	var zipFWithOf = function (g) {
	    return function (f) {
	        return Data_Newtype.unwrap(Data_Profunctor_Costar.newtypeCostar)(g(f));
	    };
	};
	var withGrate = function (g) {
	    return Data_Newtype.unwrap(Data_Lens_Internal_Grating.newtypeGrating)(g(function (f) {
	        return f(Control_Category.id(Control_Category.categoryFn));
	    }));
	};
	var grate = function (f) {
	    return function (dictClosed) {
	        return function (pab) {
	            return Data_Profunctor.dimap(dictClosed.Profunctor0())(Data_Function.applyFlipped)(f)(Data_Profunctor_Closed.closed(dictClosed)(pab));
	        };
	    };
	};
	var cotraversed = function (dictDistributive) {
	    return function (dictClosed) {
	        return grate(function (f) {
	            return Data_Distributive.cotraverse(dictDistributive)(Data_Functor.functorFn)(f)(Control_Category.id(Control_Category.categoryFn));
	        })(dictClosed);
	    };
	};
	var collectOf = function (g) {
	    return function (f) {
	        return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(g(f));
	    };
	};
	var cloneGrate = function (g) {
	    return function (dictClosed) {
	        return grate(withGrate(g))(dictClosed);
	    };
	};
	module.exports = {
	    grate: grate,
	    withGrate: withGrate,
	    cloneGrate: cloneGrate,
	    cotraversed: cotraversed,
	    zipWithOf: zipWithOf,
	    zipFWithOf: zipFWithOf,
	    collectOf: collectOf
	};


/***/ }),
/* 394 */
/*!****************************************************!*\
  !*** ./output/Data.Lens.Internal.Zipping/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Zipping = function (x) {
	    return x;
	};
	var profunctorZipping = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return function (a1) {
	                return function (a2) {
	                    return g(v(f(a1))(f(a2)));
	                };
	            };
	        };
	    };
	});
	var newtypeZipping = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Zipping);
	var closedZipping = new Data_Profunctor_Closed.Closed(function () {
	    return profunctorZipping;
	}, function (v) {
	    return function (f1) {
	        return function (f2) {
	            return function (x) {
	                return v(f1(x))(f2(x));
	            };
	        };
	    };
	});
	module.exports = {
	    Zipping: Zipping,
	    newtypeZipping: newtypeZipping,
	    profunctorZipping: profunctorZipping,
	    closedZipping: closedZipping
	};


/***/ }),
/* 395 */
/*!************************************************!*\
  !*** ./output/Data.Profunctor.Costar/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Comonad = __webpack_require__(/*! ../Control.Comonad */ 72);
	var Control_Extend = __webpack_require__(/*! ../Control.Extend */ 36);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Distributive = __webpack_require__(/*! ../Data.Distributive */ 102);
	var Data_Either = __webpack_require__(/*! ../Data.Either */ 34);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Invariant = __webpack_require__(/*! ../Data.Functor.Invariant */ 67);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Closed = __webpack_require__(/*! ../Data.Profunctor.Closed */ 373);
	var Data_Profunctor_Cochoice = __webpack_require__(/*! ../Data.Profunctor.Cochoice */ 381);
	var Data_Profunctor_Costrong = __webpack_require__(/*! ../Data.Profunctor.Costrong */ 385);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var Costar = function (x) {
	    return x;
	};
	var semigroupoidCostar = function (dictExtend) {
	    return new Control_Semigroupoid.Semigroupoid(function (v) {
	        return function (v1) {
	            return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
	        };
	    });
	};
	var profunctorCostar = function (dictFunctor) {
	    return new Data_Profunctor.Profunctor(function (f) {
	        return function (g) {
	            return function (v) {
	                return function ($54) {
	                    return g(v(Data_Functor.map(dictFunctor)(f)($54)));
	                };
	            };
	        };
	    });
	};
	var strongCostar = function (dictComonad) {
	    return new Data_Profunctor_Strong.Strong(function () {
	        return profunctorCostar((dictComonad.Extend0()).Functor0());
	    }, function (v) {
	        return function (x) {
	            return new Data_Tuple.Tuple(v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
	        };
	    }, function (v) {
	        return function (x) {
	            return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.snd)(x)));
	        };
	    });
	};
	var newtypeCostar = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Costar);
	var hoistCostar = function (f) {
	    return function (v) {
	        return Data_Profunctor.lmap(Data_Profunctor.profunctorFn)(f)(v);
	    };
	};
	var functorCostar = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return function ($55) {
	            return f(v($55));
	        };
	    };
	});
	var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
	var distributiveCostar = new Data_Distributive.Distributive(function () {
	    return functorCostar;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($56) {
	            return Data_Distributive.distribute(distributiveCostar)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($56));
	        };
	    };
	}, function (dictFunctor) {
	    return function (f) {
	        return function (a) {
	            return Data_Functor.map(dictFunctor)(function (v) {
	                return v(a);
	            })(f);
	        };
	    };
	});
	var costrongCostar = function (dictFunctor) {
	    return new Data_Profunctor_Costrong.Costrong(function () {
	        return profunctorCostar(dictFunctor);
	    }, function (v) {
	        return function (fb) {
	            var bd = v(Data_Functor.map(dictFunctor)(function (a) {
	                return new Data_Tuple.Tuple(a, Data_Tuple.snd(bd));
	            })(fb));
	            return Data_Tuple.fst(bd);
	        };
	    }, function (v) {
	        return function (fb) {
	            var db = v(Data_Functor.map(dictFunctor)(function (a) {
	                return new Data_Tuple.Tuple(Data_Tuple.fst(db), a);
	            })(fb));
	            return Data_Tuple.snd(db);
	        };
	    });
	};
	var cochoiceCostar = function (dictApplicative) {
	    return new Data_Profunctor_Cochoice.Cochoice(function () {
	        return profunctorCostar((dictApplicative.Apply0()).Functor0());
	    }, function (v) {
	        var g = function ($57) {
	            return Data_Either.either(Control_Category.id(Control_Category.categoryFn))(function (r) {
	                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Right(r)));
	            })(v($57));
	        };
	        return function ($58) {
	            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)($58));
	        };
	    }, function (v) {
	        var g = function ($59) {
	            return Data_Either.either(function (l) {
	                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Left(l)));
	            })(Control_Category.id(Control_Category.categoryFn))(v($59));
	        };
	        return function ($60) {
	            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)($60));
	        };
	    });
	};
	var closedCostar = function (dictFunctor) {
	    return new Data_Profunctor_Closed.Closed(function () {
	        return profunctorCostar(dictFunctor);
	    }, function (v) {
	        return function (g) {
	            return function (x) {
	                return v(Data_Functor.map(dictFunctor)(function (v1) {
	                    return v1(x);
	                })(g));
	            };
	        };
	    });
	};
	var categoryCostar = function (dictComonad) {
	    return new Control_Category.Category(function () {
	        return semigroupoidCostar(dictComonad.Extend0());
	    }, Control_Comonad.extract(dictComonad));
	};
	var applyCostar = new Control_Apply.Apply(function () {
	    return functorCostar;
	}, function (v) {
	    return function (v1) {
	        return function (a) {
	            return v(a)(v1(a));
	        };
	    };
	});
	var bindCostar = new Control_Bind.Bind(function () {
	    return applyCostar;
	}, function (v) {
	    return function (f) {
	        return function (x) {
	            var v1 = f(v(x));
	            return v1(x);
	        };
	    };
	});
	var applicativeCostar = new Control_Applicative.Applicative(function () {
	    return applyCostar;
	}, function (a) {
	    return function (v) {
	        return a;
	    };
	});
	var monadCostar = new Control_Monad.Monad(function () {
	    return applicativeCostar;
	}, function () {
	    return bindCostar;
	});
	module.exports = {
	    Costar: Costar,
	    hoistCostar: hoistCostar,
	    newtypeCostar: newtypeCostar,
	    semigroupoidCostar: semigroupoidCostar,
	    categoryCostar: categoryCostar,
	    functorCostar: functorCostar,
	    invariantCostar: invariantCostar,
	    applyCostar: applyCostar,
	    applicativeCostar: applicativeCostar,
	    bindCostar: bindCostar,
	    monadCostar: monadCostar,
	    distributiveCostar: distributiveCostar,
	    profunctorCostar: profunctorCostar,
	    strongCostar: strongCostar,
	    costrongCostar: costrongCostar,
	    cochoiceCostar: cochoiceCostar,
	    closedCostar: closedCostar
	};


/***/ }),
/* 396 */
/*!***************************************!*\
  !*** ./output/Data.Lens.Iso/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Boolean = __webpack_require__(/*! ../Data.Boolean */ 10);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Lens_Internal_Exchange = __webpack_require__(/*! ../Data.Lens.Internal.Exchange */ 377);
	var Data_Lens_Internal_Re = __webpack_require__(/*! ../Data.Lens.Internal.Re */ 384);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var withIso = function (l) {
	    return function (f) {
	        var v = l(new Data_Lens_Internal_Exchange.Exchange(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn)));
	        return f(v.value0)(v.value1);
	    };
	};
	var under = function (l) {
	    return withIso(l)(function (sa) {
	        return function (bt) {
	            return function (ts) {
	                return function ($19) {
	                    return sa(ts(bt($19)));
	                };
	            };
	        };
	    });
	};
	var re = function (t) {
	    return Data_Newtype.unwrap(Data_Lens_Internal_Re.newtypeRe)(t(Control_Category.id(Control_Category.categoryFn)));
	};
	var iso = function (f) {
	    return function (g) {
	        return function (dictProfunctor) {
	            return function (pab) {
	                return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
	            };
	        };
	    };
	};
	var mapping = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (l) {
	            return function (dictProfunctor) {
	                return withIso(l)(function (sa) {
	                    return function (bt) {
	                        return iso(Data_Functor.map(dictFunctor)(sa))(Data_Functor.map(dictFunctor1)(bt))(dictProfunctor);
	                    };
	                });
	            };
	        };
	    };
	};
	var non = function (dictEq) {
	    return function (def) {
	        return function (dictProfunctor) {
	            var g = function (a) {
	                if (Data_Eq.eq(dictEq)(a)(def)) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Data_Maybe.Just(a);
	                };
	                throw new Error("Failed pattern match at Data.Lens.Iso line 44, column 9 - line 45, column 33: " + [ a.constructor.name ]);
	            };
	            return iso(Data_Maybe.fromMaybe(def))(g)(dictProfunctor);
	        };
	    };
	};
	var uncurried = function (dictProfunctor) {
	    return iso(Data_Tuple.uncurry)(Data_Tuple.curry)(dictProfunctor);
	};
	var flipped = function (dictProfunctor) {
	    return iso(Data_Function.flip)(Data_Function.flip)(dictProfunctor);
	};
	var dimapping = function (dictProfunctor) {
	    return function (dictProfunctor1) {
	        return function (f) {
	            return function (g) {
	                return function (dictProfunctor2) {
	                    return withIso(f)(function (sa) {
	                        return function (bt) {
	                            return withIso(g)(function (ssaa) {
	                                return function (bbtt) {
	                                    return iso(Data_Profunctor.dimap(dictProfunctor)(sa)(ssaa))(Data_Profunctor.dimap(dictProfunctor1)(bt)(bbtt))(dictProfunctor2);
	                                };
	                            });
	                        };
	                    });
	                };
	            };
	        };
	    };
	};
	var curried = function (dictProfunctor) {
	    return iso(Data_Tuple.curry)(Data_Tuple.uncurry)(dictProfunctor);
	};
	var cloneIso = function (l) {
	    return function (dictProfunctor) {
	        return withIso(l)(function (x) {
	            return function (y) {
	                return function (p) {
	                    return iso(x)(y)(dictProfunctor)(p);
	                };
	            };
	        });
	    };
	};
	var auf = function (dictProfunctor) {
	    return function (l) {
	        return withIso(l)(function (sa) {
	            return function (bt) {
	                return function (f) {
	                    return function (g) {
	                        return function (e) {
	                            return bt(f(Data_Profunctor.rmap(dictProfunctor)(sa)(g))(e));
	                        };
	                    };
	                };
	            };
	        });
	    };
	};
	var au = function (l) {
	    return withIso(l)(function (sa) {
	        return function (bt) {
	            return function (f) {
	                return function (e) {
	                    return sa(f(bt)(e));
	                };
	            };
	        };
	    });
	};
	module.exports = {
	    iso: iso,
	    withIso: withIso,
	    cloneIso: cloneIso,
	    re: re,
	    au: au,
	    auf: auf,
	    under: under,
	    non: non,
	    curried: curried,
	    uncurried: uncurried,
	    flipped: flipped,
	    mapping: mapping,
	    dimapping: dimapping
	};


/***/ }),
/* 397 */
/*!******************************************!*\
  !*** ./output/Data.Lens.Setter/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_EuclideanRing = __webpack_require__(/*! ../Data.EuclideanRing */ 53);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_HeytingAlgebra = __webpack_require__(/*! ../Data.HeytingAlgebra */ 47);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Maybe = __webpack_require__(/*! ../Data.Maybe */ 64);
	var Data_Ring = __webpack_require__(/*! ../Data.Ring */ 25);
	var Data_Semigroup = __webpack_require__(/*! ../Data.Semigroup */ 23);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var over = function (l) {
	    return l;
	};
	var set = function (l) {
	    return function (b) {
	        return over(l)(Data_Function["const"](b));
	    };
	};
	var setJust = function (p) {
	    return function ($24) {
	        return set(p)(Data_Maybe.Just.create($24));
	    };
	};
	var subOver = function (dictRing) {
	    return function (p) {
	        return function ($25) {
	            return over(p)(Data_Function.flip(Data_Ring.sub(dictRing))($25));
	        };
	    };
	};
	var mulOver = function (dictSemiring) {
	    return function (p) {
	        return function ($26) {
	            return over(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($26));
	        };
	    };
	};
	var modifying = function (dictMonadState) {
	    return function (p) {
	        return function (f) {
	            return Control_Monad_State_Class.modify(dictMonadState)(over(p)(f));
	        };
	    };
	};
	var mulModifying = function (dictMonadState) {
	    return function (dictSemiring) {
	        return function (p) {
	            return function ($27) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($27));
	            };
	        };
	    };
	};
	var subModifying = function (dictMonadState) {
	    return function (dictRing) {
	        return function (p) {
	            return function ($28) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Ring.sub(dictRing))($28));
	            };
	        };
	    };
	};
	var iover = function (l) {
	    return function (f) {
	        return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
	    };
	};
	var divOver = function (dictEuclideanRing) {
	    return function (p) {
	        return function ($29) {
	            return over(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($29));
	        };
	    };
	};
	var divModifying = function (dictMonadState) {
	    return function (dictEuclideanRing) {
	        return function (p) {
	            return function ($30) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($30));
	            };
	        };
	    };
	};
	var disjOver = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function ($31) {
	            return over(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($31));
	        };
	    };
	};
	var disjModifying = function (dictMonadState) {
	    return function (dictHeytingAlgebra) {
	        return function (p) {
	            return function ($32) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($32));
	            };
	        };
	    };
	};
	var conjOver = function (dictHeytingAlgebra) {
	    return function (p) {
	        return function ($33) {
	            return over(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($33));
	        };
	    };
	};
	var conjModifying = function (dictMonadState) {
	    return function (dictHeytingAlgebra) {
	        return function (p) {
	            return function ($34) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($34));
	            };
	        };
	    };
	};
	var assign = function (dictMonadState) {
	    return function (p) {
	        return function (b) {
	            return Control_Monad_State_Class.modify(dictMonadState)(set(p)(b));
	        };
	    };
	};
	var assignJust = function (dictMonadState) {
	    return function (p) {
	        return function ($35) {
	            return assign(dictMonadState)(p)(Data_Maybe.Just.create($35));
	        };
	    };
	};
	var appendOver = function (dictSemigroup) {
	    return function (p) {
	        return function ($36) {
	            return over(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($36));
	        };
	    };
	};
	var appendModifying = function (dictMonadState) {
	    return function (dictSemigroup) {
	        return function (p) {
	            return function ($37) {
	                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($37));
	            };
	        };
	    };
	};
	var addOver = function (dictSemiring) {
	    return function (p) {
	        return function ($38) {
	            return over(p)(Data_Semiring.add(dictSemiring)($38));
	        };
	    };
	};
	var addModifying = function (dictMonadState) {
	    return function (dictSemiring) {
	        return function (p) {
	            return function ($39) {
	                return modifying(dictMonadState)(p)(Data_Semiring.add(dictSemiring)($39));
	            };
	        };
	    };
	};
	module.exports = {
	    over: over,
	    iover: iover,
	    set: set,
	    addOver: addOver,
	    subOver: subOver,
	    mulOver: mulOver,
	    divOver: divOver,
	    disjOver: disjOver,
	    conjOver: conjOver,
	    appendOver: appendOver,
	    setJust: setJust,
	    assign: assign,
	    modifying: modifying,
	    addModifying: addModifying,
	    mulModifying: mulModifying,
	    subModifying: subModifying,
	    divModifying: divModifying,
	    disjModifying: disjModifying,
	    conjModifying: conjModifying,
	    appendModifying: appendModifying,
	    assignJust: assignJust
	};


/***/ }),
/* 398 */
/*!*********************************************!*\
  !*** ./output/Data.Lens.Traversal/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Eq = __webpack_require__(/*! ../Data.Eq */ 13);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Lens_Indexed = __webpack_require__(/*! ../Data.Lens.Indexed */ 399);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Internal_Wander = __webpack_require__(/*! ../Data.Lens.Internal.Wander */ 370);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Monoid_Disj = __webpack_require__(/*! ../Data.Monoid.Disj */ 74);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor_Star = __webpack_require__(/*! ../Data.Profunctor.Star */ 372);
	var Data_Traversable = __webpack_require__(/*! ../Data.Traversable */ 79);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var traversed = function (dictTraversable) {
	    return function (dictWander) {
	        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
	            return Data_Traversable.traverse(dictTraversable)(dictApplicative);
	        });
	    };
	};
	var traverseOf = function (dictApplicative) {
	    return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star);
	};
	var sequenceOf = function (dictApplicative) {
	    return function (t) {
	        return traverseOf(dictApplicative)(t)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var itraverseOf = function (dictApplicative) {
	    return function (t) {
	        return function ($25) {
	            return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star)(function ($26) {
	                return t(Data_Lens_Internal_Indexed.Indexed($26));
	            })(Data_Tuple.uncurry($25));
	        };
	    };
	};
	var iforOf = function (dictApplicative) {
	    return function ($27) {
	        return Data_Function.flip(itraverseOf(dictApplicative)($27));
	    };
	};
	var failover = function (dictAlternative) {
	    return function (t) {
	        return function (f) {
	            return function (s) {
	                var v = Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(t(Data_Profunctor_Star.Star(function ($28) {
	                    return Data_Tuple.Tuple.create(true)(f($28));
	                })))(s);
	                if (v.value0) {
	                    return Control_Applicative.pure(dictAlternative.Applicative0())(v.value1);
	                };
	                if (!v.value0) {
	                    return Control_Plus.empty(dictAlternative.Plus1());
	                };
	                throw new Error("Failed pattern match at Data.Lens.Traversal line 55, column 18 - line 57, column 32: " + [ v.constructor.name ]);
	            };
	        };
	    };
	};
	var elementsOf = function (dictWander) {
	    return function (tr) {
	        return function (pr) {
	            return Data_Lens_Indexed.iwander(function (dictApplicative) {
	                return function (f) {
	                    return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(tr(Data_Lens_Internal_Wander.wanderStar(dictApplicative))(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(function (v) {
	                        var $22 = pr(v.value0);
	                        if ($22) {
	                            return f(v.value0)(v.value1);
	                        };
	                        return Control_Applicative.pure(dictApplicative)(v.value1);
	                    }))));
	                };
	            })(dictWander);
	        };
	    };
	};
	var element = function (dictWander) {
	    return function (n) {
	        return function (tr) {
	            return Data_Lens_Indexed.unIndex((dictWander.Choice1()).Profunctor0())(elementsOf(dictWander)(function (dictWander1) {
	                return Data_Lens_Indexed.positions(function (dictWander2) {
	                    return tr(dictWander2);
	                })(dictWander1);
	            })(function (v) {
	                return v === n;
	            }));
	        };
	    };
	};
	module.exports = {
	    traversed: traversed,
	    traverseOf: traverseOf,
	    sequenceOf: sequenceOf,
	    failover: failover,
	    elementsOf: elementsOf,
	    itraverseOf: itraverseOf,
	    element: element
	};


/***/ }),
/* 399 */
/*!*******************************************!*\
  !*** ./output/Data.Lens.Indexed/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Category = __webpack_require__(/*! ../Control.Category */ 7);
	var Control_Monad_State = __webpack_require__(/*! ../Control.Monad.State */ 400);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_State_Trans = __webpack_require__(/*! ../Control.Monad.State.Trans */ 401);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Functor_Compose = __webpack_require__(/*! ../Data.Functor.Compose */ 119);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Lens_Internal_Indexed = __webpack_require__(/*! ../Data.Lens.Internal.Indexed */ 369);
	var Data_Lens_Internal_Wander = __webpack_require__(/*! ../Data.Lens.Internal.Wander */ 370);
	var Data_Lens_Iso_Newtype = __webpack_require__(/*! ../Data.Lens.Iso.Newtype */ 402);
	var Data_Lens_Setter = __webpack_require__(/*! ../Data.Lens.Setter */ 397);
	var Data_Lens_Types = __webpack_require__(/*! ../Data.Lens.Types */ 376);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Profunctor = __webpack_require__(/*! ../Data.Profunctor */ 121);
	var Data_Profunctor_Star = __webpack_require__(/*! ../Data.Profunctor.Star */ 372);
	var Data_Profunctor_Strong = __webpack_require__(/*! ../Data.Profunctor.Strong */ 374);
	var Data_Semiring = __webpack_require__(/*! ../Data.Semiring */ 27);
	var Data_TraversableWithIndex = __webpack_require__(/*! ../Data.TraversableWithIndex */ 144);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var unIndex = function (dictProfunctor) {
	    return function (l) {
	        return function ($12) {
	            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.snd)(Control_Category.id(Control_Category.categoryFn))($12)));
	        };
	    };
	};
	var reindexed = function (dictProfunctor) {
	    return function (ij) {
	        return function (v) {
	            return function ($13) {
	                return v(Data_Lens_Setter.over(Data_Lens_Iso_Newtype._Newtype(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Profunctor.profunctorFn))(Data_Profunctor.lmap(dictProfunctor)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(ij)))($13));
	            };
	        };
	    };
	};
	var iwander = function (itr) {
	    return function (dictWander) {
	        return function ($14) {
	            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
	                return function (f) {
	                    return function (s) {
	                        return itr(dictApplicative)(Data_Tuple.curry(f))(s);
	                    };
	                };
	            })(Data_Newtype.unwrap(Data_Lens_Internal_Indexed.newtypeIndexed)($14));
	        };
	    };
	};
	var positions = function (tr) {
	    return function (dictWander) {
	        return iwander(function (dictApplicative) {
	            return function (f) {
	                return function (s) {
	                    return Data_Function.flip(Control_Monad_State.evalState)(0)(Data_Newtype.unwrap(Data_Functor_Compose.newtypeCompose)(Data_Function.flip(Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar))(s)(tr(Data_Lens_Internal_Wander.wanderStar(Data_Functor_Compose.applicativeCompose(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(dictApplicative)))(function (a) {
	                        return Data_Functor_Compose.Compose(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(f)(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(a)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
	                            return v + 1 | 0;
	                        })));
	                    }))));
	                };
	            };
	        })(dictWander);
	    };
	};
	var itraversed = function (dictTraversableWithIndex) {
	    return function (dictWander) {
	        return iwander(function (dictApplicative) {
	            return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative);
	        })(dictWander);
	    };
	};
	var asIndex = function (dictProfunctor) {
	    return function (l) {
	        return function ($15) {
	            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.fst)(Control_Category.id(Control_Category.categoryFn))($15)));
	        };
	    };
	};
	module.exports = {
	    unIndex: unIndex,
	    asIndex: asIndex,
	    reindexed: reindexed,
	    iwander: iwander,
	    itraversed: itraversed,
	    positions: positions
	};


/***/ }),
/* 400 */
/*!*********************************************!*\
  !*** ./output/Control.Monad.State/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_State_Trans = __webpack_require__(/*! ../Control.Monad.State.Trans */ 401);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Identity = __webpack_require__(/*! ../Data.Identity */ 94);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var withState = Control_Monad_State_Trans.withStateT;
	var runState = function (v) {
	    return function ($16) {
	        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($16));
	    };
	};
	var mapState = function (f) {
	    return Control_Monad_State_Trans.mapStateT(function ($17) {
	        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($17)));
	    });
	};
	var execState = function (v) {
	    return function (s) {
	        var v1 = v(s);
	        return v1.value1;
	    };
	};
	var evalState = function (v) {
	    return function (s) {
	        var v1 = v(s);
	        return v1.value0;
	    };
	};
	module.exports = {
	    runState: runState,
	    evalState: evalState,
	    execState: execState,
	    mapState: mapState,
	    withState: withState
	};


/***/ }),
/* 401 */
/*!***************************************************!*\
  !*** ./output/Control.Monad.State.Trans/index.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Control_Alt = __webpack_require__(/*! ../Control.Alt */ 35);
	var Control_Alternative = __webpack_require__(/*! ../Control.Alternative */ 65);
	var Control_Applicative = __webpack_require__(/*! ../Control.Applicative */ 4);
	var Control_Apply = __webpack_require__(/*! ../Control.Apply */ 5);
	var Control_Bind = __webpack_require__(/*! ../Control.Bind */ 2);
	var Control_Lazy = __webpack_require__(/*! ../Control.Lazy */ 95);
	var Control_Monad = __webpack_require__(/*! ../Control.Monad */ 38);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ../Control.Monad.Cont.Class */ 84);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ../Control.Monad.Eff.Class */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ../Control.Monad.Error.Class */ 33);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ../Control.Monad.Reader.Class */ 88);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ../Control.Monad.Rec.Class */ 89);
	var Control_Monad_State_Class = __webpack_require__(/*! ../Control.Monad.State.Class */ 100);
	var Control_Monad_Trans_Class = __webpack_require__(/*! ../Control.Monad.Trans.Class */ 104);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ../Control.Monad.Writer.Class */ 105);
	var Control_MonadPlus = __webpack_require__(/*! ../Control.MonadPlus */ 106);
	var Control_MonadZero = __webpack_require__(/*! ../Control.MonadZero */ 66);
	var Control_Plus = __webpack_require__(/*! ../Control.Plus */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ../Control.Semigroupoid */ 8);
	var Data_Function = __webpack_require__(/*! ../Data.Function */ 9);
	var Data_Functor = __webpack_require__(/*! ../Data.Functor */ 29);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var Data_Tuple = __webpack_require__(/*! ../Data.Tuple */ 101);
	var Data_Unit = __webpack_require__(/*! ../Data.Unit */ 15);
	var Prelude = __webpack_require__(/*! ../Prelude */ 45);
	var StateT = function (x) {
	    return x;
	};
	var withStateT = function (f) {
	    return function (v) {
	        return function ($107) {
	            return v(f($107));
	        };
	    };
	};
	var runStateT = function (v) {
	    return v;
	};
	var newtypeStateT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, StateT);
	var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (s) {
	            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
	                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
	            });
	        };
	    };
	});
	var mapStateT = function (f) {
	    return function (v) {
	        return function ($108) {
	            return f(v($108));
	        };
	    };
	};
	var lazyStateT = new Control_Lazy.Lazy(function (f) {
	    return function (s) {
	        var v = f(Data_Unit.unit);
	        return v(s);
	    };
	});
	var functorStateT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (s) {
	                return Data_Functor.map(dictFunctor)(function (v1) {
	                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
	                })(v(s));
	            };
	        };
	    });
	};
	var execStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
	        };
	    };
	};
	var evalStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
	        };
	    };
	};
	var monadStateT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeStateT(dictMonad);
	    }, function () {
	        return bindStateT(dictMonad);
	    });
	};
	var bindStateT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyStateT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
	                    var v3 = f(v1.value0);
	                    return v3(v1.value1);
	                });
	            };
	        };
	    });
	};
	var applyStateT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
	    }, Control_Monad.ap(monadStateT(dictMonad)));
	};
	var applicativeStateT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyStateT(dictMonad);
	    }, function (a) {
	        return function (s) {
	            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
	        };
	    });
	};
	var monadAskStateT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadStateT(dictMonadAsk.Monad0());
	    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderStateT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskStateT(dictMonadReader.MonadAsk0());
	    }, function ($109) {
	        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($109));
	    });
	};
	var monadContStateT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadStateT(dictMonadCont.Monad0());
	    }, function (f) {
	        return function (s) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var v = f(function (a) {
	                    return function (s$prime) {
	                        return c(new Data_Tuple.Tuple(a, s$prime));
	                    };
	                });
	                return v(s);
	            });
	        };
	    });
	};
	var monadEffState = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadStateT(dictMonadEff.Monad0());
	    }, function ($110) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($110));
	    });
	};
	var monadRecStateT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadStateT(dictMonadRec.Monad0());
	    }, function (f) {
	        return function (a) {
	            var f$prime = function (v) {
	                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
	                    var v1 = f(v.value0);
	                    return v1;
	                })()(v.value1))(function (v1) {
	                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
	                        if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                            return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 88, column 16 - line 90, column 40: " + [ v1.value0.constructor.name ]);
	                    })());
	                });
	            };
	            return function (s) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
	            };
	        };
	    });
	};
	var monadStateStateT = function (dictMonad) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadStateT(dictMonad);
	    }, function (f) {
	        return StateT(function ($111) {
	            return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
	        });
	    });
	};
	var monadTellStateT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadStateT(dictMonadTell.Monad0());
	    }, function ($112) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($112));
	    });
	};
	var monadWriterStateT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellStateT(dictMonadWriter.MonadTell0());
	    }, function (m) {
	        return function (s) {
	            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            });
	        };
	    }, function (m) {
	        return function (s) {
	            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m(s))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            }));
	        };
	    });
	};
	var monadThrowStateT = function (dictMonadThrow) {
	    return new Control_Monad_Error_Class.MonadThrow(function () {
	        return monadStateT(dictMonadThrow.Monad0());
	    }, function (e) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
	    });
	};
	var monadErrorStateT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadThrowStateT(dictMonadError.MonadThrow0());
	    }, function (v) {
	        return function (h) {
	            return function (s) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
	                    var v1 = h(e);
	                    return v1(s);
	                });
	            };
	        };
	    });
	};
	var altStateT = function (dictMonad) {
	    return function (dictAlt) {
	        return new Control_Alt.Alt(function () {
	            return functorStateT(dictAlt.Functor0());
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
	                };
	            };
	        });
	    };
	};
	var plusStateT = function (dictMonad) {
	    return function (dictPlus) {
	        return new Control_Plus.Plus(function () {
	            return altStateT(dictMonad)(dictPlus.Alt0());
	        }, function (v) {
	            return Control_Plus.empty(dictPlus);
	        });
	    };
	};
	var alternativeStateT = function (dictMonad) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeStateT(dictMonad);
	        }, function () {
	            return plusStateT(dictMonad)(dictAlternative.Plus1());
	        });
	    };
	};
	var monadZeroStateT = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
	    }, function () {
	        return monadStateT(dictMonadZero.Monad0());
	    });
	};
	var monadPlusStateT = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroStateT(dictMonadPlus.MonadZero0());
	    });
	};
	module.exports = {
	    StateT: StateT,
	    runStateT: runStateT,
	    evalStateT: evalStateT,
	    execStateT: execStateT,
	    mapStateT: mapStateT,
	    withStateT: withStateT,
	    newtypeStateT: newtypeStateT,
	    functorStateT: functorStateT,
	    applyStateT: applyStateT,
	    applicativeStateT: applicativeStateT,
	    altStateT: altStateT,
	    plusStateT: plusStateT,
	    alternativeStateT: alternativeStateT,
	    bindStateT: bindStateT,
	    monadStateT: monadStateT,
	    monadRecStateT: monadRecStateT,
	    monadZeroStateT: monadZeroStateT,
	    monadPlusStateT: monadPlusStateT,
	    monadTransStateT: monadTransStateT,
	    lazyStateT: lazyStateT,
	    monadEffState: monadEffState,
	    monadContStateT: monadContStateT,
	    monadThrowStateT: monadThrowStateT,
	    monadErrorStateT: monadErrorStateT,
	    monadAskStateT: monadAskStateT,
	    monadReaderStateT: monadReaderStateT,
	    monadStateStateT: monadStateStateT,
	    monadTellStateT: monadTellStateT,
	    monadWriterStateT: monadWriterStateT
	};


/***/ }),
/* 402 */
/*!***********************************************!*\
  !*** ./output/Data.Lens.Iso.Newtype/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Generated by purs version 0.11.7
	"use strict";
	var Data_Lens_Iso = __webpack_require__(/*! ../Data.Lens.Iso */ 396);
	var Data_Newtype = __webpack_require__(/*! ../Data.Newtype */ 44);
	var _Newtype = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (dictProfunctor) {
	            return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
	        };
	    };
	};
	module.exports = {
	    _Newtype: _Newtype
	};


/***/ })
/******/ ]);